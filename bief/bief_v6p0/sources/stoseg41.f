C                       *******************
                        SUBROUTINE STOSEG41
C                       *******************
C
     *(IFABOR,NELEM,NELMAX,IELM,IKLE,NBOR,NPTFR,
     * GLOSEG,MAXSEG,ELTSEG,ORISEG,NSEG,KP1BOR,NELBOR,NULONE,NELMAX2,
     * NELEM2,NPTFR2,NPOIN2,NPLAN,KNOLG)
C
C***********************************************************************
C BIEF VERSION 6.0      19/10/2009    J-M HERVOUET (LNHE) 01 30 87 80 18
C
C 11/08/09 JMH: CROSSED AND VERTICAL SEGMENTS INVERTED IN THE NUMBERING
C               THIS IS FOR FINITE VOLUMES WHICH DO NOT USE CROSSED
C               SEGMENTS. SUBROUTINES ACCORDINGLY CHANGED:
C               AS3_4141_Q, AS3_4141_S, PREVERSEG, GETTRISEG
C               PARCOM2_SEG AND
C               UPWINDSEG, MURD3D, MURD3D_POS (TELEMAC-3D)              
C
C 16/10/09 JMH: NUMBERING OF CROSSED SEGMENTS CHANGED, TO FACILITATE
C               PARALLELISM
C
C***********************************************************************
C
C FONCTION : BUILDING THE DATA STRUCTURE FOR EDGE-BASED STORAGE
C            IN PRISMS
C
C
C            LOCAL NUMBERING OF SEGMENTS CHOSEN HERE IN A PRISM
C
C            HORIZONTAL
C
C            01 : POINT 1 TO 2 (OR THE CONTRARY DEPENDING OF ORISEG)
C            02 : POINT 2 TO 3 (OR THE CONTRARY DEPENDING OF ORISEG)
C            03 : POINT 3 TO 1 (OR THE CONTRARY DEPENDING OF ORISEG)
C            04 : POINT 4 TO 5 (OR THE CONTRARY DEPENDING OF ORISEG)
C            05 : POINT 5 TO 6 (OR THE CONTRARY DEPENDING OF ORISEG)
C            06 : POINT 6 TO 4 (OR THE CONTRARY DEPENDING OF ORISEG)
C
C            VERTICAL
C
C            07 : POINT 1 TO 4
C            08 : POINT 2 TO 5
C            09 : POINT 3 TO 6
C
C            CROSSED
C
C            10 : POINT 1 TO 5   
C            11 : POINT 2 TO 4    
C            12 : POINT 2 TO 6    
C            13 : POINT 3 TO 5    
C            14 : POINT 3 TO 4   
C            15 : POINT 1 TO 6   
C
C-----------------------------------------------------------------------
C                             ARGUMENTS
C .________________.____.______________________________________________.
C |      NOM       |MODE|                   ROLE                       |
C |________________|____|______________________________________________|
C |    IFABOR      |<-- | TABLEAU DES VOISINS DES FACES.
C |    NELEM       | -->| NOMBRE D'ELEMENTS DANS LE MAILLAGE.
C |    NELMAX      | -->| NOMBRE MAXIMUM D'ELEMENTS DANS LE MAILLAGE.
C |                |    | (CAS DES MAILLAGES ADAPTATIFS)
C |    IELM        | -->| 11: TRIANGLES.
C |                |    | 21: QUADRILATERES.
C |    IKLE        | -->| NUMEROS GLOBAUX DES POINTS DE CHAQUE ELEMENT.
C |    NBOR        | -->| GLOBAL NUMBERS OF BOUNDARY POINTS.
C |    NPTFR       | -->| NUMBER OF BOUNDARY POINTS.
C |    GLOSEG      |<-- | GLOBAL NUMBERS OF POINTS OF SEGMENTS.
C |    MAXSEG      |<-- | 1st DIMENSION OF MAXSEG.
C |    ELTSEG      |<-- | SEGMENTS OF EVERY TRIANGLE.
C |    ORISEG      |<-- | ORIENTATION OF SEGMENTS OF EVERY TRIANGLE.
C |    NSEG        |<-- | NUMBER OF SEGMENTS OF THE MESH.
C |    KP1BOR      | -->| NUMBER OF POINT FOLLOWING BOUNDARY POINT K
C |                |    | (I.E. K+1 MOST OF THE TIME BUT NOT ALWAYS).
C |    NELBOR      | -->| NUMBER OF ELEMENT CONTAINING SEGMENT K OF
C |                |    | THE BOUNDARY.
C |    NULONE      | -->| LOCAL NUMBER OF BOUNDARY POINTS IN A BOUNDARY
C |                |    | ELEMENT.
C |________________|____|_______________________________________________
C  MODE: -->(DONNEE NON MODIFIEE),<--(RESULTAT),<-->(DONNEE MODIFIEE)
C-----------------------------------------------------------------------
C
C CALLING PROGRAMME : INBIEF
C
C***********************************************************************
C
      USE BIEF, EX_STOSEG41 => STOSEG41
C
      IMPLICIT NONE
      INTEGER LNG,LU
      COMMON/INFO/LNG,LU
C
C+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+      
C
      INTEGER, INTENT(IN)    :: NELMAX,NELMAX2,NPTFR,NSEG,MAXSEG,IELM
      INTEGER, INTENT(IN)    :: NELEM,NELEM2,NPTFR2,NPOIN2,NPLAN
      INTEGER, INTENT(IN)    :: NBOR(NPTFR2),KP1BOR(NPTFR2)
      INTEGER, INTENT(IN)    :: IFABOR(NELMAX2,*),IKLE(NELMAX,6)
      INTEGER, INTENT(IN)    :: NELBOR(NPTFR2),NULONE(NPTFR2)
      INTEGER, INTENT(INOUT) :: GLOSEG(MAXSEG,2)
      INTEGER, INTENT(INOUT) :: ELTSEG(NELMAX,15),ORISEG(NELMAX,15) 
      INTEGER, INTENT(IN)    :: KNOLG(*)    
C
C+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
C
      INTEGER I1,I2,I3,IELEM,I,ONE,TWO
      INTEGER NSEG2D,IPLAN,ISEG2D,ISEG3D,IELEM3D,NSEGH,NSEGV
C
C-----------------------------------------------------------------------
C
      IF(IELM.NE.41) THEN
        IF (LNG.EQ.1) WRITE(LU,500) IELM
        IF (LNG.EQ.2) WRITE(LU,501) IELM
500     FORMAT(1X,'STOSEG41 (BIEF) : ELEMENT NON PREVU : ',1I6)
501     FORMAT(1X,'STOSEG41 (BIEF) : UNEXPECTED ELEMENT: ',1I6)
        CALL PLANTE(1)
        STOP
      ENDIF
C
C-----------------------------------------------------------------------
C
C     BUILDING 2D SEGMENTS (THE FIRST IN THE NUMBERING)
C
C     IN //, THE NUMBER OF SEGMENTS IN THE CONTOUR LINE IS NOT NPTFR2
C     NSEG2D=(3*NELEM2+NPTFR2)/2
      NSEG2D=NBSEG(11)
      NSEGH=NSEG2D*NPLAN
      NSEGV=(NPLAN-1)*NPOIN2
C
      CALL STOSEG(IFABOR,NELEM2,NELMAX,NELMAX2,11,IKLE,NBOR,NPTFR2,
     *            GLOSEG,MAXSEG,ELTSEG,ORISEG,NSEG2D,
     *            KP1BOR,NELBOR,NULONE,KNOLG)
C
C-----------------------------------------------------------------------
C
C     COMPLETING HORIZONTAL SEGMENTS (1,2,3,4,5,6)
C
      DO IPLAN=2,NPLAN
      DO ISEG2D=1,NSEG2D
        ISEG3D=ISEG2D+(IPLAN-1)*NSEG2D
        GLOSEG(ISEG3D,1)=GLOSEG(ISEG2D,1)+NPOIN2*(IPLAN-1)
        GLOSEG(ISEG3D,2)=GLOSEG(ISEG2D,2)+NPOIN2*(IPLAN-1)
      ENDDO
      ENDDO
C
C     VERTICAL SEGMENTS (7,8,9)
C
      DO IPLAN=1,NPLAN-1
      DO I=1,NPOIN2
        ISEG3D=NSEGH+NPOIN2*(IPLAN-1)+I
        GLOSEG(ISEG3D,1)=NPOIN2*(IPLAN-1)+I
        GLOSEG(ISEG3D,2)=NPOIN2*(IPLAN  )+I
      ENDDO
      ENDDO
C
C-----------------------------------------------------------------------
C
C     ARRAY ELTSEG GIVING GLOBAL NUMBERS OF SEGMENTS IN A PRISM
C     ARRAY ORISEG GIVING ORIENTATION OF SEGMENT
C
C     COMPLETING SEGMENTS 1,2,3
C
      IF(NPLAN.GT.2) THEN
      DO IPLAN=2,NPLAN-1
        DO IELEM=1,NELEM2
          IELEM3D=IELEM+(IPLAN-1)*NELEM2
          ELTSEG(IELEM3D,1)=ELTSEG(IELEM,1)+NSEG2D*(IPLAN-1)
          ELTSEG(IELEM3D,2)=ELTSEG(IELEM,2)+NSEG2D*(IPLAN-1)
          ELTSEG(IELEM3D,3)=ELTSEG(IELEM,3)+NSEG2D*(IPLAN-1)
          ORISEG(IELEM3D,1)=ORISEG(IELEM,1)
          ORISEG(IELEM3D,2)=ORISEG(IELEM,2)
          ORISEG(IELEM3D,3)=ORISEG(IELEM,3)
        ENDDO
      ENDDO
      ENDIF
C
C     SEGMENTS 4,5,6 (=SEGMENTS 1,2,3 + NSEG2D)
C
      DO IPLAN=1,NPLAN-1
        DO IELEM=1,NELEM2
          IELEM3D=IELEM+(IPLAN-1)*NELEM2
          ELTSEG(IELEM3D,4)=ELTSEG(IELEM3D,1)+NSEG2D
          ELTSEG(IELEM3D,5)=ELTSEG(IELEM3D,2)+NSEG2D
          ELTSEG(IELEM3D,6)=ELTSEG(IELEM3D,3)+NSEG2D
          ORISEG(IELEM3D,4)=ORISEG(IELEM,1)
          ORISEG(IELEM3D,5)=ORISEG(IELEM,2)
          ORISEG(IELEM3D,6)=ORISEG(IELEM,3)
        ENDDO
      ENDDO
C
C     SEGMENTS 7,8,9 (VERTICAL SEGMENTS)  SEE SECTION 3)
C
      DO IPLAN=1,NPLAN-1
        DO IELEM=1,NELEM2
          IELEM3D=IELEM+(IPLAN-1)*NELEM2
          I1=IKLE(IELEM,1)
          I2=IKLE(IELEM,2)
          I3=IKLE(IELEM,3)
          ELTSEG(IELEM3D,7)=NSEGH+NPOIN2*(IPLAN-1)+I1
          ELTSEG(IELEM3D,8)=NSEGH+NPOIN2*(IPLAN-1)+I2
          ELTSEG(IELEM3D,9)=NSEGH+NPOIN2*(IPLAN-1)+I3
          ORISEG(IELEM3D,7)=1
          ORISEG(IELEM3D,8)=1
          ORISEG(IELEM3D,9)=1
        ENDDO
      ENDDO
C
C     SEGMENTS 10 TO 15 (CROSSED SEGMENTS)
C 
C     THE PROBLEM IS TO FIND A GLOBAL NUMBERING OF CROSSED SEGMENTS
C     WHICH IS INDEPENDANT OF THE PRISM CONSIDERED, SO THAT WHEN
C     ASSEMBLING THE ISEG3D IS THE CORRECT ONE
C     HERE WE TAKE AS CROSSED SEGMENT 1 THE ONE THAT STARTS
C     FROM THE ORIGIN OF THE ORIENTED HORIZONTAL SEGMENT
C
C     FOR EVERY VERTICAL RECTANGLE IN A PRISM
C     WHEN THE HORIZONTAL SEGMENT HAS ORISEG = 1, THE CROSSED
C     SEGMENT NUMBER 1 IS THUS THE 10,12 OR 14
C     WHEN THE HORIZONTAL SEGMENT HAS ORISEG = 2, THE CROSSED
C     SEGMENT NUMBER 1 IS THUS THE 11,13 OR 15
C
C     IN THE GLOBAL NUMBERING OF SEGMENTS
C     THE ORISEG=1 SEGMENTS ARE PUT FIRST (NSEG2D PER LAYER)
C     THE ORISEG=2 SEGMENTS ARE PUT AFTER (NSEG2D PER LAYER)
C
      DO IPLAN=1,NPLAN-1
        DO IELEM=1,NELEM2
          IELEM3D=IELEM+(IPLAN-1)*NELEM2
          DO I=1,3
            ISEG2D=ELTSEG(IELEM,I)
            ISEG3D=NSEGH+NSEGV+NSEG2D*2*(IPLAN-1)+ISEG2D
            ONE=ISEG3D
            TWO=ISEG3D+NSEG2D
            IF(ORISEG(IELEM,I).EQ.1) THEN
              ELTSEG(IELEM3D,8+2*I)  =ONE
              ELTSEG(IELEM3D,8+2*I+1)=TWO
            ELSE
              ELTSEG(IELEM3D,8+2*I+1)=ONE 
              ELTSEG(IELEM3D,8+2*I)  =TWO  
            ENDIF
C           ONE: FOLLOWS ISEG2D
            GLOSEG(ONE,1)=GLOSEG(ISEG2D,1)+(IPLAN-1)*NPOIN2
            GLOSEG(ONE,2)=GLOSEG(ISEG2D,2)+(IPLAN  )*NPOIN2
C           BACKWARDS WITH RESPECT TO ISEG2D
            GLOSEG(TWO,1)=GLOSEG(ISEG2D,2)+(IPLAN-1)*NPOIN2
            GLOSEG(TWO,2)=GLOSEG(ISEG2D,1)+(IPLAN  )*NPOIN2
          ENDDO
          ORISEG(IELEM3D,10)=1
          ORISEG(IELEM3D,11)=1
          ORISEG(IELEM3D,12)=1
          ORISEG(IELEM3D,13)=1
          ORISEG(IELEM3D,14)=1
          ORISEG(IELEM3D,15)=1
        ENDDO
      ENDDO
C
C-----------------------------------------------------------------------
C
      RETURN
      END
