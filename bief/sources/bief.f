!                    ***********
                     MODULE BIEF
!                    ***********
!
!
!***********************************************************************
! BIEF
!***********************************************************************
!
!brief    INTERFACES OF BIEF PUBLIC SUBROUTINES
!+
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
      USE BIEF_DEF
      INTERFACE
!
!------------------------------------------------------------------------
!
!     DEFINITION OF INTERFACES
!
        SUBROUTINE ADDBLO( BLOC , OBJ )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT)      :: BLOC
          TYPE(BIEF_OBJ), INTENT(IN), TARGET :: OBJ
        END SUBROUTINE
!
        SUBROUTINE ALLBLO( BLO , NOM )
          USE BIEF_DEF
          IMPLICIT NONE
          CHARACTER(LEN=6), INTENT(IN) :: NOM
          TYPE(BIEF_OBJ), INTENT(INOUT) :: BLO
        END SUBROUTINE
!
        SUBROUTINE ALLBLO_IN_BLOCK( BLO , N , NOMGEN )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: BLO
          INTEGER, INTENT(IN) :: N
          CHARACTER(LEN=6), INTENT(IN) :: NOMGEN
        END SUBROUTINE
!
        SUBROUTINE BIEF_ALLMAT(MAT,NOM,IELM1,IELM2,CFG,
     &                         TYPDIA,TYPEXT,MESH)
        USE BIEF_DEF
        IMPLICIT NONE
        TYPE(BIEF_OBJ), INTENT(INOUT) :: MAT
        INTEGER, INTENT(IN)           :: IELM1,IELM2,CFG(2)
        CHARACTER(LEN=1), INTENT(IN)  :: TYPDIA,TYPEXT
        CHARACTER(LEN=6), INTENT(IN)  :: NOM
        TYPE(BIEF_MESH) , INTENT(IN)  :: MESH
        END SUBROUTINE
!
        SUBROUTINE BIEF_ALLVEC(NAT,VEC,NOM,IELM,DIM2,STATUT,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ) , INTENT(INOUT)        :: VEC
          INTEGER        , INTENT(IN)           :: NAT,IELM
          INTEGER        , INTENT(IN), OPTIONAL :: DIM2,STATUT
          CHARACTER*6    , INTENT(IN)           :: NOM
          TYPE(BIEF_MESH) , INTENT(IN)  :: MESH
        END SUBROUTINE
!
        SUBROUTINE BIEF_ALLVEC_IN_BLOCK(BLO,N,NAT,NOMGEN,IELM,
     &                                  NDIM,STATUT,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: BLO
          INTEGER, INTENT(IN) :: N,NAT,IELM,NDIM,STATUT
          CHARACTER(LEN=6), INTENT(IN) :: NOMGEN
          TYPE(BIEF_MESH) , INTENT(IN) :: MESH
        END SUBROUTINE
!
        SUBROUTINE ALMESH(MESH,NOM,IELM,SPHERI,CFG,NFIC,
     &                    EQUA,NPLAN,NPMAX,NPTFRX,NELMAX,I3,I4,
     &                    FILE_FORMAT)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
          INTEGER, INTENT(IN) :: IELM,NFIC
          INTEGER, INTENT(INOUT) :: CFG(2)
          CHARACTER(LEN=20), INTENT(IN) :: EQUA
          CHARACTER(LEN=6), INTENT(IN) :: NOM
          LOGICAL, INTENT(IN) :: SPHERI
          INTEGER, INTENT(IN),OPTIONAL :: NPMAX,NPTFRX,NELMAX,NPLAN
          INTEGER, INTENT(INOUT),OPTIONAL :: I3,I4
          CHARACTER(LEN=8), INTENT(IN), OPTIONAL :: FILE_FORMAT
        END SUBROUTINE
!
!       SUBROUTINE AS3_1111_Q
!    *(XM,NSEG1,XMT,NELMAX,NELEM,ELTSEG1,ELTSEG2,ELTSEG3,
!    *                           ORISEG1,ORISEG2,ORISEG3)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG1
!     INTEGER         , INTENT(IN)    :: ELTSEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG3(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG3(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: XMT(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG1,2)
!       END SUBROUTINE
!
!       SUBROUTINE AS3_1111_S
!    *(XM,NSEG1,XMT,NELMAX,NELEM,ELTSEG1,ELTSEG2,ELTSEG3)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG1
!     INTEGER         , INTENT(IN)    :: ELTSEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG3(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: XMT(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG1)
!       END SUBROUTINE
!
!       SUBROUTINE AS3_1112
!    *(XM,NSEG11,NSEG12,XMT,NELMAX,NELEM,ELTSEG1,ELTSEG2,ELTSEG3,
!    *                                   ELTSEG4,ELTSEG5,ELTSEG6,
!    *                                   ORISEG1,ORISEG2,ORISEG3)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG11,NSEG12
!     INTEGER         , INTENT(IN)    :: ELTSEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG3(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG4(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG5(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG6(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMT(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG11+NSEG12)
!       END SUBROUTINE
!
!       SUBROUTINE AS3_1211
!    *(XM,NSEG11,NSEG12,XMT,NELMAX,NELEM,ELTSEG1,ELTSEG2,ELTSEG3,
!    *                                   ELTSEG4,ELTSEG5,ELTSEG6,
!    *                                   ORISEG1,ORISEG2,ORISEG3)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG11,NSEG12
!     INTEGER         , INTENT(IN)    :: ELTSEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG3(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG4(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG5(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG6(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMT(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG11+NSEG12)
!       END SUBROUTINE
!
!       SUBROUTINE AS3_1212_Q
!    *(XM,NSEG11,NSEG12,XMT,NELMAX,NELEM,ELTSEG1,ELTSEG2,ELTSEG3,
!    *                                   ELTSEG4,ELTSEG5,ELTSEG6,
!    *                                   ORISEG1,ORISEG2,ORISEG3)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG11,NSEG12
!     INTEGER         , INTENT(IN)    :: ELTSEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG3(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG4(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG5(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG6(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ORISEG3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMT(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG12*2)
!       END SUBROUTINE
!
!       SUBROUTINE AS3_1212_S
!    *(XM,NSEG11,NSEG12,XMT,NELMAX,NELEM,ELTSEG1,ELTSEG2,ELTSEG3,
!    *                                   ELTSEG4,ELTSEG5,ELTSEG6)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG11,NSEG12
!     INTEGER         , INTENT(IN)    :: ELTSEG1(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG2(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG3(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG4(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG5(NELMAX)
!     INTEGER         , INTENT(IN)    :: ELTSEG6(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: XMT(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG12)
!       END SUBROUTINE
!
!       SUBROUTINE AS3_4141_Q
!    *(XM,NSEG1,XMT,DIM1XMT,DIM2XMT,STOXMT,
!    * NELMAX,NELEM,ELTSEG,ORISEG)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG1
!     INTEGER         , INTENT(IN)    :: DIM1XMT,DIM2XMT,STOXMT
!     INTEGER         , INTENT(IN)    :: ELTSEG(NELMAX,15)
!     INTEGER         , INTENT(IN)    :: ORISEG(NELMAX,15)
!     DOUBLE PRECISION, INTENT(IN)    :: XMT(DIM1XMT,DIM2XMT)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG1,2)
!       END SUBROUTINE
!
!       SUBROUTINE AS3_4141_S(XM,NSEG1,XMT,NELMAX,NELEM,ELTSEG)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELMAX,NELEM,NSEG1
!     INTEGER         , INTENT(IN)    :: DIM1XMT,DIM2XMT,STOXMT
!     INTEGER         , INTENT(IN)    :: ELTSEG(NELMAX,15)
!     DOUBLE PRECISION, INTENT(IN)    :: XMT(DIM1XMT,DIM2XMT)
!     DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG1)
!       END SUBROUTINE
!
        SUBROUTINE ASMVE1(X, IKLE,W, NPOIN,NELEM,NELMAX,LV)
          IMPLICIT NONE
          INTEGER         , INTENT(IN)    :: NELEM,NELMAX,NPOIN,LV
          DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
          INTEGER         , INTENT(IN)    :: IKLE(NELMAX)
          DOUBLE PRECISION, INTENT(IN)    :: W(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE ASMVEC(X, IKLE,NPOIN,NELEM,NELMAX,NDP,W,INIT,LV)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER         , INTENT(IN)   ::NELMAX,NPOIN,NELEM,NDP,LV
          DOUBLE PRECISION, INTENT(INOUT)::X(NPOIN)
          INTEGER         , INTENT(IN)   ::IKLE(NELMAX,NDP)
          DOUBLE PRECISION, INTENT(IN)   ::W(NELMAX,NDP)
          LOGICAL         , INTENT(IN)   ::INIT
        END SUBROUTINE
!
        SUBROUTINE ASSEX3
     &(XM,STO,NAME,IELM1,IELM2,TYPEXT,XMT,DIM1XMT,DIM2XMT,STOXMT,
     & MESH,NELMAX,ELTSEG,ORISEG)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER         , INTENT(INOUT) :: STO
      CHARACTER(LEN=6), INTENT(IN)    :: NAME
      INTEGER         , INTENT(IN)    :: IELM1,IELM2,NELMAX
      INTEGER         , INTENT(IN)    :: DIM1XMT,DIM2XMT,STOXMT
      INTEGER         , INTENT(IN)    :: ELTSEG(NELMAX,*)
      INTEGER         , INTENT(IN)    :: ORISEG(NELMAX,3)
      CHARACTER(LEN=1), INTENT(IN)    :: TYPEXT
      DOUBLE PRECISION, INTENT(INOUT) :: XMT(DIM1XMT,DIM2XMT)
      DOUBLE PRECISION, INTENT(INOUT) :: XM(*)
      TYPE(BIEF_MESH) , INTENT(IN)    :: MESH
        END SUBROUTINE
!
        SUBROUTINE ASSVE1(X, IKLE,W, NELEM,NELMAX,LV,MSK,MASKEL)
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(INOUT)::X(*)
          INTEGER         , INTENT(IN)   ::NELEM,NELMAX,LV
          INTEGER         , INTENT(IN)   ::IKLE(NELMAX)
          DOUBLE PRECISION, INTENT(IN)   ::W(NELMAX),MASKEL(NELMAX)
          LOGICAL         , INTENT(IN)   ::MSK
        END SUBROUTINE
!
        SUBROUTINE ASSVEC(X, IKLE,NPOIN,NELEM,
     &                    NELMAX,IELM,W,INIT,LV,MSK,MASKEL,NDP)
          USE BIEF_DEF
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(INOUT)::X(*)
          INTEGER         , INTENT(IN)   ::NELEM,NELMAX,NPOIN,IELM,LV
          INTEGER         , INTENT(IN)   ::NDP
          INTEGER         , INTENT(IN)   ::IKLE(NELMAX,*)
          DOUBLE PRECISION, INTENT(IN)   ::W(NELMAX,*),MASKEL(NELMAX)
          LOGICAL         , INTENT(IN)   ::INIT,MSK
        END SUBROUTINE
!
        DOUBLE PRECISION FUNCTION ATANC(A,B)
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(IN) :: A,B
        END FUNCTION
!
        SUBROUTINE ATTEND(ISEC)
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: ISEC
        END SUBROUTINE
!
!       SUBROUTINE AUTORI(INDAUT,VERAUT,CODE,OPT)
!     IMPLICIT NONE
!     INTEGER, INTENT(INOUT)       :: INDAUT,VERAUT
!     INTEGER, INTENT(IN)          :: OPT
!     CHARACTER(LEN=3), INTENT(IN) :: CODE
!       END SUBROUTINE
!
        SUBROUTINE BIEF_CLOSE_FILES(CODE,FILES,NFILES,PEXIT)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER          , INTENT(IN)     :: NFILES
          CHARACTER(LEN=24), INTENT(IN)     :: CODE
          LOGICAL, INTENT(IN)               :: PEXIT
          TYPE(BIEF_FILE)   , INTENT(INOUT) :: FILES(NFILES)
        END SUBROUTINE
!
        SUBROUTINE BIEF_INIT(CODE,CHAINE,NCAR,PINIT)
          IMPLICIT NONE
          CHARACTER(LEN=24), INTENT(IN) :: CODE
          LOGICAL, INTENT(IN)           :: PINIT
          CHARACTER(LEN=250)            :: CHAINE
          INTEGER, INTENT(IN)           :: NCAR
        END SUBROUTINE
!
        DOUBLE PRECISION FUNCTION BIEF_SUM( X )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(IN) :: X
        END FUNCTION
!
        SUBROUTINE BILANT
     &(H,WORK2,WORK3,DT,LT,NIT,INFO,
     & T,AGGLOT,MASSOU,MASTR0,MASTR2,MASTEN,MASTOU,MSK,MASKEL,MESH,
     & FLBOR,NUMLIQ,NFRLIQ,NPTFR,NAMETRAC,FLBORTRA)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)            :: LT,NIT,NFRLIQ,NPTFR
      INTEGER, INTENT(IN)            :: NUMLIQ(NFRLIQ)
      DOUBLE PRECISION, INTENT(IN)   :: DT,MASSOU,AGGLOT
      LOGICAL, INTENT(IN)            :: INFO,MSK
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: WORK2,WORK3
      TYPE(BIEF_OBJ), INTENT(IN)     :: H,T,MASKEL,FLBOR
      TYPE(BIEF_OBJ), INTENT(IN)     :: FLBORTRA
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      DOUBLE PRECISION, INTENT(INOUT):: MASTR0,MASTR2,MASTEN,MASTOU
      CHARACTER(LEN=32), INTENT(IN)  :: NAMETRAC
        END SUBROUTINE
!
        SUBROUTINE CARACT
     & ( U , UTILD , UCONV , VCONV , WCONV , X , Y , ZSTAR ,
     &   T1 , T2 , ZCONV , DX , DY , DZ , Z , SHP , SHZ , SURDET ,
     &   DT , IKLE , IFABOR , ELT , ETA , ITRAV1 , ITRAV2 , IELM ,IELMU,
     &   NELEM , NELMAX , NOMB , NPOIN , NPOIN2 , NDP ,NPLAN ,
     &   LV , MSK , MASKEL , MESH , FAC , TEST , STEST,INITLOC)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX,NOMB,NPOIN,NPOIN2
      INTEGER, INTENT(IN)             :: NDP,NPLAN,IELM,IELMU,LV
      TYPE(BIEF_OBJ)  , INTENT(IN)    :: U
      TYPE(BIEF_OBJ)  , INTENT(INOUT) :: UTILD
      DOUBLE PRECISION, INTENT(IN)    :: UCONV(*),VCONV(*),WCONV(*)
      DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: Y(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: Z(NPOIN2,NPLAN),ZSTAR(NPLAN)
      DOUBLE PRECISION, INTENT(OUT)   :: ZCONV(NPOIN2,NPLAN)
      DOUBLE PRECISION, INTENT(OUT)   :: DX(*),DY(*),DZ(NPOIN)
      DOUBLE PRECISION, INTENT(OUT)   :: SHP(NDP,*),SHZ(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: MASKEL(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: SURDET(NELEM)
      DOUBLE PRECISION, INTENT(IN)    :: DT
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,*)
      INTEGER, INTENT(IN)             :: IFABOR(NELMAX,*)
      INTEGER, INTENT(OUT)            :: ELT(*),ETA(*)
      INTEGER, INTENT(OUT)            :: ITRAV1(*),ITRAV2(*)
      LOGICAL, INTENT(IN)             :: MSK,INITLOC
      DOUBLE PRECISION, INTENT(OUT)   :: TEST(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FAC(NPOIN)
      TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ)  , INTENT(INOUT) :: STEST
      TYPE(BIEF_OBJ)  , INTENT(INOUT) :: T1,T2
        END SUBROUTINE
!
!       SUBROUTINE CFLP11(U,V,X,Y,IKLE,NELEM,NELMAX,W1)
!         IMPLICIT NONE
!         INTEGER         , INTENT(IN)  :: NELEM,NELMAX
!         DOUBLE PRECISION, INTENT(IN)  :: U(*),V(*)
!         DOUBLE PRECISION, INTENT(IN)  :: X(NELMAX,*),Y(NELMAX,*)
!         INTEGER         , INTENT(IN)  :: IKLE(NELMAX,*)
!         DOUBLE PRECISION, INTENT(OUT) :: W1(NELMAX,*)
!       END SUBROUTINE
!
!       SUBROUTINE CFLP12(U,V,X,Y,IKLE,NELEM,NELMAX,W1)
!         IMPLICIT NONE
!         INTEGER         , INTENT(IN)  :: NELEM,NELMAX
!         DOUBLE PRECISION, INTENT(IN)  :: U(*),V(*)
!         DOUBLE PRECISION, INTENT(IN)  :: X(NELMAX,*),Y(NELMAX,*)
!         INTEGER         , INTENT(IN)  :: IKLE(NELMAX,*)
!         DOUBLE PRECISION, INTENT(OUT) :: W1(NELMAX,*)
!       END SUBROUTINE
!
        SUBROUTINE CFLPSI(SYGMA,U,V,DT,IELM,MESH,MSK,MASKEL)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER         , INTENT(IN)    :: IELM
          DOUBLE PRECISION, INTENT(IN)    :: DT
          TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: SYGMA
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: U,V,MASKEL
          LOGICAL         , INTENT(IN)    :: MSK
        END SUBROUTINE
!
        SUBROUTINE CFLVF
     &(DTMAX,HSTART,H,FXMAT,FXMATPAR,MAS,DT,FXBOR,SMH,YASMH,TAB1,NSEG,
     & NPOIN,NPTFR,GLOSEG,SIZGLO,MESH,MSK,MASKPT)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NSEG,NPOIN,NPTFR,SIZGLO
      INTEGER, INTENT(IN)             :: GLOSEG(SIZGLO,2)
      DOUBLE PRECISION, INTENT(INOUT) :: DTMAX
      DOUBLE PRECISION, INTENT(IN)    :: DT,HSTART(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: H(NPOIN),MAS(NPOIN),SMH(NPOIN)
!                                              NOT NPTFR, SEE TRACVF
      DOUBLE PRECISION, INTENT(IN)    :: FXBOR(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FXMAT(NSEG),FXMATPAR(NSEG)
      LOGICAL, INTENT(IN)             :: YASMH,MSK
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: TAB1
      TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
      TYPE(BIEF_OBJ), INTENT(IN)      :: MASKPT
        END SUBROUTINE
!
!
!     JMH 13/02/2008 :
!     HP COMPILER ONLY ACCEPTS A LIMITED NUMBER OF SUBROUTINES
!     I WON'T INCLUDE THESE FOR NOW
!
!
!       SUBROUTINE CG1112(X,DIM1,DIM2,IKLE,NELEM,NELMAX)
!         IMPLICIT NONE
!         INTEGER         , INTENT(IN)    :: NELEM,NELMAX,DIM1,DIM2
!         DOUBLE PRECISION, INTENT(INOUT) :: X(DIM1,DIM2)
!         INTEGER         , INTENT(IN)    :: IKLE(NELMAX,4)
!       END SUBROUTINE
!
!
!
!       SUBROUTINE CG1113(X,DIM1,DIM2,IKLE,NELEM,NELMAX)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NELEM,NELMAX,DIM1,DIM2
!     DOUBLE PRECISION, INTENT(INOUT) :: X(DIM1,DIM2)
!     INTEGER         , INTENT(IN)    :: IKLE(NELMAX,6)
!       END SUBROUTINE
!
!
        SUBROUTINE CGSQUA(X,A,B,MESH, G,G0,P,K,H,AHPK,CFG,INFOGR)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: X,G,G0,P,K,H,AHPK
          TYPE(BIEF_OBJ)  , INTENT(IN   ) :: B
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: A
          TYPE(SLVCFG)    , INTENT(INOUT) :: CFG
          LOGICAL         , INTENT(IN)    :: INFOGR
          TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE CGSTAB(X, A,B , MESH, P,Q,R,S,T,V, CFG,INFOGR,AUX)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: X,P,Q,R,S,T,V
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: AUX,A,B
          TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
          TYPE(SLVCFG)    , INTENT(INOUT) :: CFG
          LOGICAL         , INTENT(IN)    :: INFOGR
        END SUBROUTINE
!
        SUBROUTINE CHAR11( U , V , DT , NRK , X , Y , IKLE , IFABOR ,
     &   XPLOT , YPLOT , DX , DY , SHP , ELT , NSP ,
     &   NPLOT , NPOIN , NELEM , NELMAX , SURDET , SENS , TEST )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER         , INTENT(IN)    :: SENS
      INTEGER         , INTENT(IN)    :: NPOIN,NELEM,NELMAX,NPLOT,NRK
      INTEGER         , INTENT(IN)    :: IKLE(NELMAX,3),IFABOR(NELMAX,3)
      INTEGER         , INTENT(INOUT) :: ELT(NPLOT),NSP(NPLOT)
      DOUBLE PRECISION, INTENT(IN)    :: U(NPOIN),V(NPOIN),SURDET(NELEM)
      DOUBLE PRECISION, INTENT(INOUT) :: XPLOT(NPLOT),YPLOT(NPLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: SHP(3,NPLOT)
      DOUBLE PRECISION, INTENT(IN)    :: DT
      DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN),Y(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: DX(NPLOT),DY(NPLOT),TEST(NPLOT)
        END SUBROUTINE
!
        SUBROUTINE CHAR13( U , V , DT , NRK , X , Y , IKLE , IFABOR ,
     &   XPLOT , YPLOT , DX , DY , SHP , ELT , NSP ,
     &   NPLOT , NPOIN , NELEM , NELMAX , SURDET , SENS , TEST )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER         , INTENT(IN)    :: SENS
      INTEGER         , INTENT(IN)    :: NPOIN,NELEM,NELMAX,NPLOT,NRK
      INTEGER         , INTENT(IN)    :: IKLE(NELMAX,6),IFABOR(NELMAX,3)
      INTEGER         , INTENT(INOUT) :: ELT(NPLOT),NSP(NPLOT)
      DOUBLE PRECISION, INTENT(IN)    :: U(NPOIN),V(NPOIN),SURDET(NELEM)
      DOUBLE PRECISION, INTENT(INOUT) :: XPLOT(NPLOT),YPLOT(NPLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: SHP(3,NPLOT)
      DOUBLE PRECISION, INTENT(IN)    :: DT
      DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN),Y(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: DX(NPLOT),DY(NPLOT),TEST(NPLOT)
        END SUBROUTINE
!
        SUBROUTINE CHAR41( U , V , W , DT , NRK ,
     &   X , Y , ZSTAR , Z , IKLE2 , IBOR ,
     &   XPLOT , YPLOT , ZPLOT , DX , DY , DZ , SHP , SHZ , ELT , ETA ,
     &   NSP , NPLOT , NPOIN2 , NELEM2 , NPLAN , SURDET ,
     &   SENS , ISO , TEST )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER         , INTENT(IN)    :: SENS,NPLAN
      INTEGER         , INTENT(IN)    :: NPOIN2,NELEM2,NPLOT,NRK
      INTEGER         , INTENT(IN)    :: IKLE2(NELEM2,3)
      INTEGER         , INTENT(INOUT) :: ELT(NPLOT),NSP(NPLOT)
      DOUBLE PRECISION, INTENT(IN)    :: U(NPOIN2,NPLAN),V(NPOIN2,NPLAN)
      DOUBLE PRECISION, INTENT(IN)    :: W(NPOIN2,NPLAN),SURDET(NELEM2)
      DOUBLE PRECISION, INTENT(INOUT) :: XPLOT(NPLOT),YPLOT(NPLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: ZPLOT(NPLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: SHP(3,NPLOT),SHZ(NPLOT)
      DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN2),Y(NPOIN2),DT
      DOUBLE PRECISION, INTENT(IN)    :: Z(NPOIN2,NPLAN),ZSTAR(NPLAN)
      DOUBLE PRECISION, INTENT(INOUT) :: DX(NPLOT),DY(NPLOT),TEST(NPLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: DZ(NPLOT)
      INTEGER         , INTENT(IN)    :: IBOR(NELEM2,5,NPLAN-1)
      INTEGER         , INTENT(INOUT) :: ETA(NPLOT),ISO(NPLOT)
        END SUBROUTINE
!
        SUBROUTINE CHARAC
     &( FN  , FTILD  , NOMB   , UCONV  , VCONV , WCONV  , ZSTAR ,
     &  DT  , IFAMAS , IELM   , NPOIN2 , NPLAN , NPLINT ,
     &  MSK , MASKEL , SHP,SHZ, TB,IT1,IT2,IT3,IT4,MESH,
     &  NELEM2,NELMAX2,IKLE2,SURDET2,INILOC)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM,NPOIN2,NPLAN,NPLINT,NOMB
          INTEGER, INTENT(IN) :: NELEM2,NELMAX2
          INTEGER, INTENT(INOUT) :: IT1(*),IT2(*),IT3(*),IT4(*)
          LOGICAL, INTENT(IN) :: MSK
          DOUBLE PRECISION, INTENT(IN)        :: DT
          TYPE(BIEF_OBJ) , INTENT(INOUT)      :: FTILD
          TYPE(BIEF_OBJ) , INTENT(IN)         :: FN,UCONV,VCONV,WCONV
          TYPE(BIEF_OBJ) , INTENT(IN)         :: ZSTAR,MASKEL,SURDET2
          TYPE(BIEF_OBJ) , INTENT(IN)         :: IKLE2
          TYPE(BIEF_OBJ) , INTENT(IN), TARGET :: IFAMAS
          TYPE(BIEF_OBJ) , INTENT(INOUT)      :: SHP,SHZ,TB
          TYPE(BIEF_MESH), INTENT(INOUT)      :: MESH
          LOGICAL, OPTIONAL, INTENT(IN)       :: INILOC
        END SUBROUTINE
!
        SUBROUTINE CHGDIS(X,OLDELT,NEWELT,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN)           :: OLDELT,NEWELT
          TYPE(BIEF_OBJ), INTENT(INOUT) :: X
          TYPE(BIEF_MESH), INTENT(IN)   :: MESH
        END SUBROUTINE
!
        SUBROUTINE CLIP(F,XMIN,CLPMIN,XMAX,CLPMAX,NPOIN)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NPOIN
          DOUBLE PRECISION, INTENT(IN) :: XMIN,XMAX
          LOGICAL, INTENT(IN) :: CLPMIN,CLPMAX
          TYPE(BIEF_OBJ), INTENT(INOUT) :: F
        END SUBROUTINE
!
        LOGICAL FUNCTION CMPOBJ( OBJ1 , OBJ2 )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(IN) ::  OBJ1,OBJ2
        END FUNCTION
!
        SUBROUTINE CONFIG_CODE(ICODE)
          IMPLICIT NONE
          INTEGER , INTENT(IN)    :: ICODE
        END SUBROUTINE
!
        SUBROUTINE COMP_FAC(ELTSEG,IFABOR,NELEM,NPOIN,FAC)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NELEM,NPOIN
          INTEGER, INTENT(IN) :: IFABOR(NELEM,3),ELTSEG(NELEM,3)
          TYPE(BIEF_OBJ), INTENT(INOUT) :: FAC
        END SUBROUTINE
!
        SUBROUTINE COMP_NH_COM_SEG
     &(ELTSEG,NELEM,NH_COM_SEG,DIM1NHCOM,NB_NEIGHB_SEG,NB_NEIGHB_PT_SEG,
     & GLOSEG,DIMGLO,KNOLG,NPOIN)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELEM,DIM1NHCOM,NB_NEIGHB_SEG,DIMGLO
      INTEGER, INTENT(IN)    :: NPOIN
      INTEGER, INTENT(INOUT) :: NH_COM_SEG(DIM1NHCOM,NB_NEIGHB_SEG)
      INTEGER, INTENT(IN)    :: ELTSEG(NELEM,3),GLOSEG(DIMGLO,2)
      INTEGER, INTENT(IN)    :: NB_NEIGHB_PT_SEG(NB_NEIGHB_SEG)
      INTEGER, INTENT(IN)    :: KNOLG(*)
        END SUBROUTINE
!
!       SUBROUTINE COMP_IKLE
!    *(IKLE,IKLBOR,ELTSEG,NBOR,IELM,NELEM,NELMAX,NPOIN,NPTFR)
!     IMPLICIT NONE
!     INTEGER, INTENT(IN)    :: NELEM,NELMAX,IELM,NPOIN,NPTFR
!     INTEGER, INTENT(IN)    :: ELTSEG(NELMAX,3)
!     INTEGER, INTENT(INOUT) :: IKLE(NELMAX,*),IKLBOR(NPTFR,*),NBOR(*)
!       END SUBROUTINE
!
!
        SUBROUTINE COMP_SEG
     &(NELEM,NELMAX,IELM,IKLE,GLOSEG,MAXSEG,ELTSEG,ORISEG,NSEG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELMAX,NSEG,MAXSEG,IELM,NELEM
      INTEGER, INTENT(IN)    :: IKLE(NELMAX,*)
      INTEGER, INTENT(INOUT) :: GLOSEG(MAXSEG,2),ELTSEG(NELMAX,*)
      INTEGER, INTENT(INOUT) :: ORISEG(NELMAX,*)
        END SUBROUTINE
!
        SUBROUTINE CORLAT
          IMPLICIT NONE
        END SUBROUTINE
!
        SUBROUTINE CORRSL(NEWSL,OLDSL,ZF,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_MESH), INTENT(IN)    :: MESH
          TYPE(BIEF_OBJ) , INTENT(IN)    :: OLDSL,ZF
          TYPE(BIEF_OBJ) , INTENT(INOUT) :: NEWSL
        END SUBROUTINE
!
        SUBROUTINE CORRXY(X,Y,NPOIN)
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NPOIN
          DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN),Y(NPOIN)
        END SUBROUTINE
!
!       SUBROUTINE CPIK12(IKLE,NELEM,NELMAX,NPOIN)
!         IMPLICIT NONE
!         INTEGER, INTENT(IN)    :: NELEM,NELMAX,NPOIN
!         INTEGER, INTENT(INOUT) :: IKLE(NELMAX,4)
!       END SUBROUTINE
!
!       SUBROUTINE CPIK13
!    *(IKLE,IKLBOR,ELTSEG,NBOR,NELEM,NELMAX,NPOIN,NPTFR)
!     IMPLICIT NONE
!     INTEGER, INTENT(IN)    :: NELEM,NELMAX,NPOIN,NPTFR
!     INTEGER, INTENT(IN)    :: ELTSEG(NELMAX,3)
!     INTEGER, INTENT(INOUT) :: IKLE(NELMAX,6),IKLBOR(NPTFR,*),NBOR(*)
!       END SUBROUTINE
!
!       SUBROUTINE CPIKLE2
!    *(IKLE3,KLEI3,IKLES,NELEM2,NELMAX2,NPOIN2,NPLAN)
!     IMPLICIT NONE
!     INTEGER, INTENT(IN)    :: NELEM2,NELMAX2,NPOIN2,NPLAN
!     INTEGER, INTENT(IN)    :: IKLES(3,NELEM2)
!     INTEGER, INTENT(INOUT) :: IKLE3(NELMAX2,NPLAN-1,6)
!     INTEGER, INTENT(INOUT) :: KLEI3(6,NELMAX2,NPLAN-1)
!       END SUBROUTINE
!
!       SUBROUTINE CPIKLE3
!    *(IKLE3,IKLES,NELEM2,NELMAX2,NPOIN2,NPLAN)
!     IMPLICIT NONE
!     INTEGER, INTENT(IN)    :: NELEM2,NELMAX2,NPOIN2,NPLAN
!     INTEGER, INTENT(INOUT) :: IKLES(3,NELEM2)
!     INTEGER, INTENT(INOUT) :: IKLE3(NELMAX2,3,NPLAN-1,4)
!       END SUBROUTINE
!
        SUBROUTINE CPSTMT( X , Y , TRANS )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(IN)    :: X
          TYPE(BIEF_OBJ), INTENT(INOUT) :: Y
          LOGICAL, INTENT(IN), OPTIONAL :: TRANS
        END SUBROUTINE
!
        SUBROUTINE CPSTVC( X , Y )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(IN)    :: X
          TYPE(BIEF_OBJ), INTENT(INOUT) :: Y
        END SUBROUTINE
!
!
!       SUBROUTINE CROSFR(X,Y,XR,YR,XMAIL,YMAIL,NPMAX,NBOR,KP1BOR,
!    *                    NPTFR,DM,OK)
!         IMPLICIT NONE
!         DOUBLE PRECISION, INTENT(IN) :: X,Y,XR,YR,DM
!         INTEGER, INTENT(IN)          :: NPTFR,NPMAX
!         DOUBLE PRECISION, INTENT(IN) :: XMAIL(NPMAX),YMAIL(NPMAX)
!         INTEGER, INTENT(IN)          :: NBOR(NPTFR),KP1BOR(NPTFR)
!         LOGICAL, INTENT(INOUT)       :: OK
!       END SUBROUTINE
!
!
        SUBROUTINE CRSL11(NEWSL,OLDSL,ZF,IKLE,NELEM,NELMAX)
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NELEM,NELMAX
          DOUBLE PRECISION, INTENT(INOUT) :: NEWSL(NELMAX,3)
          DOUBLE PRECISION, INTENT(IN)    :: OLDSL(*),ZF(*)
          INTEGER, INTENT(IN)             :: IKLE(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE CRSL12(NEWSL,OLDSL,ZF,IKLE,NELEM,NELMAX)
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NELEM,NELMAX
          DOUBLE PRECISION, INTENT(INOUT) :: NEWSL(NELMAX,4)
          DOUBLE PRECISION, INTENT(IN)    :: OLDSL(*),ZF(*)
          INTEGER, INTENT(IN)             :: IKLE(NELMAX,4)
        END SUBROUTINE
!
        SUBROUTINE CVDFTR
     &(F,FTILD,FN,FSCEXP,DIFT,ICONVF,CONV,
     & H,HN,HPROP,TETAH,UCONV,VCONV,DM1,ZCONV,SOLSYS,
     & VISC,VISC_S,SM,SMH,YASMH,SMI,YASMI,AM1,AM2,
     & ZF,FBOR,AFBOR,BFBOR,LIMTRA,MASKTR,MESH,W,TB,
     & T1,T2,T3,T4,T5,T6,T7,T10,TE1,TE2,TE3,KDIR,KDDL,KENT,DT,ENTET,
     & TETAT,AGGLOT,INFOGT,BILAN,OPTSUP,
     & ISOUSI,LT,NIT,OPDTRA,OPTBAN,MSK,MASKEL,MASKPT,MBOR,
     & S,MASSOU,OPTSOU,SLVTRA,FLBOR,V2DPAR,UNSV2D,OPTVF,FLBORTRA,
     & FLULIM,YAFLULIM,DIRFLU)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)           :: ICONVF,ISOUSI,OPTSUP,OPDTRA,KENT
      INTEGER, INTENT(IN)           :: LT,NIT,OPTBAN,OPTSOU,KDIR,SOLSYS
      INTEGER, INTENT(IN)           :: KDDL,OPTVF,DIRFLU
      DOUBLE PRECISION, INTENT(IN)  :: TETAT,AGGLOT,TETAH,DT
      DOUBLE PRECISION, INTENT(INOUT)  :: MASSOU
      LOGICAL, INTENT(IN)           :: INFOGT,BILAN,CONV,YASMH
      LOGICAL, INTENT(IN)           :: DIFT,MSK,ENTET,YASMI,YAFLULIM
      TYPE(SLVCFG), INTENT(INOUT)   :: SLVTRA
      TYPE(BIEF_OBJ), INTENT(IN)    :: MASKEL,MASKPT,H,HN,AFBOR,BFBOR
      TYPE(BIEF_OBJ), INTENT(INOUT) :: HPROP
      TYPE(BIEF_OBJ), INTENT(INOUT) :: F,SM,FLBORTRA
      TYPE(BIEF_OBJ), INTENT(IN)    :: FBOR,UCONV,VCONV,ZF
      TYPE(BIEF_OBJ), INTENT(IN)    :: FTILD,FN,SMI,FLULIM
      TYPE(BIEF_OBJ), INTENT(INOUT) :: SMH
      TYPE(BIEF_OBJ), INTENT(INOUT) :: TE1,TE2,TE3,W
      TYPE(BIEF_OBJ), INTENT(INOUT) :: T1,T2,T3,T4,T5,T6,T7,T10
      TYPE(BIEF_OBJ), INTENT(IN)    :: FSCEXP,DM1,ZCONV
      TYPE(BIEF_OBJ), INTENT(IN)    :: S,LIMTRA,FLBOR,V2DPAR,UNSV2D
      TYPE(BIEF_OBJ), INTENT(INOUT) :: VISC_S,VISC
      TYPE(BIEF_OBJ), INTENT(INOUT) :: AM1,AM2,MBOR
      TYPE(BIEF_OBJ), INTENT(INOUT) :: TB
      TYPE(BIEF_OBJ), INTENT(IN)    :: MASKTR
      TYPE(BIEF_MESH) :: MESH
        END SUBROUTINE
!
        SUBROUTINE CVTRVF
     &(F,FN,FSCEXP,DIFT,CONV,H,HN,HPROP,UCONV,VCONV,DM1,ZCONV,SOLSYS,
     & VISC,VISC_S,SM,SMH,YASMH,SMI,YASMI,FBOR,MASKTR,MESH,
     & T1,T2,T3,T4,T5,T6,T7,T8,HNT,HT,AGGLOH,TE1,DT,ENTET,BILAN,
     & OPDTRA,MSK,MASKEL,S,MASSOU,OPTSOU,LIMTRA,KDIR,KDDL,NPTFR,FLBOR,
     & YAFLBOR,V2DPAR,UNSV2D,IOPT,FLBORTRA,MASKPT)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: OPDTRA,OPTSOU,KDIR,NPTFR,SOLSYS
      INTEGER, INTENT(IN)             :: LIMTRA(NPTFR),KDDL,IOPT
      DOUBLE PRECISION, INTENT(IN)    :: DT,AGGLOH
      DOUBLE PRECISION, INTENT(INOUT) :: MASSOU
      LOGICAL, INTENT(IN)             :: BILAN,CONV,YASMH,YAFLBOR
      LOGICAL, INTENT(IN)             :: DIFT,MSK,ENTET,YASMI
      TYPE(BIEF_OBJ), INTENT(IN)      :: MASKEL,H,HN,DM1,ZCONV
      TYPE(BIEF_OBJ), INTENT(IN)      :: V2DPAR,UNSV2D,HPROP,MASKPT
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: F,SM,HNT,HT,FLBORTRA
      TYPE(BIEF_OBJ), INTENT(IN)      :: FBOR,UCONV,VCONV,FN,SMI,SMH
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: TE1
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: T1,T2,T3,T4,T5,T6,T7,T8
      TYPE(BIEF_OBJ), INTENT(IN)      :: FSCEXP,S,MASKTR,FLBOR
      TYPE(BIEF_OBJ), INTENT(IN)      :: VISC_S,VISC
      TYPE(BIEF_MESH) :: MESH
        END SUBROUTINE
!
        SUBROUTINE CVTRVF_POS
     &(F,FN,FSCEXP,DIFT,CONV,H,HN,HPROP,UDEL,VDEL,DM1,ZCONV,SOLSYS,
     & VISC,VISC_S,SM,SMH,YASMH,SMI,YASMI,FBOR,MASKTR,MESH,
     & T1,T2,T3,T4,T5,T6,T7,T8,HNT,HT,AGGLOH,TE1,DT,ENTET,BILAN,
     & OPDTRA,MSK,MASKEL,S,MASSOU,OPTSOU,LIMTRA,KDIR,KDDL,NPTFR,FLBOR,
     & YAFLBOR,V2DPAR,UNSV2D,IOPT,FLBORTRA,MASKPT,GLOSEG1,GLOSEG2,NBOR,
     & OPTION,FLULIM,YAFLULIM)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: OPDTRA,OPTSOU,KDIR,NPTFR,SOLSYS
      INTEGER, INTENT(IN)             :: KDDL,IOPT,OPTION
      INTEGER, INTENT(IN)             :: GLOSEG1(*),GLOSEG2(*)
      INTEGER, INTENT(IN)             :: LIMTRA(NPTFR),NBOR(NPTFR)
      DOUBLE PRECISION, INTENT(IN)    :: DT,AGGLOH
      DOUBLE PRECISION, INTENT(IN)    :: FLULIM(*)
      DOUBLE PRECISION, INTENT(INOUT) :: MASSOU
      LOGICAL, INTENT(IN)             :: BILAN,CONV,YASMH,YAFLBOR
      LOGICAL, INTENT(IN)             :: DIFT,MSK,ENTET,YASMI,YAFLULIM
      TYPE(BIEF_OBJ), INTENT(IN)      :: MASKEL,H,HN,DM1,ZCONV,MASKPT
      TYPE(BIEF_OBJ), INTENT(IN)      :: V2DPAR,UNSV2D,HPROP
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: F,SM,HNT,HT
      TYPE(BIEF_OBJ), INTENT(IN)      :: FBOR,UDEL,VDEL,FN,SMI,SMH
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: TE1,FLBORTRA
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: T1,T2,T3,T4,T5,T6,T7,T8
      TYPE(BIEF_OBJ), INTENT(IN)      :: FSCEXP,S,MASKTR,FLBOR
      TYPE(BIEF_OBJ), INTENT(IN)      :: VISC_S,VISC
      TYPE(BIEF_MESH) :: MESH
        END SUBROUTINE
!
!       SUBROUTINE DCPLDU(B,A,MESH,COPY,LV)
!         USE BIEF_DEF
!          IMPLICIT NONE
!         TYPE(BIEF_OBJ) , INTENT(INOUT) :: B
!          TYPE(BIEF_OBJ) , INTENT(IN)    :: A
!          TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
!         LOGICAL        , INTENT(IN)    :: COPY
!         INTEGER        , INTENT(IN)    :: LV
!       END SUBROUTINE
!
!       SUBROUTINE DECLDU(B,A,MESH,COPY,LV)
!         USE BIEF_DEF
!         IMPLICIT NONE
!         TYPE(BIEF_OBJ) , INTENT(INOUT) :: B
!         TYPE(BIEF_OBJ) , INTENT(IN)    :: A
!         TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
!         LOGICAL        , INTENT(IN)    :: COPY
!         INTEGER        , INTENT(IN)    :: LV
!       END SUBROUTINE
!
        SUBROUTINE DECVRT(TETA,SL,ZF,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_MESH), INTENT(IN)    :: MESH
          TYPE(BIEF_OBJ) , INTENT(INOUT) :: TETA
          TYPE(BIEF_OBJ) , INTENT(IN)    :: SL,ZF
        END SUBROUTINE
!
        SUBROUTINE DECV11(TETA,SL,ZF,IKLE,NELEM,NELMAX)
          IMPLICIT NONE
          INTEGER         , INTENT(IN)  :: NELEM,NELMAX
          INTEGER         , INTENT(IN)  :: IKLE(NELMAX,*)
          DOUBLE PRECISION, INTENT(OUT) :: TETA(NELEM)
          DOUBLE PRECISION, INTENT(IN)  :: SL(*),ZF(*)
        END SUBROUTINE
!
        SUBROUTINE DECV21(TETA,SL,ZF,IKLE,NELEM,NELMAX)
          IMPLICIT NONE
          INTEGER         , INTENT(IN)  :: NELEM,NELMAX
          INTEGER         , INTENT(IN)  :: IKLE(NELMAX,*)
          DOUBLE PRECISION, INTENT(OUT) :: TETA(NELEM)
          DOUBLE PRECISION, INTENT(IN)  :: SL(*),ZF(*)
        END SUBROUTINE
!
        SUBROUTINE DERIVE
     &( U , V , DT , X , Y , IKLE , IFABOR , LT , IELM , NDP , NPOIN ,
     &  NELEM , NELMAX , SURDET , XFLOT , YFLOT ,
     &  SHPFLO , DEBFLO , FINFLO , ELTFLO , NFLOT , NITFLO,FLOPRD,T8)
      IMPLICIT NONE
      INTEGER         , INTENT(IN)    :: NPOIN,LT,IELM,NDP,NELEM
      INTEGER         , INTENT(IN)    :: NITFLO,FLOPRD,NELMAX,NFLOT
      DOUBLE PRECISION, INTENT(IN)    :: U(NPOIN),V(NPOIN),DT
      DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN),Y(NPOIN)
      INTEGER         , INTENT(IN)    :: IKLE(NELMAX,NDP)
      INTEGER         , INTENT(IN)    :: IFABOR(NELMAX,NDP)
      DOUBLE PRECISION, INTENT(IN)    :: SURDET(NELEM)
      DOUBLE PRECISION, INTENT(INOUT) :: XFLOT(NITFLO,NFLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: YFLOT(NITFLO,NFLOT)
      INTEGER         , INTENT(INOUT) :: DEBFLO(NFLOT),FINFLO(NFLOT)
      INTEGER         , INTENT(INOUT) :: ELTFLO(NFLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: SHPFLO(NDP,NFLOT)
      DOUBLE PRECISION, INTENT(INOUT) :: T8(NPOIN)
        END SUBROUTINE
!
!
!       SUBROUTINE DERLAG
!    *( U , V , DT , X , Y , IKLE , IFABOR , LT , IELM , NDP , NPOIN ,
!    *  NELEM , NELMAX , SURDET , XLAG , YLAG , DX , DY ,
!    *  NSP , SHPLAG , DEBLAG , FINLAG , ELTLAG , NLAG , RESUX , RESUY ,
!    *  NBOR , NELBOR , NULONE , NPTFR , MSK,MASKEL,MASKPT,T8)
!     IMPLICIT NONE
!     INTEGER         , INTENT(IN)    :: NPOIN,LT,IELM,NDP,NELEM,NLAG
!     INTEGER         , INTENT(IN)    :: NPTFR,NELMAX
!     DOUBLE PRECISION, INTENT(IN)    :: U(NPOIN),V(NPOIN),DT
!     DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN),Y(NPOIN)
!     INTEGER         , INTENT(IN)    :: IKLE(NELMAX,NDP)
!     INTEGER         , INTENT(IN)    :: IFABOR(NELMAX,NDP)
!     DOUBLE PRECISION, INTENT(IN)    :: SURDET(NELEM)
!     DOUBLE PRECISION, INTENT(INOUT) :: XLAG(NPOIN,NLAG)
!     DOUBLE PRECISION, INTENT(INOUT) :: YLAG(NPOIN,NLAG)
!     INTEGER         , INTENT(INOUT) :: DEBLAG(NLAG),FINLAG(NLAG)
!     INTEGER         , INTENT(INOUT) :: ELTLAG(NPOIN,NLAG)
!     DOUBLE PRECISION, INTENT(INOUT) :: T8(NPOIN)
!     DOUBLE PRECISION, INTENT(INOUT) :: DX(NPOIN),DY(NPOIN)
!     INTEGER         , INTENT(INOUT) :: NSP(NPOIN)
!     DOUBLE PRECISION, INTENT(INOUT) :: RESUX(NPOIN),RESUY(NPOIN)
!     DOUBLE PRECISION, INTENT(INOUT) :: SHPLAG(NDP,NPOIN,NLAG)
!     INTEGER         , INTENT(IN)    :: NBOR(NPTFR),NELBOR(NPTFR)
!     INTEGER         , INTENT(IN)    :: NULONE(NPTFR)
!     LOGICAL         , INTENT(IN)    :: MSK
!     DOUBLE PRECISION, INTENT(IN)    :: MASKEL(NELMAX),MASKPT(NPOIN)
!       END SUBROUTINE
!
!
        SUBROUTINE DES11
     &(X, XA1,XA2,XA3,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER          , INTENT(IN)    :: NPOIN,NELEM,NELMAX,LV
      DOUBLE PRECISION , INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION , INTENT(IN)    :: XA1(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA2(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA3(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE1(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE2(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE3(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE DES21
     &(X, XA1,XA2,XA3,XA4,XA5,XA6 , IKLE1,IKLE2,IKLE3,IKLE4,
     & NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER          , INTENT(IN)    :: NPOIN,NELEM,NELMAX,LV
      DOUBLE PRECISION , INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION , INTENT(IN)    :: XA1(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA2(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA3(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA4(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA5(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA6(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE1(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE2(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE3(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE4(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE DES41
     &(X, XA1 ,XA2 ,XA3 ,XA4 ,XA5 ,
     &    XA6 ,XA7 ,XA8 ,XA9 ,XA10,
     &    XA11,XA12,XA13,XA14,XA15,
     &    IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,
     &    NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER          , INTENT(IN)    :: NPOIN,NELEM,NELMAX,LV
      DOUBLE PRECISION , INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION , INTENT(IN)    :: XA1(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA2(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA3(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA4(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA5(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA6(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA7(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA8(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA9(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA10(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA11(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA12(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA13(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA14(NELMAX)
      DOUBLE PRECISION , INTENT(IN)    :: XA15(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE1(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE2(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE3(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE4(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE5(NELMAX)
      INTEGER          , INTENT(IN)    :: IKLE6(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE DESCEN
     &(X, XA,TYPEXA,B,IKLE,NELEM,NELMAX,NPOIN,IELM,DITR,COPY,LV)
      IMPLICIT NONE
      INTEGER         , INTENT(IN)    :: IELM,NPOIN,NELEM,NELMAX,LV
      INTEGER         , INTENT(IN)    :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: XA(NELMAX,*),B(NPOIN)
      CHARACTER(LEN=1), INTENT(IN)    :: TYPEXA,DITR
      LOGICAL         , INTENT(IN)    :: COPY
        END SUBROUTINE
!
        SUBROUTINE DESSEG
     &(X, XA,TYPEXA,B,GLOSEG,NSEG,NPOIN,DITR,COPY)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER         , INTENT(IN)    :: NPOIN,NSEG
      INTEGER         , INTENT(IN)    :: GLOSEG(NSEG,2)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: XA(NSEG,*),B(NPOIN)
      CHARACTER(LEN=1), INTENT(IN)    :: TYPEXA,DITR
      LOGICAL         , INTENT(IN)    :: COPY
        END SUBROUTINE
!
        SUBROUTINE DIFFCL
     &(LITBOR,TTILD,TBOR,NBOR,ICONV,NPOIN,NPTFR)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPOIN,NPTFR,ICONV
      INTEGER, INTENT(IN)             :: NBOR(NPTFR)
      INTEGER, INTENT(IN)             :: LITBOR(NPTFR)
      DOUBLE PRECISION, INTENT(IN)    :: TTILD(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: TBOR(NPTFR)
        END SUBROUTINE
!
        SUBROUTINE DIFFIN
     &(MASKTR,LIMTRA,LITBOR,CLT,U,V,XNEBOR,YNEBOR,NBOR,
     & KP1BOR,NPTFR,KENT,KSORT,KLOG,KINC,KNEU,KDIR,KDDL,
     & ICONV,NELBOR,NPOIN,NELMAX,MSK,MASKEL,
     & NFRLIQ,THOMFR,FRTYPE,TN,TBOR,MESH,NUMLIQ)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT) :: MASKTR,TBOR
      TYPE(BIEF_OBJ), INTENT(IN)    :: TN
      INTEGER, INTENT(IN)           :: NPOIN,NPTFR,NELMAX,ICONV,NFRLIQ
      INTEGER, INTENT(IN)    :: LITBOR(NPTFR),KP1BOR(NPTFR),NBOR(NPTFR)
      INTEGER, INTENT(INOUT) :: LIMTRA(NPTFR),CLT(NPTFR)
      INTEGER, INTENT(IN)    :: KENT,KSORT,KLOG,KDIR,KDDL,KNEU,KINC
      INTEGER, INTENT(IN)    :: NELBOR(NPTFR),NUMLIQ(NPTFR)
      INTEGER, INTENT(IN)    :: FRTYPE(NFRLIQ)
      DOUBLE PRECISION, INTENT(IN) :: U(NPOIN), V(NPOIN)
      DOUBLE PRECISION, INTENT(IN) :: XNEBOR(NPTFR), YNEBOR(NPTFR)
      DOUBLE PRECISION, INTENT(IN) :: MASKEL(NELMAX)
      LOGICAL, INTENT(IN) :: MSK,THOMFR
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        INTEGER FUNCTION BIEF_DIM1_EXT(IELM1,IELM2,STO,TYPEXT,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM1,IELM2,STO
          CHARACTER(LEN=1), INTENT(IN) :: TYPEXT
          TYPE(BIEF_MESH) , INTENT(IN) :: MESH
        END FUNCTION
!
        INTEGER FUNCTION BIEF_DIM2_EXT(IELM1,IELM2,STO,TYPEXT,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM1,IELM2,STO
          CHARACTER(LEN=1), INTENT(IN) :: TYPEXT
          TYPE(BIEF_MESH) , INTENT(IN) :: MESH
        END FUNCTION
!
        INTEGER FUNCTION DIMENS( IELM )
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM
        END FUNCTION
!
        SUBROUTINE DIRAUX
     & ( X , Y , Z , W , F , INDIC , CRITER , MESH )
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ) , INTENT(INOUT) :: X,W,F
      TYPE(BIEF_OBJ) , INTENT(IN)    :: Y,Z
      INTEGER        , INTENT(IN)    :: INDIC(*),CRITER
      TYPE(BIEF_MESH), INTENT(IN)    :: MESH
        END SUBROUTINE
!
        SUBROUTINE DIRI01(F, S, SM ,FBOR,LIMDIR,
     &                    WORK1,WORK2,MESH,KDIR,MSK,MASKPT)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: F,S,SM,WORK1,WORK2
          TYPE(BIEF_OBJ), INTENT(IN)    :: FBOR,MASKPT
          INTEGER, INTENT(IN) :: LIMDIR(*), KDIR
          TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
          LOGICAL, INTENT(IN) :: MSK
        END SUBROUTINE
!
        SUBROUTINE DIRI04(X1,X2,
     &                    A11,A12,A21,A22,
     &                    SM1,SM2,T1,T2,T3,T4,
     &                    XBOR1,XBOR2,LIDIR1,LIDIR2,
     &                    MESH,KDIR,MSK,MASKPT)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) ::X1,X2,SM1,SM2,T1,T2,T3,T4
          TYPE(BIEF_OBJ), INTENT(INOUT) ::A11,A12,A21,A22
          TYPE(BIEF_OBJ), INTENT(IN)    ::XBOR1,XBOR2,MASKPT
          INTEGER, INTENT(IN)           ::KDIR,LIDIR1(*),LIDIR2(*)
          TYPE(BIEF_MESH), INTENT(INOUT)::MESH
          LOGICAL, INTENT(IN)           ::MSK
        END SUBROUTINE
!
        SUBROUTINE DIRI09(X1,X2,X3,
     &                    A11,A12,A13,A21,A22,A23,A31,A32,A33,
     &                    SM1,SM2,SM3,T1,T2,T3,T4,T5,T6,
     &                    XBOR1,XBOR2,XBOR3,LIDIR1,LIDIR2,LIDIR3,
     &                    MESH,KDIR,MSK,MASKPT)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: X1,X2,X3,SM1,SM2,SM3
          TYPE(BIEF_OBJ), INTENT(INOUT) :: T1,T2,T3,T4,T5,T6
          TYPE(BIEF_OBJ), INTENT(INOUT) :: A11,A12,A13,A21,A22
          TYPE(BIEF_OBJ), INTENT(INOUT) :: A23,A31,A32,A33
          TYPE(BIEF_OBJ), INTENT(IN)    :: XBOR1,XBOR2,XBOR3,MASKPT
          INTEGER, INTENT(IN)           :: LIDIR1(*),LIDIR2(*),LIDIR3(*)
          INTEGER, INTENT(IN)           :: KDIR
          TYPE(BIEF_MESH), INTENT(INOUT):: MESH
          LOGICAL, INTENT(IN)           :: MSK
        END SUBROUTINE
!
        SUBROUTINE DIRICH(F,S,SM,FBOR,LIMDIR,WORK,MESH,
     &                    KDIR,MSK,MASKPT)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
          INTEGER        , INTENT(IN)    :: KDIR,LIMDIR(MESH%NPTFRX,*)
          LOGICAL        , INTENT(IN)    :: MSK
          TYPE(BIEF_OBJ) , INTENT(INOUT) :: WORK
          TYPE(BIEF_OBJ) , INTENT(INOUT) :: F,SM,S
          TYPE(BIEF_OBJ) , INTENT(IN)    :: FBOR,MASKPT
        END SUBROUTINE
!
        SUBROUTINE DLDU11(DB,XB,TYPDIA,XA,TYPEXA,
     &                    IKLE,NELEM,NELMAX,NPOIN,W,COPY,LV)
         IMPLICIT NONE
      INTEGER, INTENT(IN)           :: NELEM,NELMAX,LV,NPOIN
      DOUBLE PRECISION, INTENT(OUT) :: DB(NPOIN),XB(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN)  :: XA(NELMAX,*)
      CHARACTER(LEN=1), INTENT(IN)  :: TYPDIA,TYPEXA
      INTEGER, INTENT(IN)           :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(OUT) :: W(NELMAX,3)
      LOGICAL, INTENT(IN)           :: COPY
        END SUBROUTINE
!
        SUBROUTINE DLDU21(DB,XB,TYPDIA,XA,TYPEXA,
     &                    IKLE,NELEM,NELMAX,NPOIN,W,COPY,LV)
        IMPLICIT NONE
      INTEGER, INTENT(IN)           :: NELEM,NELMAX,LV,NPOIN
      DOUBLE PRECISION, INTENT(OUT) :: DB(NPOIN),XB(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN)  :: XA(NELMAX,*)
      CHARACTER(LEN=1), INTENT(IN)  :: TYPDIA,TYPEXA
      INTEGER, INTENT(IN)           :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(OUT) :: W(NELMAX,4)
      LOGICAL, INTENT(IN)           :: COPY
        END SUBROUTINE
!
        SUBROUTINE DLDU41(DB,XB,TYPDIA,XA,TYPEXA,
     &                    IKLE,NELEM,NELMAX,NPOIN,W,COPY,LV)
        IMPLICIT NONE
      INTEGER, INTENT(IN)           :: NELEM,NELMAX,LV,NPOIN
      DOUBLE PRECISION, INTENT(OUT) :: DB(NPOIN),XB(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN)  :: XA(NELMAX,*)
      CHARACTER(LEN=1), INTENT(IN)  :: TYPDIA,TYPEXA
      INTEGER, INTENT(IN)           :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(OUT) :: W(NELMAX,6)
      LOGICAL, INTENT(IN)           :: COPY
        END SUBROUTINE
!
        SUBROUTINE DLDUSEG
     &(DB,XB,TYPDIA,XA,TYPEXA,GLOSEG,NSEG,NPOIN,COPY)
      IMPLICIT NONE
      INTEGER, INTENT(IN)           :: NSEG,NPOIN
      DOUBLE PRECISION, INTENT(OUT) :: DB(NPOIN),XB(NSEG,*)
      DOUBLE PRECISION, INTENT(IN)  :: XA(NSEG,*)
      CHARACTER(LEN=1), INTENT(IN)  :: TYPDIA,TYPEXA
      INTEGER, INTENT(IN)           :: GLOSEG(NSEG,2)
      LOGICAL, INTENT(IN)           :: COPY
        END SUBROUTINE
!
        DOUBLE PRECISION FUNCTION DMO(T)
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(IN) :: T
        END FUNCTION
!
        DOUBLE PRECISION FUNCTION DOT(NPOIN,X,Y)
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NPOIN
          DOUBLE PRECISION, INTENT(IN) :: X(NPOIN),Y(NPOIN)
        END FUNCTION
!
        DOUBLE PRECISION FUNCTION DOTS( X , Y )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(IN) :: X,Y
        END FUNCTION
!
        SUBROUTINE DOWNUP(X, A,B ,DITR,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: X
          TYPE(BIEF_OBJ), INTENT(IN)    :: A,B
          TYPE(BIEF_MESH), INTENT(IN)   :: MESH
          CHARACTER(LEN=1), INTENT(IN)  :: DITR
        END SUBROUTINE
!
        SUBROUTINE DWNUP1(X, A,B ,DITR,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: X
          TYPE(BIEF_OBJ), INTENT(IN)    :: B,A
          TYPE(BIEF_MESH), INTENT(IN)   :: MESH
          CHARACTER(LEN=1), INTENT(IN)  :: DITR
        END SUBROUTINE
!
        SUBROUTINE ECRGEO(X,Y,NPOIN,NBOR,NFIC,NVAR,TEXTE,VARCLA,NVARCL,
     & TITRE,SORLEO,NSOR,IKLE,NELEM,NPTFR,NDP,DATE,TIME,
     & NCSIZE,NPTIR,KNOLG,NPLAN,I3,I4)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NFIC,NVARCL,NSOR,NELEM,NPTFR,NDP
      INTEGER, INTENT(OUT)          :: NVAR
      DOUBLE PRECISION, INTENT(IN)  :: X(*),Y(*)
!                                              IKLE(NELEM,NDP)
      INTEGER, INTENT(IN)           :: NBOR(*),IKLE(*)
      CHARACTER(LEN=32), INTENT(IN) :: TEXTE(*),VARCLA(NVARCL)
!                                            NSOR      NSOR+NVARCL
      CHARACTER(LEN=72), INTENT(IN) :: TITRE
      LOGICAL, INTENT(IN)           :: SORLEO(*)
      INTEGER, INTENT(IN)           :: NCSIZE,NPTIR
      INTEGER, INTENT(IN)           :: TIME(3),DATE(3)
      INTEGER, INTENT(IN)           :: KNOLG(NPOIN)
      INTEGER, INTENT(IN), OPTIONAL :: NPLAN,I3,I4
        END SUBROUTINE
!
        SUBROUTINE ECRI2(X,I,C,NVAL,TYPE,CANAL,STD,ISTAT)
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NVAL,CANAL
          DOUBLE PRECISION, INTENT(IN) :: X(NVAL)
          INTEGER, INTENT(IN) :: I(NVAL)
          CHARACTER*(*), INTENT(IN) :: TYPE,STD,C
          INTEGER, INTENT(OUT) :: ISTAT
        END SUBROUTINE
!
        SUBROUTINE ELAPSE(TDEB,TFIN)
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: TDEB(8),TFIN(8)
        END SUBROUTINE
!
        SUBROUTINE ELEB3DT
     &(IKLE3 , NBOR   , KP1BOR, NELBOR, IKLBOR, NULONE,
     & NELEM2, NELMAX2, NPOIN2, NPLAN , NETAGE, NPTFR  )
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELEM2,NPOIN2,NPLAN,NETAGE,NPTFR,NELMAX2
      INTEGER, INTENT(INOUT) :: IKLE3(NELEM2,3,NETAGE,4)
      INTEGER, INTENT(INOUT) :: IKLBOR(NPTFR,2,NETAGE,3)
      INTEGER, INTENT(INOUT) :: NULONE(NPTFR,2,NETAGE,3)
      INTEGER, INTENT(INOUT) :: NELBOR(NPTFR,2,NETAGE),NBOR(NPTFR*NPLAN)
      INTEGER, INTENT(INOUT) :: KP1BOR(NPTFR)
        END SUBROUTINE
!
        SUBROUTINE ELEB3D
     &(IKLE3 , NBOR , KP1BOR , NELBOR, IKLBOR, NULONE,
     & NELEM2, NPOIN2, NPLAN, NETAGE, NPTFR )
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELEM2, NPOIN2, NPLAN, NETAGE, NPTFR
      INTEGER, INTENT(INOUT) :: IKLE3(NELEM2,NETAGE,6)
      INTEGER, INTENT(INOUT) :: IKLBOR(NPTFR,NETAGE,4)
      INTEGER, INTENT(INOUT) :: NULONE(NPTFR,NETAGE,4)
      INTEGER, INTENT(INOUT) :: NELBOR(NPTFR*NETAGE), NBOR(NPTFR*NPLAN)
      INTEGER, INTENT(INOUT) :: KP1BOR(NPTFR)
        END SUBROUTINE
!
        SUBROUTINE ELEBD31
     &(NELBOR,NULONE,IKLBOR,IFABOR,NBOR,IKLE,
     & NELEM,NELEB,NELMAX,NPOIN,NPTFR,IELM)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELEM,NELEB,NELMAX
      INTEGER, INTENT(IN)    :: NPOIN,NPTFR,IELM
      INTEGER, INTENT(IN)    :: NBOR(NPTFR)
      INTEGER, INTENT(IN)    :: IFABOR(NELMAX,4)
      INTEGER, INTENT(IN)    :: IKLE(NELEM,4)
      INTEGER, INTENT(OUT)   :: NELBOR(NELEB),NULONE(NELEB,3)
      INTEGER, INTENT(OUT)   :: IKLBOR(NELEB,3)
        END SUBROUTINE
!
        SUBROUTINE ELEBD
     &(NELBOR,NULONE,KP1BOR,IFABOR,NBOR,IKLE,SIZIKL,
     & IKLBOR,NELEM,NELMAX,
     & NPOIN,NPTFR,IELM,LIHBOR,KLOG,IFANUM,OPTASS,ISEG,T1,T2,T3)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: KLOG,NELMAX,NELEM,SIZIKL
      INTEGER, INTENT(IN)    :: NPOIN,NPTFR,IELM,OPTASS
      INTEGER, INTENT(OUT)   :: NELBOR(NPTFR),NULONE(NPTFR,2)
      INTEGER, INTENT(OUT)   :: KP1BOR(NPTFR,2)
      INTEGER, INTENT(INOUT) :: NBOR(*)
      INTEGER, INTENT(INOUT) :: IFABOR(NELMAX,*)
      INTEGER, INTENT(IN)    :: IKLE(SIZIKL,*)
      INTEGER, INTENT(IN)    :: LIHBOR(NPTFR)
      INTEGER, INTENT(OUT)   :: IKLBOR(NPTFR,2)
      INTEGER, INTENT(INOUT) :: IFANUM(NELMAX,*)
      INTEGER, INTENT(IN)    :: ISEG(NPTFR)
      INTEGER, INTENT(OUT)   :: T1(NPOIN),T2(NPOIN),T3(NPOIN)
        END SUBROUTINE
!
        LOGICAL FUNCTION EOF(LUNIT)
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: LUNIT
        END FUNCTION
!
        SUBROUTINE EQUNOR(X, A,B , MESH, D,AD,AG,G,R, CFG,INFOGR,AUX)
          USE BIEF_DEF
          IMPLICIT NONE
      TYPE(SLVCFG), INTENT(INOUT)    :: CFG
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: B
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: D,AD,G,AG,R,X
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(IN)     :: A
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: AUX
      LOGICAL, INTENT(IN)            :: INFOGR
        END SUBROUTINE
!
        SUBROUTINE ERRMAX(X1,X2,ERR,IERR)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER          , INTENT(OUT) :: IERR
      DOUBLE PRECISION , INTENT(OUT) :: ERR
      TYPE (BIEF_OBJ)  , INTENT(IN)  :: X1,X2
        END SUBROUTINE
!
        SUBROUTINE ERRMIN(X, A,B , MESH, D,AD,G,R, CFG,INFOGR,AUX)
          USE BIEF_DEF
          IMPLICIT NONE
      TYPE(SLVCFG), INTENT(INOUT)    :: CFG
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: B
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: D,AD,G,R,X
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(IN)     :: A
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: AUX
      LOGICAL, INTENT(IN)            :: INFOGR
        END SUBROUTINE
!
        SUBROUTINE FASP(X,Y,ZF,NPOIN,XRELV,YRELV,ZRELV,NP,NBOR,KP1BOR,
     &                  NPTFR,DM)
        IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NP,NPTFR
      INTEGER, INTENT(IN) :: NBOR(NPTFR),KP1BOR(NPTFR)
      DOUBLE PRECISION, INTENT(IN) :: X(NPOIN),Y(NPOIN),DM
      DOUBLE PRECISION, INTENT(IN) :: XRELV(NP),YRELV(NP),ZRELV(NP)
      DOUBLE PRECISION, INTENT(OUT) :: ZF(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE FILPOL( F , C , XSOM , YSOM , NSOM , MESH )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NSOM
      DOUBLE PRECISION, INTENT(IN) :: C,XSOM(*),YSOM(*)
      TYPE(BIEF_OBJ), INTENT(INOUT) :: F
      TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END SUBROUTINE
!
        SUBROUTINE FILP10
     &( F , C , XSOM , YSOM , NSOM , X , Y , NELEM , NELMAX , IKLE )
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NSOM , NELEM , NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: F(*)
      DOUBLE PRECISION, INTENT(IN) :: X(*) , Y(*)
      DOUBLE PRECISION, INTENT(IN) :: XSOM(NSOM) , YSOM(NSOM) , C
      INTEGER, INTENT(IN) :: IKLE(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE FILP11( F , C , XSOM , YSOM , NSOM , X , Y , NPOIN )
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NSOM , NPOIN
        DOUBLE PRECISION, INTENT(INOUT) :: F(*)
        DOUBLE PRECISION, INTENT(IN) :: X(*) , Y(*)
        DOUBLE PRECISION, INTENT(IN) :: XSOM(NSOM) , YSOM(NSOM),C
        END SUBROUTINE
!
        SUBROUTINE FILP12
     &(F,C,XSOM,YSOM,NSOM,X,Y,NPOIN,NELEM,NELMAX,IKLE)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NSOM , NELEM , NELMAX , NPOIN
      DOUBLE PRECISION, INTENT(INOUT) :: F(*)
      DOUBLE PRECISION, INTENT(IN) :: X(*) , Y(*)
      DOUBLE PRECISION, INTENT(IN) :: XSOM(NSOM) , YSOM(NSOM) , C
      INTEGER, INTENT(IN) :: IKLE(NELMAX,4)
        END SUBROUTINE
!
        SUBROUTINE FILTER
     &    (VEC,BLDMAT,T1,T2,A,FORMUL,XMUL,F,G,H,U,V,W,MESH,MSK,MASKEL,N)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN)           :: N
          DOUBLE PRECISION, INTENT(IN)  :: XMUL
          LOGICAL, INTENT(IN)           :: BLDMAT,MSK
          CHARACTER(LEN=16), INTENT(IN) :: FORMUL
          TYPE(BIEF_MESH), INTENT(INOUT):: MESH
          TYPE(BIEF_OBJ), INTENT(INOUT) :: VEC,A,T1,T2
          TYPE(BIEF_OBJ), INTENT(IN)    :: F,G,H,U,V,W,MASKEL
        END SUBROUTINE
!
        SUBROUTINE FIND_IN_SEL(RES,NAME,NFIC,W,OK,RECORD,NP,TIME)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: RES
          CHARACTER(LEN=16), INTENT(IN) :: NAME
          LOGICAL, INTENT(OUT)          :: OK
          REAL, INTENT(INOUT)           :: W(*)
          INTEGER, INTENT(IN) :: NFIC
          INTEGER, INTENT(IN),  OPTIONAL            :: RECORD
          INTEGER, INTENT(OUT), OPTIONAL            :: NP
          DOUBLE PRECISION, INTENT(OUT), OPTIONAL   :: TIME
        END SUBROUTINE
!
        SUBROUTINE FLUSEC
     &(U,V,H,IKLE,XEL,YEL,NELMAX,NELEM,X,Y,DT,NCP,CTRLSC,INFO,TPS,
     & KNOGL,MSKSEC,BM1,BM2,T1,HPROP,MESH,S,CV1,IFABOR,COMFLU,CUMFLO)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELMAX,NELEM,NCP
      INTEGER, INTENT(IN) :: IKLE(NELMAX,*),CTRLSC(NCP),KNOGL(*)
      INTEGER, INTENT(IN) :: IFABOR(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),TPS,DT
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
      LOGICAL, INTENT(IN) :: INFO,COMFLU,CUMFLO
      TYPE(BIEF_OBJ), INTENT(IN)    :: HPROP,S,U,V,H
      TYPE(BIEF_OBJ), INTENT(INOUT) :: BM1,BM2,T1,MSKSEC,CV1
      TYPE(BIEF_MESH) :: MESH
        END SUBROUTINE
!
        SUBROUTINE FLUX_MASK(FXMAT,NSEG,GLOSEG,SIZGLO,MASKPT)
          IMPLICIT NONE
          INTEGER, INTENT(IN)            ::NSEG,SIZGLO
          INTEGER, INTENT(IN)            ::GLOSEG(SIZGLO,2)
          DOUBLE PRECISION, INTENT(INOUT)::FXMAT(NSEG)
          DOUBLE PRECISION, INTENT(IN)   ::MASKPT(*)
        END SUBROUTINE
!
        SUBROUTINE FLUXPR
     &(NSEC,CTRLSC,FLX,VOLNEG,VOLPOS,INFO,TPS,NSEG,NCSIZE,CUMFLO)
      IMPLICIT NONE
      INTEGER, INTENT(IN)          :: NSEC,NCSIZE
      INTEGER, INTENT(IN)          :: CTRLSC(*)
      INTEGER, INTENT(IN)          :: NSEG(NSEC)
      LOGICAL, INTENT(IN)          :: INFO,CUMFLO
      DOUBLE PRECISION, INTENT(IN) :: FLX(NSEC),TPS
      DOUBLE PRECISION, INTENT(IN) :: VOLNEG(NSEC),VOLPOS(NSEC)
        END SUBROUTINE
!
        SUBROUTINE FLUX_EF_VF
     &(FLOW,PHIEL,NSEG,NELEM,ELTSEG,ORISEG,IKLE,INIFLO,IOPT,FN)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NSEG,IOPT,NELEM
      INTEGER, INTENT(IN)             :: ELTSEG(NELEM,3),ORISEG(NELEM,3)
      INTEGER, INTENT(IN)             :: IKLE(NELEM,3)
      DOUBLE PRECISION, INTENT(INOUT) :: FLOW(NSEG)
      DOUBLE PRECISION, INTENT(IN)    :: PHIEL(NELEM,3)
      LOGICAL, INTENT(IN)             :: INIFLO
      TYPE(BIEF_OBJ), INTENT(IN), OPTIONAL :: FN
        END SUBROUTINE
!
        SUBROUTINE FLUX_EF_VF_3D
     &(FLOW,W2D,W3D,NSEG2D,NSEG3D,NELEM2,NELEM3,MESH2D,MESH3D,INIFLO,
     & IOPT,SENS)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NSEG2D,NSEG3D,NELEM2,NELEM3
!                                             *=NSEG2D*NPLAN+NPOIN2*NETAGE
      INTEGER, INTENT(IN)             :: IOPT,SENS
      DOUBLE PRECISION, INTENT(INOUT) :: FLOW(NSEG3D)
      DOUBLE PRECISION, INTENT(IN)    :: W3D(NELEM3,6)
      DOUBLE PRECISION, INTENT(INOUT) :: W2D(NELEM2,3)
      LOGICAL, INTENT(IN)             :: INIFLO
      TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH2D,MESH3D
        END SUBROUTINE
!
        SUBROUTINE FOND(ZF,X,Y,NPOIN,NFON,NBOR,KP1BOR,NPTFR)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NFON,NPOIN,NPTFR
      DOUBLE PRECISION, INTENT(OUT) :: ZF(NPOIN)
      DOUBLE PRECISION, INTENT(IN)  :: X(NPOIN),Y(NPOIN)
      INTEGER, INTENT(IN) :: NBOR(NPTFR),KP1BOR(NPTFR)
        END SUBROUTINE
!
        SUBROUTINE FONSTR
     &(H,ZF,Z,CHESTR,NGEO,NFON,NOMFON,MESH,FFON,LISTIN)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT) :: H,ZF,Z,CHESTR
      CHARACTER(LEN=72), INTENT(IN) :: NOMFON
      TYPE(BIEF_MESH), INTENT(IN) :: MESH
      DOUBLE PRECISION, INTENT(IN) :: FFON
      LOGICAL, INTENT(IN) :: LISTIN
      INTEGER, INTENT(IN) :: NFON,NGEO
        END SUBROUTINE
!
        SUBROUTINE FRONT2
     &(NFRLIQ,NFRSOL,DEBLIQ,FINLIQ,DEBSOL,FINSOL,LIHBOR,LIUBOR,
     & X,Y,NBOR,KP1BOR,DEJAVU,NPOIN,NPTFR,KLOG,LISTIN,NUMLIQ,
     & MAXFRO)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NPTFR,KLOG,MAXFRO
      INTEGER, INTENT(OUT) :: NFRLIQ,NFRSOL
      INTEGER, INTENT(OUT) :: DEBLIQ(MAXFRO),FINLIQ(MAXFRO)
      INTEGER, INTENT(OUT) :: DEBSOL(MAXFRO),FINSOL(MAXFRO)
      INTEGER , INTENT(IN) :: LIHBOR(NPTFR),LIUBOR(NPTFR)
      DOUBLE PRECISION, INTENT(IN) :: X(NPOIN) , Y(NPOIN)
      INTEGER, INTENT(IN) :: NBOR(NPTFR),KP1BOR(NPTFR)
      INTEGER, INTENT(OUT) :: DEJAVU(NPTFR)
      LOGICAL, INTENT(IN)  :: LISTIN
      INTEGER, INTENT(OUT) :: NUMLIQ(NPTFR)
        END SUBROUTINE
!
        SUBROUTINE FROPRO
     &(NBOR,IKLE,NELEM,NELMAX,NPOIN,NPMAX,NPTFR,IELM,
     & IKLEM1,LIMVOI,OPTASS,PRODUC,MXPTVS,T1,
     & GLOSEG,SIZGLO,NSEG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)  :: NELMAX,NPMAX,MXPTVS,NELEM
      INTEGER, INTENT(IN)  :: NPOIN,NPTFR,IELM,OPTASS,PRODUC
      INTEGER, INTENT(IN)  :: NSEG,SIZGLO
      INTEGER, INTENT(IN)  :: NBOR(*)
      INTEGER, INTENT(IN)  :: IKLE(NELMAX,*),GLOSEG(SIZGLO,2)
      INTEGER, INTENT(OUT) :: IKLEM1(NPMAX,MXPTVS,4,2)
      INTEGER, INTENT(OUT) :: LIMVOI(MXPTVS,2)
      INTEGER, INTENT(OUT) :: T1(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE GEOELT(SURDET,SURFAC,XEL,YEL,NELEM,NELMAX,IELM)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: IELM,NELEM,NELMAX
      DOUBLE PRECISION, INTENT(OUT) :: SURDET(NELEM),SURFAC(NELEM)
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
        END SUBROUTINE
!
        SUBROUTINE GETTRI(M,MDIFF,TETA,MESH3D,NPLAN,NPOIN2,NSEG2D)
        USE BIEF_DEF
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NPLAN,NPOIN2,NSEG2D
        DOUBLE PRECISION, INTENT(IN)    :: TETA
        DOUBLE PRECISION, INTENT(INOUT) :: M(NPOIN2*NPLAN,*)
        TYPE(BIEF_OBJ),  INTENT(INOUT)  :: MDIFF
        TYPE(BIEF_MESH), INTENT(IN)     :: MESH3D
        END SUBROUTINE
!
        SUBROUTINE GETTRIEBE
     &(XAUX,AD,AX,TETA,IKLE,NPOIN,NELEM,NELMAX,MESH)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,NPOIN
      INTEGER, INTENT(IN) :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(IN)    :: TETA
      DOUBLE PRECISION, INTENT(INOUT) :: XAUX(NPOIN,*),AX(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: AD(NPOIN)
      TYPE(BIEF_MESH) :: MESH
        END SUBROUTINE
!
        SUBROUTINE GETTRISEG
     &(XAUX,AD,AX,TETA,NPOIN,MESH,NSEG3D,NSEG2D,NPLAN,NPOIN2)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NSEG3D,NSEG2D,NPLAN,NPOIN2
      DOUBLE PRECISION, INTENT(IN)    :: TETA
      DOUBLE PRECISION, INTENT(INOUT) :: XAUX(NPOIN,*),AX(NSEG3D)
      DOUBLE PRECISION, INTENT(INOUT) :: AD(NPOIN)
      TYPE(BIEF_MESH) :: MESH
        END SUBROUTINE
!
        SUBROUTINE GMRES(X,A,B,MESH,R0,V,AV,CFG,INFOGR,AUX)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(SLVCFG), INTENT(INOUT)    :: CFG
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: B
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: X,V,AV,R0
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(IN)     :: A
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: AUX
      LOGICAL, INTENT(IN)            :: INFOGR
        END SUBROUTINE
!
        SUBROUTINE GODOWN(X, A,B ,DITR,MESH,COPY)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X
      TYPE(BIEF_OBJ), INTENT(IN)    :: B,A
      TYPE(BIEF_MESH), INTENT(IN)   :: MESH
      CHARACTER(LEN=1), INTENT(IN)  :: DITR
      LOGICAL, INTENT(IN) :: COPY
        END SUBROUTINE
!
        SUBROUTINE GODWN1(X, A,B ,DITR,MESH,COPY)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X
      TYPE(BIEF_OBJ), INTENT(IN)    :: B,A
      TYPE(BIEF_MESH), INTENT(IN)   :: MESH
      CHARACTER(LEN=1), INTENT(IN)  :: DITR
      LOGICAL, INTENT(IN) :: COPY
        END SUBROUTINE
!
        SUBROUTINE GOUP(X, A,B ,DITR,MESH,COPY)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X
      TYPE(BIEF_OBJ), INTENT(IN)    :: A,B
      TYPE(BIEF_MESH), INTENT(IN)   :: MESH
      CHARACTER(LEN=1), INTENT(IN)  :: DITR
      LOGICAL, INTENT(IN) :: COPY
        END SUBROUTINE
!
        SUBROUTINE GOUP1(X, A,B ,DITR,MESH,COPY)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X
      TYPE(BIEF_OBJ), INTENT(IN)    :: B
      TYPE(BIEF_OBJ), INTENT(IN)    :: A
      TYPE(BIEF_MESH), INTENT(IN)   :: MESH
      CHARACTER(LEN=1), INTENT(IN)  :: DITR
      LOGICAL, INTENT(IN) :: COPY
        END SUBROUTINE
!
        SUBROUTINE GRACJG(X, A,B , MESH, D,AD,G,R, CFG,INFOGR,AUX)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(SLVCFG), INTENT(INOUT)    :: CFG
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: B
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: D,AD,G,R,X
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(IN)     :: A
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: AUX
      LOGICAL, INTENT(IN)            :: INFOGR
        END SUBROUTINE
!
        SUBROUTINE GRADP(NS,NT,NU,AIRT,X,Y,DPX,DPY)
        IMPLICIT NONE
        INTEGER, INTENT(IN)           :: NS,NT,NU(NT,3)
        DOUBLE PRECISION, INTENT(IN)  :: X(NS),Y(NS),AIRT(NT)
        DOUBLE PRECISION, INTENT(OUT) :: DPX(3,NT),DPY(3,NT)
        END SUBROUTINE
!
        SUBROUTINE GSEBE(B,A,MESH)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(IN) :: A
      TYPE(BIEF_OBJ), INTENT(INOUT) :: B
      TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END SUBROUTINE
!
        SUBROUTINE GTSH11(SHP,ELT,IKLE,NPOIN,NELEM,NELMAX,MSK,MASKEL)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NPOIN,NELEM,NELMAX
      INTEGER, INTENT(IN)    :: IKLE(NELMAX,3)
      INTEGER, INTENT(INOUT) :: ELT(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: SHP(3,NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: MASKEL(NELMAX)
      LOGICAL, INTENT(IN) :: MSK
        END SUBROUTINE
!
        SUBROUTINE GTSH13(SHP,ELT,IKLE,NPOIN,
     &                    NELEM,NELMAX,MSK,MASKEL)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NPOIN,NELEM,NELMAX
      INTEGER, INTENT(IN)    :: IKLE(NELMAX,6)
      INTEGER, INTENT(INOUT) :: ELT(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: SHP(3,NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: MASKEL(NELMAX)
      LOGICAL, INTENT(IN) :: MSK
        END SUBROUTINE
!
        SUBROUTINE GTSH41
     &(WS,SHP,SHZ,ELT,ETA,IKLE2,NPOIN2,NELEM2,NPLAN,MSK,MASKEL)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NPOIN2,NELEM2,NPLAN
      INTEGER, INTENT(IN)    :: IKLE2(NELEM2,3)
      INTEGER, INTENT(INOUT) :: ELT(NPOIN2,NPLAN),ETA(NPOIN2,NPLAN)
      DOUBLE PRECISION, INTENT(IN) :: WS(NPOIN2,NPLAN)
      DOUBLE PRECISION, INTENT(IN) :: MASKEL(NELEM2)
      DOUBLE PRECISION, INTENT(INOUT) :: SHP(3,NPOIN2,NPLAN)
      DOUBLE PRECISION, INTENT(INOUT) :: SHZ(NPOIN2,NPLAN)
      LOGICAL, INTENT(IN) :: MSK
        END SUBROUTINE
!
        SUBROUTINE HLOC
     &(NPOIN,NSEG,NPTFR,NUBO,NBOR,VNOCL,XNEBOR,YNEBOR,AIRS,DTHAUT)
      IMPLICIT NONE
      INTEGER, INTENT(IN)           :: NSEG,NPOIN,NPTFR,NUBO(2,*)
      INTEGER, INTENT(IN)           :: NBOR(*)
      DOUBLE PRECISION, INTENT(IN)  :: VNOCL(3,*),XNEBOR(*),YNEBOR(*)
      DOUBLE PRECISION, INTENT(IN)  :: AIRS(NPOIN)
      DOUBLE PRECISION, INTENT(OUT) :: DTHAUT(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE HVF
     &(H,HN,FXMAT,UNSV2D,DT,FXBOR,SMH,YASMH,NSEG,NPOIN,NPTFR,GLOSEG,
     & SIZGLO,NBOR,OPTSOU,T7,MESH,MSK)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NSEG,NPOIN,NPTFR,OPTSOU,SIZGLO
      INTEGER, INTENT(IN)             :: GLOSEG(SIZGLO,2)
      INTEGER, INTENT(IN)             :: NBOR(NPTFR)
      DOUBLE PRECISION, INTENT(IN)    :: DT
      DOUBLE PRECISION, INTENT(INOUT) :: H(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: HN(NPOIN),UNSV2D(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FXBOR(NPOIN),SMH(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FXMAT(NSEG*2)
      LOGICAL, INTENT(IN)             :: YASMH,MSK
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: T7
      TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
        END SUBROUTINE
!
        INTEGER FUNCTION IELBOR( IELM , I )
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM,I
        END FUNCTION
!
        SUBROUTINE IMPVEC(VEC,NOM,NPOIN)
          IMPLICIT NONE
          INTEGER, INTENT(IN)           :: NPOIN
          DOUBLE PRECISION, INTENT(IN)  :: VEC(NPOIN)
          CHARACTER(LEN=32), INTENT(IN) :: NOM
        END SUBROUTINE
!
        SUBROUTINE INBIEF
     &(LIHBOR,KLOG,IT1,IT2,IT3,LVMAC,IELMX,
     & LAMBD0,SPHERI,MESH,T1,T2,OPTASS,PRODUC,EQUA)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)            :: IELMX,OPTASS,PRODUC,KLOG,LVMAC
      INTEGER, INTENT(IN)            :: LIHBOR(*)
      DOUBLE PRECISION, INTENT(IN)   :: LAMBD0
      LOGICAL, INTENT(IN)            :: SPHERI
      CHARACTER(LEN=20)              :: EQUA
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: T1,T2,IT1,IT2,IT3
        END SUBROUTINE
!
        LOGICAL FUNCTION INCLUS ( C1 , C2 )
          USE BIEF_DEF
          IMPLICIT NONE
          CHARACTER*(*), INTENT(IN) :: C1 , C2
        END FUNCTION
!
        LOGICAL FUNCTION INCLU2 ( C1 , C2 )
          USE BIEF_DEF
          IMPLICIT NONE
          CHARACTER*(*), INTENT(IN) :: C1 , C2
        END FUNCTION
!
        SUBROUTINE INFCEL
     & ( XX , YY , IKLE , NUBO , VNOIN , NPOIN ,
     &   NVMAX , NELEM , NELMAX , NSEG ,CMI ,JMI ,AIRST)
      IMPLICIT  NONE
      INTEGER, INTENT(IN)    :: NSEG,NELMAX,NPOIN,NVMAX,NELEM
      INTEGER, INTENT(IN)    :: IKLE(NELMAX,*)
      INTEGER, INTENT(INOUT) :: JMI(*)
      INTEGER, INTENT(INOUT) :: NUBO(2,NSEG)
      DOUBLE PRECISION, INTENT(IN)    :: XX(NPOIN),YY(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: VNOIN(3,NSEG),CMI(2,*)
      DOUBLE PRECISION, INTENT(INOUT) :: AIRST(2,*)
        END SUBROUTINE
!
        SUBROUTINE BIEF_ININDS(NPOIN,NPTFR,NELEM,NPMAX,NPTFX,
     &                         NELMAX,NPLAN,NSEGBOR,NDS,NELEB)
          IMPLICIT NONE
          INTEGER , INTENT(IN) :: NPOIN,NPTFR,NELEM,NPMAX,NPTFX
          INTEGER , INTENT(IN) :: NELMAX,NPLAN,NSEGBOR
          INTEGER , INTENT(IN), OPTIONAL :: NELEB
          INTEGER , INTENT(OUT)          :: NDS(0:81,7)
        END SUBROUTINE
!
        LOGICAL FUNCTION INPOLY( X , Y , XSOM , YSOM , NSOM )
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NSOM
        DOUBLE PRECISION, INTENT(IN) :: X , Y
        DOUBLE PRECISION, INTENT(IN) :: XSOM(NSOM) , YSOM(NSOM)
        END FUNCTION
!
        SUBROUTINE INTERP
     & ( U,UTILD,SHP,NDP,SHZ,ETA,ELT,NP,NPOIN2,NPLAN,
     &   IELM,IKLE,NELMAX )
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NP,NELMAX,NPLAN,NPOIN2,NDP,IELM
      INTEGER, INTENT(IN) :: IKLE(NELMAX,*),ELT(NP),ETA(NP)
      DOUBLE PRECISION, INTENT(IN)    :: U(NPOIN2,NPLAN)
      DOUBLE PRECISION, INTENT(IN)    :: SHP(NDP,NP),SHZ(NP)
      DOUBLE PRECISION, INTENT(INOUT) :: UTILD(NP)
        END SUBROUTINE
!
        SUBROUTINE INVMTX(AM,BM,NP)
          IMPLICIT NONE
          INTEGER, INTENT(IN)            ::NP
          DOUBLE PRECISION, INTENT(INOUT)::AM(NP,NP),BM(NP,NP)
        END SUBROUTINE
!
        DOUBLE PRECISION FUNCTION JULTIM
     &(YEAR,MONTH,DAY,HOUR,MIN,SEC,AT)
      IMPLICIT NONE
      INTEGER,          INTENT(IN) :: MONTH,DAY,HOUR,MIN,SEC
      INTEGER,          INTENT(INOUT) :: YEAR
      DOUBLE PRECISION, INTENT(IN) :: AT
        END FUNCTION
!
        SUBROUTINE KSUPG(KX,KY,XMUL,U,V,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_MESH) , INTENT(IN)    :: MESH
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: U,V
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: KX,KY
          DOUBLE PRECISION, INTENT(IN)    :: XMUL
        END SUBROUTINE
!
        SUBROUTINE KSPG11
     &(KX,KY,XEL,YEL,U,V,IKLE,NELEM,NELMAX,XMUL)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: KX(NELEM),KY(NELEM)
      DOUBLE PRECISION, INTENT(IN)    :: U(*),V(*),XMUL
      DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
        END SUBROUTINE
!
        SUBROUTINE LATITU(COSLAT,SINLAT,LAMBD0,Y,NPOIN)
          IMPLICIT NONE
          INTEGER         , INTENT(IN)    :: NPOIN
          DOUBLE PRECISION, INTENT(IN)    :: Y(NPOIN)
          DOUBLE PRECISION, INTENT(INOUT) :: COSLAT(NPOIN),SINLAT(NPOIN)
          DOUBLE PRECISION, INTENT(IN)    :: LAMBD0
        END SUBROUTINE
!
        SUBROUTINE LECLIM
     &   (LIHBOR,LIUBOR,LIVBOR,LITBOR,HBOR,UBOR,VBOR,TBOR,
     &    AUBOR,ATBOR,BTBOR,NPTFR,STDGEO,TRAC,NLIM,
     &    KENT,KENTU,KSORT,KADH,KLOG,KINC,NUMLIQ,MESH,BOUNDARY_COLOUR,
     &    NPTFR2)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NLIM,KENT,KSORT,KADH,KLOG,KINC,KENTU
      INTEGER, INTENT(IN)    :: STDGEO,NPTFR
      LOGICAL, INTENT(IN)    :: TRAC
      INTEGER, INTENT(INOUT) :: NUMLIQ(*)
      INTEGER, INTENT(INOUT) :: LIUBOR(NPTFR),LIVBOR(NPTFR)
      INTEGER, INTENT(INOUT) :: LIHBOR(NPTFR),LITBOR(NPTFR)
      DOUBLE PRECISION,  INTENT(INOUT) :: UBOR(*),VBOR(*)
      DOUBLE PRECISION,  INTENT(INOUT) :: HBOR(NPTFR),AUBOR(NPTFR)
      DOUBLE PRECISION,  INTENT(INOUT) :: TBOR(NPTFR),ATBOR(NPTFR)
      DOUBLE PRECISION,  INTENT(INOUT) :: BTBOR(NPTFR)
      TYPE(BIEF_MESH),   INTENT(INOUT) :: MESH
      INTEGER, OPTIONAL, INTENT(INOUT) :: BOUNDARY_COLOUR(NPTFR)
      INTEGER, OPTIONAL, INTENT(IN)    :: NPTFR2
        END SUBROUTINE
!
        SUBROUTINE LIT(X,W,I,C,NVAL,TYPE,CANAL,STD,ISTAT)
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NVAL,CANAL
          INTEGER, INTENT(INOUT)          :: ISTAT
          CHARACTER*(*), INTENT(IN)       :: TYPE , STD
          INTEGER, INTENT(INOUT)          :: I(NVAL)
          DOUBLE PRECISION, INTENT(INOUT) :: X(NVAL)
          REAL, INTENT(INOUT)             :: W(NVAL)
          CHARACTER*(*), INTENT(INOUT)    :: C
        END SUBROUTINE
!
        SUBROUTINE LITENR(VARSOR,CLAND,
     &             NPRE,STD,HIST,NHIST,NPOIN,AT,TEXTPR,TEXTLU,
     &             NVAR,VARCLA,NVARCL,TROUVE,ALIRE,W,LISTIN,MAXVAR,
     &             NPOIN_PREV,NPLAN_PREV,WD)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: VARSOR,CLAND
      INTEGER, INTENT(IN)             :: NPRE,NHIST,NPOIN,MAXVAR,NVARCL
      INTEGER, INTENT(IN)             :: NVAR,ALIRE(MAXVAR)
      INTEGER, INTENT(OUT)            :: TROUVE(MAXVAR)
      INTEGER, INTENT(IN), OPTIONAL   :: NPOIN_PREV,NPLAN_PREV
           CHARACTER(LEN=*)           :: STD
         CHARACTER(LEN=32)            :: TEXTPR(MAXVAR),TEXTLU(MAXVAR)
          CHARACTER(LEN=32)               :: VARCLA(NVARCL)
          DOUBLE PRECISION, INTENT(INOUT) :: HIST(*)
          DOUBLE PRECISION, INTENT(OUT)   :: AT
          REAL                            :: W(NPOIN)
          LOGICAL, INTENT(IN)             :: LISTIN
          DOUBLE PRECISION, INTENT(OUT), OPTIONAL :: WD(*)
        END SUBROUTINE
!
        SUBROUTINE LUBKSB(A,N,NP,INDX,B)
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: N,NP
          INTEGER, INTENT(IN) :: INDX(N)
          DOUBLE PRECISION, INTENT(INOUT) :: B(N)
          DOUBLE PRECISION, INTENT(IN)    :: A(NP,NP)
        END SUBROUTINE
!
        SUBROUTINE LUDCMP(A,N,NP,INDX)
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: N,NP
          INTEGER, INTENT(INOUT)          :: INDX(N)
          DOUBLE PRECISION, INTENT(INOUT) :: A(NP,NP)
        END SUBROUTINE
!
        SUBROUTINE LUMP(DIAG,A,MESH,XMUL)
          USE BIEF_DEF
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(IN)    :: XMUL
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: DIAG
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: A
          TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE MASKBD
     &(MASKEL,ZFE,ZF,HN,HMIN,IKLE,IFABOR,ITRA01,NELEM,NPOIN)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NPOIN
      INTEGER, INTENT(IN)             :: IKLE(NELEM,3),IFABOR(NELEM,3)
      INTEGER, INTENT(INOUT)          :: ITRA01(NELEM)
      DOUBLE PRECISION, INTENT(IN)    :: ZFE(NELEM),ZF(NPOIN),HN(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: HMIN
      DOUBLE PRECISION, INTENT(INOUT) :: MASKEL(NELEM)
        END SUBROUTINE
!
        SUBROUTINE MASKTO
     &(MASKEL,MASKPT,IFAMAS,IKLE,IFABOR,ELTSEG,NSEG,
     & NELEM,NPOIN,IELM,MESH)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELEM,NPOIN,IELM,NSEG
      INTEGER, INTENT(IN)    :: IKLE(NELEM,3),IFABOR(NELEM,3)
      INTEGER, INTENT(IN)    :: ELTSEG(NELEM,3)
      INTEGER, INTENT(INOUT) :: IFAMAS(NELEM,3)
      DOUBLE PRECISION, INTENT(IN)    :: MASKEL(NELEM)
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: MASKPT
      TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
        END SUBROUTINE
!
        SUBROUTINE MATRBL( OP , X , A , Y , C , MESH )
      USE BIEF_DEF
      IMPLICIT NONE
      CHARACTER(LEN=8), INTENT(IN)   :: OP
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: X
      TYPE(BIEF_OBJ), INTENT(IN)     :: A,Y
      DOUBLE PRECISION, INTENT(IN)   :: C
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE MATRIX
     &    (M,OP,FORMUL,IELM1,IELM2,XMUL,F,G,H,U,V,W,MESH,MSK,MASKEL)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ)   , INTENT(INOUT) :: M
          INTEGER          , INTENT(IN)    :: IELM1,IELM2
          DOUBLE PRECISION , INTENT(IN)    :: XMUL
          LOGICAL          , INTENT(IN)    :: MSK
          CHARACTER(LEN=16), INTENT(IN)    :: FORMUL
          CHARACTER(LEN=8) , INTENT(IN)    :: OP
          TYPE(BIEF_OBJ)   , INTENT(IN)    :: F,G,H,U,V,W,MASKEL
          TYPE(BIEF_MESH)  , INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE MATRIY
     &(FORMUL,XM,TYPDIA,TYPEXT,
     & XMUL,SF,SG,SH,SU,SV,SW,F,G,H,U,V,W,T,LEGO,
     & XEL,YEL,ZEL,SURFAC,IKLE,NBOR,
     & NELEM,NELMAX,IELM1,IELM2,S,NPLAN)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELMAX,NELEM,IELM1,IELM2,S
      INTEGER, INTENT(IN)             :: NPLAN
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,*),NBOR(*)
      LOGICAL, INTENT(INOUT)          :: LEGO
      TYPE(BIEF_OBJ), INTENT(IN)      :: SF,SG,SH,SU,SV,SW
      DOUBLE PRECISION, INTENT(IN)    :: F(*),G(*),H(*),U(*),V(*),W(*)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XEL(*),YEL(*),ZEL(*)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(INOUT) :: XM(NELMAX,*),T(NELMAX,*)
      CHARACTER(LEN=16), INTENT(IN)   :: FORMUL
      CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MATVCT
     &(OP, X , DA,TYPDIA,XA,TYPEXT, Y ,
     & C,IKLE,NPT,NELEM,NELMAX,W,LEGO,IELM1,IELM2,IELMX,LV,
     & S,P,IKLEM1,DIMIKM,LIMVOI,MXPTVS,NPMAX,NPOIN,NPTFR,
     & GLOSEG,SIZGLO,SIZXA,NDP,MESH)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: IELM1,IELM2,IELMX,NPOIN,NPMAX,S,P,SIZXA
      INTEGER, INTENT(IN) :: NDP
      INTEGER, INTENT(INOUT) :: NPT
      INTEGER, INTENT(IN) :: NELEM,NELMAX,LV,DIMIKM,MXPTVS,NPTFR,SIZGLO
      INTEGER, INTENT(IN) :: IKLE(NELMAX,*),IKLEM1(*),LIMVOI(*)
      INTEGER, INTENT(IN) :: GLOSEG(SIZGLO,2)
      CHARACTER(LEN=8), INTENT(IN)    :: OP
      CHARACTER(LEN=1),INTENT(IN)     :: TYPDIA,TYPEXT
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN)    :: Y(*),DA(*),XA(SIZXA,*),C
      DOUBLE PRECISION, INTENT(INOUT) :: W(NELMAX,*)
      LOGICAL, INTENT(IN)             :: LEGO
      TYPE(BIEF_MESH), INTENT(IN)     :: MESH
        END SUBROUTINE
!
        SUBROUTINE MATVEC( OP , X , A , Y , C , MESH , LEGO )
          USE BIEF_DEF
          IMPLICIT NONE
          CHARACTER*8     , INTENT(IN)           :: OP
          TYPE(BIEF_OBJ)  , INTENT(INOUT)        :: X
          TYPE(BIEF_OBJ)  , INTENT(IN)           :: A,Y
          DOUBLE PRECISION, INTENT(IN)           :: C
          TYPE(BIEF_MESH) , INTENT(INOUT)        :: MESH
          LOGICAL         , INTENT(IN), OPTIONAL :: LEGO
        END SUBROUTINE
!
        SUBROUTINE MAXI( XMAX , IMAX , X , NPOIN )
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPOIN
      INTEGER, INTENT(INOUT)          :: IMAX
      DOUBLE PRECISION, INTENT(INOUT) :: XMAX
      DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE MER11
     &(X, XA1,XA2,XA3,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: XA1(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XA2(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XA3(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MER21
     &(X, XA1,XA2,XA3,XA4,XA5,XA6 , IKLE1,IKLE2,IKLE3,IKLE4,
     & NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN)             :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN)             :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN) :: XA1(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA2(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA5(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA6(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MER41
     &(X, XA1 ,XA2 ,XA3 ,XA4 ,XA5 ,
     &    XA6 ,XA7 ,XA8 ,XA9 ,XA10,
     &    XA11,XA12,XA13,XA14,XA15,
     &    IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,
     &    NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN) :: XA1(NELMAX),XA2(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA4(NELMAX),XA5(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA6(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA7(NELMAX),XA8(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA9(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA10(NELMAX),XA11(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA12(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA13(NELMAX),XA14(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA15(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MINI( XMIN , IMIN , X , NPOIN )
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NPOIN
          INTEGER, INTENT(INOUT)          :: IMIN
          DOUBLE PRECISION, INTENT(INOUT) :: XMIN
          DOUBLE PRECISION, INTENT(IN)    :: X(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE MT01AA
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SURFAC,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT01BB
     &( A11 , A12 , A13 , A14 ,
     &        A22 , A23 , A24 ,
     &              A33 , A34 ,
     &                    A44 ,
     &  XMUL,SURFAC,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) ::                      A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT01OO(A11,A12,A22,XMUL,LGSEG,NELEM,NELMAX)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: A11(NELMAX),A12(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A22(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: LGSEG(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
        END SUBROUTINE
!
        SUBROUTINE MT01PP(T,XM,XMUL,Z,SURFAC,IKLE,NELEM,NELMAX)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6),XM(NELMAX,30)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL,Z(*),SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT01TT(T,XM,XMUL,X,Y,Z,IKLE,NELEM,NELMAX)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,4)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,4),XM(NELMAX,6)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
        END SUBROUTINE
!
        SUBROUTINE MT02AA
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SU,U,SV,V,
     &  XEL,YEL,SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,FORMUL)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: U(*),V(*)
!     STRUCTURE OF U
      TYPE(BIEF_OBJ), INTENT(IN)      :: SU,SV
      DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      CHARACTER(LEN=16), INTENT(IN)   :: FORMUL
        END SUBROUTINE
!
        SUBROUTINE MT02AA_2
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SU,SV,U,V,
     &  XEL,YEL,SURFAC,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: U(*),V(*)
      TYPE(BIEF_OBJ)  , INTENT(IN) :: SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT02BB
     &( A11 , A12 , A13 , A14 ,
     &        A22 , A23 , A24 ,
     &              A33 , A34 ,
     &                    A44 ,
     &  XMUL,SU,U,XEL,YEL,SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) ::                      A44(*)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL,U(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SU
      DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT02PP
     &(T,XM,XMUL,SF,SG,SH,F,G,H,X,Y,Z,SURFAC,IKLE,NELEM,NELMAX,INCHYD,
     & FORMUL,NPLAN)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX,NPLAN
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6),XM(NELMAX,15)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: F(*),G(*),H(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SF,SG,SH
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
      LOGICAL, INTENT(IN)             :: INCHYD
      CHARACTER(LEN=16), INTENT(IN)   :: FORMUL
        END SUBROUTINE
!
        SUBROUTINE MT02PT(T,XM,XMUL,SF,SG,SH,F,G,H,
     &                    X,Y,Z,IKLE,NELEM,NELMAX,INCHYD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6),XM(NELMAX,15)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: F(*),G(*),H(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SF,SG,SH
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
      LOGICAL, INTENT(IN)             :: INCHYD
        END SUBROUTINE
!
        SUBROUTINE MT02TT(T,XM,XMUL,SF,SG,SH,F,G,H,
     &                    X,Y,Z,IKLE,NELEM,NELMAX,INCHYD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,4)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,4),XM(NELMAX,6)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: F(*),G(*),H(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SF,SG,SH
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
      LOGICAL, INTENT(IN)             :: INCHYD
        END SUBROUTINE
!
        SUBROUTINE MT03AA
     &( A11 , A12 , A13 ,
     &  A21 , A22 , A23 ,
     &  A31 , A32 , A33 ,
     &  XMUL,SF,SG,SU,SV,F,G,U,V,
     &  XEL,YEL,SURFAC,IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*),G(*),U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN)   :: SF,SG,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT03BB
     &( A11 , A12 , A13 , A14 ,
     &  A21 , A22 , A23 , A24 ,
     &  A31 , A32 , A33 , A34 ,
     &  A41 , A42 , A43 , A44 ,
     &  XMUL,SF,SG,SU,SV,F,G,U,V,
     &  XEL,YEL,IKLE1,IKLE2,IKLE3,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*),A44(*)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: F(*),G(*),U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SF,SG,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT04AA
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SU,SV,U,V,XEL,YEL,SURFAC,IKLE,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL,U(*),V(*)
      TYPE(BIEF_OBJ)  , INTENT(IN)    :: SU,SV
      DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT04BB
     &( A11 , A12 , A13 , A14 ,
     &        A22 , A23 , A24 ,
     &              A33 , A34 ,
     &                    A44 ,
     &  XMUL,SU,SV,U,V,XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) ::                      A44(*)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SU,SV
      DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT04PP
     &( T,XM,XMUL,SU,SV,SW,U,V,W,X,Y,Z,SURFAC,IKLE,NELEM,NELMAX,FORMUL)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6),XM(NELMAX,30)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: U(*),V(*),W(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SU,SV,SW
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      CHARACTER(LEN=16), INTENT(IN) :: FORMUL
        END SUBROUTINE
!
        SUBROUTINE MT04TT
     &(T,XM,XMUL,SU,SV,SW,U,V,W,X,Y,Z,IKLE,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,4)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,4),XM(NELMAX,6)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: U(*),V(*),W(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SU,SV,SW
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
        END SUBROUTINE
!
        SUBROUTINE MT05AA
     &( A11 , A12 , A13 ,
     &  A21 , A22 , A23 ,
     &  A31 , A32 , A33 ,
     &  XMUL,SU,SV,U,V,
     &  XEL,YEL,IKLE,NELEM,NELMAX,FORMUL)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL,U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SU,SV
      CHARACTER(LEN=16) :: FORMUL
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT05BB
     &( A11 , A12 , A13 , A14 ,
     &  A21 , A22 , A23 , A24 ,
     &  A31 , A32 , A33 , A34 ,
     &  A41 , A42 , A43 , A44 ,
     &  XMUL,SU,SV,U,V,
     &  XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,FORMUL)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*),A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      CHARACTER(LEN=16) :: FORMUL
        END SUBROUTINE
!
        SUBROUTINE MT05PP
     &(T,XM,XMUL,SU,SV,SW,U,V,W,SF,SG,SH,F,G,H,
     & X,Y,Z,IKLE,NELEM,NELMAX,SURFAC,SIGMAG,SPECAD,NPLAN)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELEM,NELMAX,NPLAN
      INTEGER, INTENT(IN)             :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6),XM(NELMAX,30)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      DOUBLE PRECISION, INTENT(IN)    :: U(*),V(*),W(*),SURFAC(*)
      DOUBLE PRECISION, INTENT(IN)    :: F(*),G(*),H(*)
      TYPE(BIEF_OBJ), INTENT(IN)      :: SU,SV,SW,SF,SG,SH
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
      LOGICAL, INTENT(IN)             :: SIGMAG,SPECAD
        END SUBROUTINE
!
        SUBROUTINE MT05TT
     &( T,XM,XMUL,SU,SV,SW,U,V,W,X,Y,Z,IKLE,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,4)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,4),XM(NELMAX,12)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      TYPE(BIEF_OBJ),   INTENT(IN) :: SU,SV,SW
      DOUBLE PRECISION, INTENT(IN) :: U(*),V(*),W(*)
        END SUBROUTINE
!
        SUBROUTINE MT06AA
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SF,F,SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT06BB
     &( A11 , A12 , A13 , A14 ,
     &        A22 , A23 , A24 ,
     &              A33 , A34 ,
     &                    A44 ,
     &  XMUL,SF,F,SURFAC,IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) ::                      A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT06FF
     &( A11 , A12 , A13 , A14 ,
     &        A22 , A23 , A24 ,
     &              A33 , A34 ,
     &                    A44 ,
     &  XMUL,SF,F,X,Y,Z,IKLE1,IKLE2,IKLE3,IKLE4,NBOR,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NBOR(*),NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) ::                      A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
        END SUBROUTINE
!
        SUBROUTINE MT06FT
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SF,F,X,Y,Z,IKLE1,IKLE2,IKLE3,NBOR,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NBOR(*),NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
        END SUBROUTINE
!
        SUBROUTINE MT06FT2
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SF,F,SG,G,X,Y,Z,IKLE1,IKLE2,IKLE3,NBOR,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NBOR(*),NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*),G(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF,SG
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
        END SUBROUTINE
!
        SUBROUTINE MT06OO
     &(A11,A12,A22,XMUL,SF,F,LGSEG,IKLE1,IKLE2,NBOR,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(*),IKLE2(*),NBOR(NELMAX,2)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN)    :: LGSEG(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A12(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A22(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT06PP
     &( T,XM,XMUL,SF,F,Z,SURFAC,IKLE,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6), XM(NELMAX,30)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: Z(*)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT06TT(T,XM,XMUL,SF,F,X,Y,Z,IKLE,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,4)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,4),XM(NELMAX,6)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
        END SUBROUTINE
!
        SUBROUTINE MT07AA
     &( A11 , A12 , A13 ,
     &        A22 , A23 ,
     &              A33 ,
     &  XMUL,SF,F,SURFAC,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT07BB
     &( A11 , A12 , A13 , A14 ,
     &        A22 , A23 , A24 ,
     &              A33 , A34 ,
     &                    A44 ,
     &  XMUL,SF,F,SURFAC,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) ::        A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) ::               A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) ::                      A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
!
!
        SUBROUTINE MT08AA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT08AB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT08BA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   A41 , A42 , A43 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT08BB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   A41 , A42 , A43 , A44 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER LNG,LU
      COMMON/INFO/LNG,LU
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*),A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT08PP
     &( T,XM,XMUL,SF,F,SURFAC,IKLE,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6),XM(NELMAX,30)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT08TT
     &( T,XM,XMUL,X,Y,Z,SF,F,IKLE,NELEM,NELMAX)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER,INTENT(IN) :: NELEM,NELMAX
      INTEGER,INTENT(IN) :: IKLE(NELMAX,4)
      DOUBLE PRECISION,INTENT(INOUT) :: T(NELMAX,4),XM(NELMAX,12)
      DOUBLE PRECISION,INTENT(IN) :: XMUL
      DOUBLE PRECISION,INTENT(IN) :: F(*),X(*),Y(*),Z(*)
      TYPE(BIEF_OBJ),INTENT(IN) :: SF
        END SUBROUTINE
!
        SUBROUTINE MT11AA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT11AB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT11BA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   A41 , A42 , A43 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT11BB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   A41 , A42 , A43 , A44 ,
     &   XMUL,SF,F,XEL,YEL,IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*),A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT12AA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   XMUL,SF,SU,SV,F,U,V,
     &   XEL,YEL,SURFAC,
     &   IKLE1,IKLE2,IKLE3,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
!
        SUBROUTINE MT12AB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   XMUL,SF,SU,SV,F,U,V,
     &   XEL,YEL,SURFAC,
     &   IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN)   :: SF,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT12BA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   A41 , A42 , A43 ,
     &   XMUL,SF,SU,SV,F,U,V,
     &   XEL,YEL,SURFAC,
     &   IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT12BB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   A41 , A42 , A43 , A44 ,
     &   XMUL,SF,SU,SV,F,U,V,
     &   XEL,YEL,
     &   IKLE1,IKLE2,IKLE3,IKLE4,
     &   NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*),A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
      TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT13AA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   XMUL,XEL,YEL,NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT13AB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   XMUL,XEL,YEL,NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT13BA
     &(  A11 , A12 , A13 ,
     &   A21 , A22 , A23 ,
     &   A31 , A32 , A33 ,
     &   A41 , A42 , A43 ,
     &   XMUL,XEL,YEL,NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT13BB
     &(  A11 , A12 , A13 , A14 ,
     &   A21 , A22 , A23 , A24 ,
     &   A31 , A32 , A33 , A34 ,
     &   A41 , A42 , A43 , A44 ,
     &   XMUL,XEL,YEL,NELEM,NELMAX,ICOORD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*),A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE MT14PP
     &( T,XM,PPQ,LEGO,XMUL,SU,SV,SW,U,V,W,SF,SG,SH,F,G,H,
     &  X,Y,Z,SURFAC,IKLE,NELEM,NELMAX,SIGMAG,SPECAD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,6),PPQ(6,6)
      DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,6),XM(NELMAX,30)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: U(*),V(*),W(*),F(*),G(*),H(*)
      LOGICAL, INTENT(IN) :: LEGO,SIGMAG,SPECAD
      TYPE(BIEF_OBJ), INTENT(IN) :: SU,SV,SW,SF,SG,SH
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT99AA
     &( A11 , A12 , A13 ,
     &  A21 , A22 , A23 ,
     &  A31 , A32 , A33 ,
     &  XMUL,SF,F,XEL,YEL,
     &  SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,FORMUL,TDIA,TEXT)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      CHARACTER(LEN=1), INTENT(INOUT) :: TDIA,TEXT
      CHARACTER(LEN=16), INTENT(IN) :: FORMUL
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN)   :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MT99BB
     &( A11 , A12 , A13 , A14 ,
     &  A21 , A22 , A23 , A24 ,
     &  A31 , A32 , A33 , A34 ,
     &  A41 , A42 , A43 , A44 ,
     &  XMUL,SF,F,XEL,YEL,
     &  SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,FORMUL,TDIA,TEXT)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      CHARACTER(LEN=1), INTENT(INOUT) :: TDIA,TEXT
      CHARACTER(LEN=16), INTENT(IN) :: FORMUL
      DOUBLE PRECISION, INTENT(INOUT) :: A11(*),A12(*),A13(*),A14(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A21(*),A22(*),A23(*),A24(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A31(*),A32(*),A33(*),A34(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A41(*),A42(*),A43(*),A44(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      TYPE(BIEF_OBJ), INTENT(IN)   :: SF
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,3),YEL(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE MV0202
     &(OP, X , DA,TYPDIA,XA12,XA21,TYPEXT, Y,C,
     & IKLE1,IKLE2,
     & NPOIN,NELEM,W1,W2)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NPOIN
      INTEGER, INTENT(IN) :: IKLE1(*),IKLE2(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(*),W2(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN) :: Y(*),DA(*)
      DOUBLE PRECISION, INTENT(IN) :: XA12(*),XA21(*)
      DOUBLE PRECISION, INTENT(IN) :: C
      CHARACTER*(*), INTENT(IN) :: OP,TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MV0303
     &(OP, X , DA,TYPDIA,XA12,XA13,XA21,XA23,XA31,XA32,
     & TYPEXT, Y,C,IKLE1,IKLE2,IKLE3,NPOIN,NELEM,W1,W2,W3)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NPOIN
      INTEGER, INTENT(IN) :: IKLE1(*),IKLE2(*),IKLE3(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(*),W2(*),W3(*)
      DOUBLE PRECISION, INTENT(IN) :: Y(*),DA(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN) :: XA12(*),XA13(*),XA23(*)
      DOUBLE PRECISION, INTENT(IN) :: XA21(*),XA31(*),XA32(*)
      DOUBLE PRECISION, INTENT(IN) ::C
      CHARACTER(LEN=8), INTENT(IN) :: OP
      CHARACTER(LEN=1), INTENT(IN) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MV0304
     &(OP, X , DA,TYPDIA,
     & XA12,XA13,XA14,XA21,XA23,XA24,XA31,XA32,XA34,
     & TYPEXT, Y,C,
     & IKLE1,IKLE2,IKLE3,IKLE4,
     & NPOIN,NELEM,W1,W2,W3,W4)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NPOIN
      INTEGER, INTENT(IN) :: IKLE1(*),IKLE2(*),IKLE3(*),IKLE4(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(*),W2(*),W3(*),W4(*)
      DOUBLE PRECISION, INTENT(IN) :: Y(*),DA(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN) :: XA12(*),XA13(*),XA14(*)
      DOUBLE PRECISION, INTENT(IN) :: XA21(*),XA23(*),XA24(*)
      DOUBLE PRECISION, INTENT(IN) :: XA31(*),XA32(*),XA34(*)
      DOUBLE PRECISION, INTENT(IN) :: C
      CHARACTER(LEN=8), INTENT(IN) :: OP
      CHARACTER(LEN=1), INTENT(IN) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MV0403
     &(OP, X , DA,TYPDIA,
     & XA12,XA13,XA21,XA23,XA31,XA32,XA41,XA42,XA43,
     & TYPEXT, Y,C,
     & IKLE1,IKLE2,IKLE3,IKLE4,
     & NPOIN,NELEM,W1,W2,W3,W4)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NPOIN
      INTEGER, INTENT(IN) :: IKLE1(*),IKLE2(*),IKLE3(*),IKLE4(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(*),W2(*),W3(*),W4(*)
      DOUBLE PRECISION, INTENT(IN) :: Y(*),DA(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN) :: XA12(*),XA13(*),XA21(*)
      DOUBLE PRECISION, INTENT(IN) :: XA23(*),XA31(*),XA32(*)
      DOUBLE PRECISION, INTENT(IN) :: XA41(*),XA42(*),XA43(*)
      DOUBLE PRECISION, INTENT(IN) :: C
      CHARACTER(LEN=8), INTENT(IN) :: OP
      CHARACTER(LEN=1), INTENT(IN) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MV0404
     &(OP, X , DA,TYPDIA,
     & XA12,XA13,XA14,XA21,XA23,XA24,XA31,XA32,XA34,XA41,XA42,XA43,
     & TYPEXT, Y,C,IKLE1,IKLE2,IKLE3,IKLE4,NPOIN,NELEM,W1,W2,W3,W4)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NPOIN
      INTEGER, INTENT(IN) :: IKLE1(*),IKLE2(*),IKLE3(*),IKLE4(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(*),W2(*),W3(*),W4(*)
      DOUBLE PRECISION, INTENT(IN) :: Y(*),DA(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN) :: XA12(*),XA13(*),XA14(*)
      DOUBLE PRECISION, INTENT(IN) :: XA21(*),XA23(*),XA24(*)
      DOUBLE PRECISION, INTENT(IN) :: XA31(*),XA32(*),XA34(*)
      DOUBLE PRECISION, INTENT(IN) :: XA41(*),XA42(*),XA43(*)
      DOUBLE PRECISION, INTENT(IN) :: C
      CHARACTER(LEN=8), INTENT(IN) :: OP
      CHARACTER(LEN=1), INTENT(IN) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MV0606
     &(OP, X , DA,TYPDIA,XA,TYPEXT, Y,C,
     & IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,
     & NPOIN,NELEM,NELMAX,W1,W2,W3,W4,W5,W6)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,NPOIN
      INTEGER, INTENT(IN) :: IKLE1(*),IKLE2(*),IKLE3(*)
      INTEGER, INTENT(IN) :: IKLE4(*),IKLE5(*),IKLE6(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(*),W2(*),W3(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W4(*),W5(*),W6(*)
      DOUBLE PRECISION, INTENT(IN) :: Y(*),DA(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN) :: XA(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN) :: C
      CHARACTER(LEN=8), INTENT(IN) :: OP
      CHARACTER(LEN=1), INTENT(IN) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MVSEG
     &(OP, X , DA,TYPDIA,XA1,XA2,
     & TYPEXT, Y,C,NPOIN,NELEM,NSEG1,NSEG2,GLOSEG1,GLOSEG2,IELM1,IELM2)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN
      INTEGER, INTENT(IN) :: GLOSEG1(*),GLOSEG2(*)
      INTEGER, INTENT(IN) :: NSEG1,NSEG2,NELEM,IELM1,IELM2
      DOUBLE PRECISION, INTENT(IN)    :: Y(*),DA(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN)    :: XA1(*),XA2(*)
      DOUBLE PRECISION, INTENT(IN)    :: C
      CHARACTER(LEN=8),INTENT(IN) :: OP
      CHARACTER(LEN=1),INTENT(IN) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MW0303
     &(OP, X , DA,TYPDIA,XAS,TYPEXT, Y,C,
     & IKLEM1,DIMIKM,LIMVOI,MXPTVS,NPMAX,NPOIN,TRAV)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: DIMIKM,MXPTVS,NPMAX,NPOIN
      INTEGER, INTENT(IN) :: IKLEM1(DIMIKM,4,2),LIMVOI(MXPTVS,2)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*),TRAV(*)
      DOUBLE PRECISION, INTENT(IN) :: DA(*),Y(*)
      DOUBLE PRECISION, INTENT(IN) :: XAS(*),C
      CHARACTER(LEN=8), INTENT(IN) :: OP
      CHARACTER(LEN=1), INTENT(IN) :: TYPDIA,TYPEXT
        END SUBROUTINE
!
        SUBROUTINE MXPTEL31(NELEM,NPOIN,MXELVS,IKLES,MXPTVS)
      IMPLICIT NONE
      INTEGER,           INTENT(IN)   :: NELEM
      INTEGER,           INTENT(IN)   :: NPOIN
      INTEGER,           INTENT(IN)   :: MXELVS
      INTEGER,           INTENT(IN)   :: IKLES(4,NELEM)
      INTEGER,           INTENT(OUT)  :: MXPTVS
        END SUBROUTINE
!
        SUBROUTINE MXPTEL
     &(MXPTVS,MXELVS,IKLES,IELM,NPOIN,NELEM,NDP,IPOBO,LISTIN)
      IMPLICIT NONE
      INTEGER, INTENT(INOUT) :: MXPTVS,MXELVS
      INTEGER, INTENT(IN)    :: IELM,NDP,NPOIN,NELEM
      INTEGER, INTENT(IN)    :: IKLES(NDP,NELEM),IPOBO(NPOIN)
      LOGICAL, INTENT(IN)    :: LISTIN
        END SUBROUTINE
!
        INTEGER FUNCTION BIEF_NBFEL(IELM,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END FUNCTION
!
        INTEGER FUNCTION BIEF_NBMPTS(IELM,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END FUNCTION
!
        INTEGER FUNCTION BIEF_NBPEL(IELM,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END FUNCTION
!
        INTEGER FUNCTION BIEF_NBPTS(IELM,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END FUNCTION
!
        INTEGER FUNCTION BIEF_NBSEG(IELM,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END FUNCTION
!
        INTEGER FUNCTION BIEF_NBSEGEL(IELM,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: IELM
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END FUNCTION
!
        SUBROUTINE NORMAB
     &(XNEBOR,YNEBOR,XSGBOR,YSGBOR,DISBOR,SURFAC,NELEM,
     & NBOR,KP1BOR,NELBOR,LGSEG,NPTFR,X,Y,MESH,T1)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPTFR,NELEM
      INTEGER, INTENT(IN) :: NBOR(NPTFR),KP1BOR(NPTFR),NELBOR(NPTFR)
      DOUBLE PRECISION, INTENT(INOUT) :: XNEBOR(NPTFR,2),YNEBOR(NPTFR,2)
      DOUBLE PRECISION, INTENT(INOUT) :: XSGBOR(NPTFR,4),YSGBOR(NPTFR,4)
      DOUBLE PRECISION, INTENT(INOUT) :: DISBOR(NPTFR),LGSEG(NPTFR)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELEM),X(*),Y(*)
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: T1
      TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
        END SUBROUTINE
!
        SUBROUTINE OM( OP , M , N , D , C , MESH )
          USE BIEF_DEF
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(IN)    :: C
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: M
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: N,D
          TYPE(BIEF_MESH) , INTENT(IN)    :: MESH
        END SUBROUTINE
!
        SUBROUTINE OM0101(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   D,C,
     &                    IKLE,NELEM,NELMAX,NDIAG)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NELEM,NELMAX,NDIAG
          INTEGER, INTENT(IN) :: IKLE(NELMAX,2)
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*),XN(NELMAX,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM1101(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   C,
     &                    NULONE,NELBOR,NBOR,NELMAX,NDIAG,NPTFR,NPTFRX)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NELMAX,NDIAG,NPTFR,NPTFRX
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          INTEGER, INTENT(IN)             :: NULONE(*),NELBOR(*),NBOR(*)
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),XN(*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM1201(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   C,
     &                    NULONE,NELBOR,NBOR,NELMAX,NDIAG,NPTFR,NPTFRX)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NELMAX,NDIAG,NPTFR,NPTFRX
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          INTEGER, INTENT(IN)             :: NULONE(*),NELBOR(*),NBOR(*)
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),XN(*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM1111(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   D,C,
     &                    IKLE,NELEM,NELMAX,NDIAG)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NELEM,NELMAX,NDIAG
          INTEGER, INTENT(IN) :: IKLE(NELMAX,3)
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*),XN(NELMAX,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM1211(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   D,C,
     &                    IKLE,NELEM,NELMAX,NDIAG)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NELEM,NELMAX,NDIAG
          INTEGER, INTENT(IN) :: IKLE(NELMAX,3)
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*),XN(NELMAX,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM1112(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   D,C,
     &                    IKLE,NELEM,NELMAX,NDIAG)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NELEM,NELMAX,NDIAG
          INTEGER, INTENT(IN) :: IKLE(NELMAX,3)
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*),XN(NELMAX,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM2121(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   D,C,
     &                    IKLE,NELEM,NELMAX,NDIAG)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NELEM,NELMAX,NDIAG
          INTEGER, INTENT(IN) :: IKLE(NELMAX,4)
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*),XN(NELMAX,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM4141(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   D,C,
     &                    IKLE,NELEM,NELMAX,NDIAG)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NELEM,NELMAX,NDIAG
          INTEGER, INTENT(IN) :: IKLE(NELMAX,6)
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*),XN(NELMAX,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM4111(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   C,
     &                    SIZDN,SZMDN,SIZXN,SZMXN,NETAGE,NELMAX3D)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NETAGE,SIZDN,SZMXN,SZMDN,SIZXN,NELMAX3D
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),XN(SZMXN,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(SZMDN,*)
          DOUBLE PRECISION, INTENT(INOUT) :: XM(SZMXN,NETAGE,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM4121(OP ,  DM,TYPDIM,XM,TYPEXM,
     &                    DN,TYPDIN,XN,TYPEXN,   C,
     &                    NULONE,NELBOR,NBOR,NELMAX,SIZDN,SIZXN,SZMXN)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NELMAX,SIZDN,SIZXN,SZMXN
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          INTEGER, INTENT(IN)             :: NULONE(*),NELBOR(*),NBOR(*)
          DOUBLE PRECISION, INTENT(IN)    :: DN(*),XN(NELMAX,*)
          DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
          CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
          DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OM5161
     &(OP ,  DM,TYPDIM,XM,TYPEXM,   DN,TYPDIN,XN,TYPEXN,   C,
     & NULONE,NELBOR,NBOR,NELMAX,SIZDN,SIZXN,SZMXN)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NELMAX,SIZDN,SIZXN,SZMXN
      CHARACTER(LEN=8), INTENT(IN)    :: OP
      INTEGER, INTENT(IN)             :: NULONE(SZMXN,3)
      INTEGER, INTENT(IN)             :: NELBOR(*),NBOR(*)
      DOUBLE PRECISION, INTENT(IN)    :: DN(*),XN(SZMXN,*)
      DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NELMAX,*)
      CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
      DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OMSEGBOR
     &(OP ,  DM,TYPDIM,XM,TYPEXM,   DN,TYPDIN,XN,TYPEXN,   D,C,
     & NDIAG,NSEG1,NSEG2,NBOR,KP1BOR,NPTFR,IELM1,IELN1,NSEG11)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NDIAG,NSEG1,NSEG2,NPTFR,IELM1,IELN1
      INTEGER, INTENT(IN) :: NBOR(NPTFR,*),KP1BOR(NPTFR),NSEG11
      CHARACTER(LEN=8), INTENT(IN)    :: OP
      DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*),XN(NPTFR,*)
      DOUBLE PRECISION, INTENT(INOUT) :: DM(*),XM(NSEG1,*)
      CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
      DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OMSEG
     &(OP ,  DM,TYPDIM,XM,TYPEXM,   DN,TYPDIN,XN,TYPEXN,   D,C,
     & NDIAG,NSEG1,NSEG2,GLOSEG,SIZGLO)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NDIAG,NSEG1,NSEG2,SIZGLO
      INTEGER, INTENT(IN) :: GLOSEG(SIZGLO,2)
      CHARACTER(LEN=8), INTENT(IN)    :: OP
      DOUBLE PRECISION, INTENT(IN)    :: DN(*),D(*)
      DOUBLE PRECISION, INTENT(INOUT) :: XM(NSEG1+NSEG2)
      DOUBLE PRECISION, INTENT(IN)    :: XN(NSEG1+NSEG2)
      CHARACTER(LEN=1), INTENT(INOUT) :: TYPDIM,TYPEXM,TYPDIN,TYPEXN
      DOUBLE PRECISION, INTENT(INOUT) :: DM(*)
      DOUBLE PRECISION, INTENT(IN)    :: C
        END SUBROUTINE
!
        SUBROUTINE OPASS(OP,X,W,IW,Y,IY,LIMVOI,MXPTVS,NPMAX)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPMAX,MXPTVS
      INTEGER, INTENT(IN) :: IW(NPMAX,*),IY(NPMAX,*),LIMVOI(MXPTVS,2)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN)    :: W(*),Y(*)
      CHARACTER(LEN=8), INTENT(IN)    :: OP
        END SUBROUTINE
!
        SUBROUTINE BIEF_OPEN_FILES
     &(CODE,FILES,NFILES,PATH,NCAR,FLOT,IFLOT,ICODE)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER           , INTENT(IN)    :: NFILES
      CHARACTER(LEN=24) , INTENT(IN)    :: CODE
      TYPE(BIEF_FILE)   , INTENT(INOUT) :: FILES(NFILES)
      CHARACTER(LEN=250), INTENT(IN)    :: PATH
      INTEGER           , INTENT(IN)    :: NCAR,ICODE
      INTEGER           , INTENT(INOUT) :: IFLOT
      LOGICAL           , INTENT(IN)    :: FLOT
        END SUBROUTINE
!
        SUBROUTINE OS( OP , X , Y , Z , C , IOPT , INFINI , ZERO )
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER,          INTENT(IN), OPTIONAL    :: IOPT
          DOUBLE PRECISION, INTENT(IN), OPTIONAL    :: INFINI
          DOUBLE PRECISION, INTENT(IN), OPTIONAL    :: ZERO
          TYPE(BIEF_OBJ),   INTENT(INOUT), OPTIONAL :: X
          TYPE(BIEF_OBJ),   INTENT(IN)   , OPTIONAL :: Y,Z
          DOUBLE PRECISION, INTENT(IN)   , OPTIONAL :: C
          CHARACTER(LEN=8), INTENT(IN)              :: OP
        END SUBROUTINE
!
        SUBROUTINE OSBD( OP , X , Y , Z , C , MESH )
          USE BIEF_DEF
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(IN)    :: C
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: X
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: Y,Z
          TYPE(BIEF_MESH) , INTENT(IN)    :: MESH
        END SUBROUTINE
!
        SUBROUTINE OSDB( OP , X , Y , Z , C , MESH )
          USE BIEF_DEF
          IMPLICIT NONE
          DOUBLE PRECISION, INTENT(IN)    :: C
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          TYPE(BIEF_OBJ)  , INTENT(INOUT) :: X
          TYPE(BIEF_OBJ)  , INTENT(IN)    :: Y,Z
          TYPE(BIEF_MESH) , INTENT(IN)    :: MESH
        END SUBROUTINE
!
        SUBROUTINE OV( OP , X , Y , Z , C , NPOIN )
          IMPLICIT NONE
          INTEGER, INTENT(IN)             :: NPOIN
          DOUBLE PRECISION, INTENT(IN)    :: Y(NPOIN),Z(NPOIN),C
          DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
          CHARACTER(LEN=8), INTENT(IN)    :: OP
        END SUBROUTINE
!
        SUBROUTINE OVBD( OP , X , Y , Z , C , NBOR , NPTFR )
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPTFR,NBOR(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN)    :: Y(*),Z(*),C
      CHARACTER(LEN=8), INTENT(IN)    :: OP
        END SUBROUTINE
!
        SUBROUTINE OVD( OP , X , Y , Z , C , NPOIN , IOPT , D , EPS )
          IMPLICIT NONE
          INTEGER         , INTENT(IN)    :: NPOIN,IOPT
          DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
          DOUBLE PRECISION, INTENT(IN)    :: Y(NPOIN),Z(NPOIN),C,D,EPS
          CHARACTER(LEN=8), INTENT(IN)    :: OP
        END SUBROUTINE
!
        SUBROUTINE OVD_2
     & ( OP , X , DIMX , Y , DIMY , Z , DIMZ , C , DIM1 , NPOIN ,
     &   IOPT , INFINI, ZERO )
      IMPLICIT NONE
      INTEGER,          INTENT(IN)    :: DIMX,DIMY,DIMZ,DIM1,NPOIN,IOPT
      DOUBLE PRECISION, INTENT(IN)    :: C,INFINI,ZERO
      CHARACTER(LEN=8), INTENT(IN)    :: OP
      DOUBLE PRECISION, INTENT(INOUT) :: X(DIM1,*)
      DOUBLE PRECISION, INTENT(IN)    :: Y(DIM1,*),Z(DIM1,*)
        END SUBROUTINE
!
        SUBROUTINE OVDB(OP,X,Y,Z,C,NBOR,NPTFR)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPTFR,NBOR(*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(*)
      DOUBLE PRECISION, INTENT(IN)    :: Y(*),Z(*),C
      CHARACTER(LEN=8), INTENT(IN)    :: OP
        END SUBROUTINE
!
        SUBROUTINE OV_2(OP,X,DIMX,Y,DIMY,Z,DIMZ,C,DIM1,NPOIN )
          IMPLICIT NONE
          INTEGER, INTENT(IN)      :: DIMX,DIMY,DIMZ,DIM1,NPOIN
          DOUBLE PRECISION, INTENT(IN)    :: C
          CHARACTER(LEN=8), INTENT(IN)    :: OP
          DOUBLE PRECISION, INTENT(INOUT) :: X(DIM1,*)
          DOUBLE PRECISION, INTENT(IN)    :: Y(DIM1,*),Z(DIM1,*)
        END SUBROUTINE
!
        SUBROUTINE PARACO(V1,V2,V3,NPOIN,ICOM,IAN,
     &                    NPLAN,NB_NEIGHB,NB_NEIGHB_PT,LIST_SEND,
     &                    NH_COM,DIMNHCOM,BUF_SEND,BUF_RECV,DIMBUF)
!
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,ICOM,IAN,NPLAN,NB_NEIGHB
      INTEGER, INTENT(IN) :: DIMNHCOM,DIMBUF
      INTEGER, INTENT(IN) :: NB_NEIGHB_PT(NB_NEIGHB)
      INTEGER, INTENT(IN) :: LIST_SEND(NB_NEIGHB)
      INTEGER, INTENT(IN) :: NH_COM(DIMNHCOM,*)
      DOUBLE PRECISION, INTENT(INOUT) :: BUF_SEND(DIMBUF,*)
      DOUBLE PRECISION, INTENT(INOUT) :: BUF_RECV(DIMBUF,*)
      DOUBLE PRECISION, INTENT(INOUT) :: V1(NPOIN,NPLAN)
      DOUBLE PRECISION, INTENT(INOUT) :: V2(NPOIN,NPLAN)
      DOUBLE PRECISION, INTENT(INOUT) :: V3(NPOIN,NPLAN)
        END SUBROUTINE
!
        SUBROUTINE PARAGL
     &(KNOGL,DIM1_KNOGL,KNOLG,NBOR,NACHB,NPTFR,NPOIN)
      USE BIEF_DEF
      IMPLICIT NONE
!     DIMENSIONS WITH NPTIR HAVE BEEN REPLACED BY *
!     THOUGH NPTIR IS ABOVE, IT IS NOT SEEN (?)
      INTEGER, INTENT(IN)    :: DIM1_KNOGL,NPTFR,NPOIN
      INTEGER, INTENT(INOUT) :: KNOGL(DIM1_KNOGL),KNOLG(NPOIN)
      INTEGER, INTENT(INOUT) :: NBOR(NPTFR),NACHB(NBMAXNSHARE,*)
        END SUBROUTINE
!
        SUBROUTINE PARCOM( X , ICOM , MESH )
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER        , INTENT(IN)     :: ICOM
          TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
          TYPE(BIEF_OBJ) , INTENT(INOUT)  :: X
        END SUBROUTINE
!
        SUBROUTINE PARCOM2(X1,X2,X3,NPOIN,NPLAN,ICOM,IAN,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: ICOM,NPOIN,NPLAN,IAN
          TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
          DOUBLE PRECISION, INTENT(INOUT) :: X1(NPOIN,NPLAN)
          DOUBLE PRECISION, INTENT(INOUT) :: X2(NPOIN,NPLAN)
          DOUBLE PRECISION, INTENT(INOUT) :: X3(NPOIN,NPLAN)
        END SUBROUTINE
!
        SUBROUTINE PARCOM2_SEG(X1,X2,X3,NSEG,NPLAN,ICOM,IAN,MESH,
     &                         OPT)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: ICOM,NSEG,NPLAN,IAN,OPT
          TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
          DOUBLE PRECISION, INTENT(INOUT) :: X1(NSEG,NPLAN)
          DOUBLE PRECISION, INTENT(INOUT) :: X2(NSEG,NPLAN)
          DOUBLE PRECISION, INTENT(INOUT) :: X3(NSEG,NPLAN)
        END SUBROUTINE
!
        SUBROUTINE PARCOM_BORD(X,ICOM,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: ICOM
          TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
          DOUBLE PRECISION, INTENT(INOUT) :: X(*)
        END SUBROUTINE
!
        SUBROUTINE PARINI
     &(NHP,NHM,INDPU,FAC,NPOIN,NACHB,NPLAN,MESH,NB_NEIGHB,
     & NB_NEIGHB_SEG,NELEM2,IFAPAR)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER LNG,LU
      COMMON/INFO/LNG,LU
      INTEGER, INTENT(IN)            :: NPOIN,NPLAN,NELEM2
      INTEGER, INTENT(INOUT)         :: NB_NEIGHB,NB_NEIGHB_SEG
      INTEGER, INTENT(INOUT)         :: NHP(NBMAXDSHARE,NPTIR)
      INTEGER, INTENT(INOUT)         :: NHM(NBMAXDSHARE,NPTIR)
      INTEGER, INTENT(IN)            :: NACHB(NBMAXNSHARE,NPTIR)
      INTEGER, INTENT(IN)            :: IFAPAR(6,NELEM2)
      INTEGER, INTENT(INOUT)         :: INDPU(NPOIN)
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: FAC
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PARMOY( X , MESH )
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: X
        END SUBROUTINE
!
        SUBROUTINE POSITIVE_DEPTHS
     &(T1,T2,T3,T4,H,HN,MESH,FLODEL,COMPUTE_FLODEL,FLBOR,DT,
     & UNSV2D,NPOIN,GLOSEG1,GLOSEG2,NBOR,NPTFR,YAFLODEL,
     & SMH,YASMH,OPTSOU,FLULIM,LIMPRO,HBOR,KDIR,INFO,FLOPOINT,
     & NAMECODE,OPTION)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPOIN,NPTFR,OPTSOU,KDIR,OPTION
      INTEGER, INTENT(IN)             :: GLOSEG1(*),GLOSEG2(*)
      INTEGER, INTENT(IN)             :: NBOR(NPTFR)
      INTEGER, INTENT(IN)             :: LIMPRO(NPTFR)
      DOUBLE PRECISION, INTENT(IN)    :: DT,FLOPOINT(NPOIN),HBOR(NPTFR)
      DOUBLE PRECISION, INTENT(INOUT) :: FLULIM(*)
      TYPE(BIEF_MESH),INTENT(INOUT)   :: MESH
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: T1,T2,T3,T4,FLODEL,H,FLBOR
      TYPE(BIEF_OBJ), INTENT(IN)      :: UNSV2D,HN,SMH
      LOGICAL, INTENT(IN)             :: YAFLODEL,YASMH,INFO
      LOGICAL, INTENT(IN)             :: COMPUTE_FLODEL
      CHARACTER(LEN=24)               :: NAMECODE
        END SUBROUTINE
!
        SUBROUTINE PREBD4
     &(X1,X2,A11,A12,A21,A22,B1,B2,D11,D12,D21,D22,
     & MESH,PREXSM,DIADON)
      USE BIEF_DEF
      IMPLICIT NONE
      LOGICAL, INTENT(IN) :: PREXSM,DIADON
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X1,B2,D11,D12,D21,D22
      TYPE(BIEF_OBJ), INTENT(IN)    :: X2,B1
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A11,A12,A21,A22
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PREBD9
     &(X1,X2,X3,A11,A12,A13,A21,A22,A23,A31,A32,A33,
     & B1,B2,B3,D11,D12,D13,D21,D22,D23,D31,D32,D33,
     & MESH,PREXSM,DIADON)
      USE BIEF_DEF
      IMPLICIT NONE
      LOGICAL, INTENT(IN) :: PREXSM,DIADON
      TYPE(BIEF_OBJ), INTENT(IN)    :: X3,B1
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X1,X2,B2,B3
      TYPE(BIEF_OBJ), INTENT(INOUT) :: D11,D12,D13,D21,D22,D23
      TYPE(BIEF_OBJ), INTENT(INOUT) :: D31,D32,D33
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A11,A12,A13,A21,A22
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A23,A31,A32,A33
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PREBDT(X,A,B,D,MESH,PREXSM,DIADON,S)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: S
      LOGICAL, INTENT(IN) :: PREXSM,DIADON
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X,B,D
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PRECD1(X,A,B,D,MESH,PRECON,PREXSM,DIADON)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: PRECON
      LOGICAL, INTENT(IN) :: PREXSM,DIADON
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: X,B,D
      TYPE(BIEF_OBJ), INTENT(INOUT)  :: A
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PRECD4
     &(X1,X2,A11,A12,A21,A22,
     & B1,B2,D1,D2,MESH,PRECON,PREXSM,DIADON)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: PRECON
      LOGICAL, INTENT(IN) :: PREXSM,DIADON
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X1,X2,B1,B2,D1,D2
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A11,A12,A21,A22
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PRECD9
     &(X1,X2,X3,A11,A12,A13,A21,A22,A23,A31,A32,A33,
     & B1,B2,B3,D1,D2,D3,MESH,PRECON,PREXSM,DIADON)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: PRECON
      LOGICAL, INTENT(IN) :: PREXSM,DIADON
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X1,X2,X3,B1,B2,B3,D1,D2,D3
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A11,A12,A13,A21
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A22,A23,A31,A32,A33
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PRECDT(X,A,B,D,MESH,PRECON,PREXSM,DIADON,S)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: PRECON,S
      LOGICAL, INTENT(IN) :: PREXSM,DIADON
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X,B,D
      TYPE(BIEF_OBJ), INTENT(INOUT) :: A
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PREVEREBE
     &(XAUX,AD,AX,TYPDIA,TYPEXT,IKLE,NPOIN,NELEM,NELMAX,MESH)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,NPOIN
      INTEGER, INTENT(IN) :: IKLE(NELMAX,6)
      DOUBLE PRECISION, INTENT(IN) :: AD(NPOIN),AX(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: XAUX(NPOIN,*)
      CHARACTER(LEN=1), INTENT(IN) :: TYPDIA,TYPEXT
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PREVERSEG
     &(XAUX,AD,AX,TYPDIA,TYPEXT,NPOIN,MESH,NSEG3D)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPOIN,NSEG3D
      DOUBLE PRECISION, INTENT(IN)    :: AD(NPOIN),AX(NSEG3D,2)
      DOUBLE PRECISION, INTENT(INOUT) :: XAUX(NPOIN,*)
      CHARACTER(LEN=1), INTENT(IN)    :: TYPDIA,TYPEXT
      TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
        END SUBROUTINE
!
        SUBROUTINE PROXIM(IP,XP,YP,X,Y,NP,NPOIN,IKLE,NELEM,NELMAX)
      IMPLICIT NONE
      INTEGER, INTENT(IN)          :: NP,NPOIN,NELEM,NELMAX
      INTEGER, INTENT(INOUT)       :: IP(NP)
      INTEGER, INTENT(IN)          :: IKLE(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN) :: XP(NP),YP(NP),X(NPOIN),Y(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE PTEL11(XEL,X,IKLE,NELMAX,NELEM)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,IKLE(NELMAX,3)
      DOUBLE PRECISION, INTENT(IN)    :: X(*)
      DOUBLE PRECISION, INTENT(INOUT) :: XEL(NELMAX,3)
        END SUBROUTINE
!
        SUBROUTINE PTTOEL(XEL,X,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(IN)    :: X
          TYPE(BIEF_OBJ), INTENT(INOUT) :: XEL
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
        END SUBROUTINE
!
        SUBROUTINE PUOG1(X, A,B ,DITR,MESH,COPY)
      USE BIEF_DEF
      IMPLICIT NONE
      CHARACTER(LEN=1), INTENT(IN) :: DITR
      LOGICAL, INTENT(IN) :: COPY
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X,B
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(IN) :: A
        END SUBROUTINE
!
        SUBROUTINE PUOG(X, A,B ,DITR,MESH,COPY)
      USE BIEF_DEF
      IMPLICIT NONE
      CHARACTER(LEN=1), INTENT(IN) :: DITR
      LOGICAL, INTENT(IN) :: COPY
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X,B
      TYPE(BIEF_OBJ), INTENT(IN)    :: A
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        DOUBLE PRECISION FUNCTION P_DOTS( X , Y , MESH )
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_MESH), INTENT(IN) :: MESH
          TYPE(BIEF_OBJ), INTENT(IN) :: X,Y
        END FUNCTION
!
        DOUBLE PRECISION FUNCTION P_DOT(NPOIN,X,Y,FAC)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NPOIN
          DOUBLE PRECISION, INTENT(IN) :: X(NPOIN),Y(NPOIN),FAC(NPOIN)
        END FUNCTION
!
        SUBROUTINE READGEO1(NPOIN,NELEM,NPTFR,NDP,IB,NFIC,NELEBD)
          IMPLICIT NONE
          INTEGER, INTENT(OUT)         :: NPOIN
          INTEGER, INTENT(OUT)         :: NELEM
          INTEGER, INTENT(OUT)         :: NDP
          INTEGER, INTENT(OUT)         :: IB(10)
          INTEGER, INTENT(OUT)         :: NPTFR
          INTEGER, INTENT(IN)          :: NFIC
          INTEGER,OPTIONAL,INTENT(OUT) :: NELEBD
        END SUBROUTINE
!
        SUBROUTINE READGEO2(NPOIN,NELEM,NPTFR,NDP,IKLES,IPOBO,IB,NFIC)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER LNG,LU
      COMMON/INFO/LNG,LU
      INTEGER, INTENT(OUT) :: NPTFR
      INTEGER, INTENT(IN)  :: NFIC,NPOIN,NELEM,NDP,IB(10)
      INTEGER, INTENT(OUT) :: IKLES(NDP*NELEM)
      INTEGER, INTENT(OUT) :: IPOBO(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE READGEO3(KNOLG,X,Y,NPOIN,NFIC,IB,FFORMAT,Z)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER, INTENT(IN)                     :: NPOIN,NFIC
          INTEGER, INTENT(INOUT)                  :: IB(10)
          INTEGER, INTENT(OUT)                    :: KNOLG(NPOIN)
          DOUBLE PRECISION, INTENT(OUT)           :: X(NPOIN),Y(NPOIN)
          CHARACTER(LEN=8), INTENT(IN)            :: FFORMAT
          DOUBLE PRECISION, INTENT(OUT), OPTIONAL :: Z(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE READ_CONFIG(LNG,LU,CHAINE,NCAR)
          IMPLICIT NONE
          INTEGER      , INTENT(INOUT) :: LNG,LU
          CHARACTER*250, INTENT(IN)    :: CHAINE
          INTEGER      , INTENT(IN)    :: NCAR
        END SUBROUTINE
!
        SUBROUTINE READ_SUBMIT(FILES,NFILES,CODE,SUBMIT,NMOT)
          USE BIEF_DEF
          IMPLICIT NONE
          INTEGER           , INTENT(IN) :: NFILES,NMOT
          TYPE(BIEF_FILE), INTENT(INOUT) :: FILES(NFILES)
          CHARACTER(LEN=24) , INTENT(IN) :: CODE
          CHARACTER(LEN=144), INTENT(IN) :: SUBMIT(4,NMOT)
        END SUBROUTINE
!
        SUBROUTINE REM11
     &(X, XA1,XA2,XA3,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN) :: XA1(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA2(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA3(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE REM21
     &(X, XA1,XA2,XA3,XA4,XA5,XA6 , IKLE1,IKLE2,IKLE3,IKLE4,
     & NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN) :: XA1(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA2(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA5(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA6(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE REM41
     &(X, XA1 ,XA2 ,XA3 ,XA4 ,XA5 ,
     &    XA6 ,XA7 ,XA8 ,XA9 ,XA10,
     &    XA11,XA12,XA13,XA14,XA15,
     &    IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,
     &    NELEM,NELMAX,NPOIN,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN) :: XA1(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA2(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA5(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA6(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA7(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA8(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA9(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA10(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA11(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA12(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA13(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA14(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XA15(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE REMONT
     &(X, XA,TYPEXA,B,IKLE,NELEM,NELMAX,NPOIN,IELM,DITR,COPY,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: IELM,NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN) :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN)    :: B(NPOIN),XA(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      CHARACTER*(*), INTENT(IN)       :: TYPEXA,DITR
      LOGICAL, INTENT(IN) :: COPY
        END SUBROUTINE
!
        SUBROUTINE REMSEG(X, XA,TYPEXA,B,GLOSEG,NSEG,NPOIN,DITR,COPY)
      IMPLICIT NONE
      INTEGER         , INTENT(IN)    :: NPOIN,NSEG
      INTEGER         , INTENT(IN)    :: GLOSEG(NSEG,2)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: XA(NSEG,*),B(NPOIN)
      CHARACTER(LEN=1), INTENT(IN)    :: TYPEXA,DITR
      LOGICAL         , INTENT(IN)    :: COPY
        END SUBROUTINE
!
        SUBROUTINE RESCJG
     &(X, A,B , MESH,D,AD,AG,G,R, CFG,INFOGR,AUX)
      USE BIEF_DEF
      IMPLICIT NONE
      LOGICAL, INTENT(IN) :: INFOGR
      TYPE(BIEF_OBJ), INTENT(INOUT) :: D,AD,G,AG,R,X,B
      TYPE(SLVCFG)  , INTENT(INOUT) :: CFG
      TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
      TYPE(BIEF_OBJ), INTENT(IN) :: A
      TYPE(BIEF_OBJ), INTENT(INOUT) :: AUX
        END SUBROUTINE
!
        SUBROUTINE SD_MD(N,IA,JA,MAX,V,L,HEAD,LAST,NEXT,MARK,FLAG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: N,MAX
      INTEGER, INTENT(INOUT) :: IA(*),JA(*),V(MAX),L(MAX),HEAD(N)
      INTEGER, INTENT(INOUT) :: LAST(N),NEXT(N),MARK(N),FLAG
        END SUBROUTINE
!
        SUBROUTINE SD_MDI(N,IA,JA,MAX,V,L,
     &                    HEAD,LAST,NEXT,MARK,TAG,FLAG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: N,MAX,IA(*),JA(*)
      INTEGER, INTENT(INOUT) :: V(*),L(*),HEAD(*),LAST(*)
      INTEGER, INTENT(INOUT) :: NEXT(*),MARK(*),TAG,FLAG
        END SUBROUTINE
!
        SUBROUTINE SD_MDM(VK,TAIL,V,L,LAST,NEXT,MARK)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: VK,LAST(*),NEXT(*),V(*)
      INTEGER, INTENT(INOUT) :: TAIL,L(*),MARK(*)
        END SUBROUTINE
!
        SUBROUTINE SD_MDP(K,EK,TAIL,V,L,HEAD,LAST,NEXT,MARK)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: EK
      INTEGER, INTENT(INOUT) :: K,TAIL,V(*),L(*),HEAD(*)
      INTEGER, INTENT(INOUT) :: LAST(*),NEXT(*),MARK(*)
        END SUBROUTINE
!
        SUBROUTINE SD_MDU(EK,DMIN,V,L,HEAD,LAST,NEXT,MARK)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    ::  EK,V(*),L(*)
      INTEGER, INTENT(INOUT) ::  DMIN,HEAD(*),LAST(*),NEXT(*),MARK(*)
        END SUBROUTINE
!
        SUBROUTINE SD_ODRV(N,IA,JA,A,P,IP,NSP,ISP,PATH,FLAG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: N,NSP,PATH
      INTEGER, INTENT(INOUT)          :: FLAG
      INTEGER, INTENT(INOUT)          :: IA(N),JA(*),P(N),IP(N),ISP(NSP)
      DOUBLE PRECISION, INTENT(INOUT) :: A(*)
        END SUBROUTINE
!
        SUBROUTINE SD_SDRV
     &(N,P,IP,IA,JA,A,B,Z,NSP,ISP,RSP,ESP,PATH,FLAG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: N,NSP,PATH
      INTEGER, INTENT(INOUT) :: FLAG,P(*),IP(*),IA(*),JA(*),ISP(*),ESP
      DOUBLE PRECISION, INTENT(IN)    :: B(N)
      DOUBLE PRECISION, INTENT(INOUT) :: A(1),Z(N),RSP(NSP)
        END SUBROUTINE
!
        SUBROUTINE SD_SNF
     &(N,P,IP,IA,JA,A,D,IJU,JU,IU,U,UMAX,IL,JL,FLAG)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: N,UMAX
      INTEGER, INTENT(IN) :: P(N),IP(N),IA(N+1),JA(*),IJU(N),JU(*)
      INTEGER, INTENT(IN) :: IU(N+1)
      INTEGER, INTENT(INOUT) :: IL(*),JL(*),FLAG
      DOUBLE PRECISION, INTENT(IN)    :: A(*)
      DOUBLE PRECISION, INTENT(INOUT) :: D(N),U(UMAX)
        END SUBROUTINE
!
        SUBROUTINE SD_SNS(N,P,D,IJU,JU,IU,U,Z,B,TMP)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: N
      INTEGER, INTENT(INOUT)          :: P(N),IJU(*),JU(*),IU(*)
      DOUBLE PRECISION, INTENT(IN)    :: B(N)
      DOUBLE PRECISION, INTENT(INOUT) :: TMP(N),Z(N),D(N),U(N)
        END SUBROUTINE
!
        SUBROUTINE SD_SRO(N,IP,IA,JA,A,Q,R,DFLAG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: N
      INTEGER, INTENT(IN)             :: IP(*)
      INTEGER, INTENT(INOUT)          :: JA(*),R(*),Q(N),IA(*)
      DOUBLE PRECISION, INTENT(INOUT) :: A(*)
      LOGICAL, INTENT(IN)             :: DFLAG
        END SUBROUTINE
!
        SUBROUTINE SD_SSF
     &(N,P,IP,IA,JA,IJU,JU,IU,JUMAX,Q,MARK,JL,FLAG)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: N,JUMAX
      INTEGER, INTENT(INOUT) :: P(N),IP(N),IA(N+1),JA(*),IJU(N),FLAG
      INTEGER, INTENT(INOUT) :: JU(JUMAX),IU(N+1),Q(N),MARK(N),JL(N)
        END SUBROUTINE
!
        SUBROUTINE SD_STRSSD
     &(NPBLK,NSEGBLK,GLOSEG1,GLOSEG2,IN,IP,ISEGIP,IW)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NSEGBLK,NPBLK
      INTEGER, INTENT(IN)    :: GLOSEG1(NSEGBLK),GLOSEG2(NSEGBLK)
      INTEGER, INTENT(INOUT) :: IN(NPBLK+1),IP(NSEGBLK*2)
      INTEGER, INTENT(INOUT) :: ISEGIP(NSEGBLK*2)
      INTEGER, INTENT(INOUT) :: IW(NPBLK)
        END SUBROUTINE
!
        SUBROUTINE SD_STRTRI(IS,N,IND)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: N
      INTEGER, INTENT(IN)    :: IS(N)
      INTEGER, INTENT(INOUT) :: IND(N)
        END SUBROUTINE
!
        SUBROUTINE SD_FABCAD
     &(NPBLK,NSEGBLK,IN,IP,ISEGIP,
     & INDTRI,ISTRI,INX,IPX,ACTRI,XA1,XA2,DA,AC)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPBLK,NSEGBLK
      INTEGER, INTENT(IN)             :: IN(NPBLK+1),IP(NSEGBLK*2+1)
      INTEGER, INTENT(IN)             :: ISEGIP(NSEGBLK*2+1)
      INTEGER, INTENT(INOUT)          :: INDTRI(NPBLK)
      INTEGER, INTENT(INOUT)          :: ISTRI(NPBLK)
      INTEGER, INTENT(INOUT)          :: INX(NPBLK+1)
      INTEGER, INTENT(INOUT)          :: IPX(NSEGBLK*2+NPBLK+1)
      DOUBLE PRECISION, INTENT(INOUT) :: ACTRI(NPBLK)
      DOUBLE PRECISION, INTENT(IN)    :: XA1(NSEGBLK),XA2(NSEGBLK)
      DOUBLE PRECISION, INTENT(IN)    :: DA(NPBLK)
      DOUBLE PRECISION, INTENT(INOUT) :: AC(NSEGBLK*2+NPBLK+1)
        END SUBROUTINE
!
        SUBROUTINE SD_FABSG4
     & (NPOIN,NSEG,DAB1,DAB2,DAB3,DAB4,XAB1,XAB2,XAB3,XAB4,
     &  NPBLK,NSEGBLK,DA,XA)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NSEGBLK,NPBLK,NSEG,NPOIN
      DOUBLE PRECISION, INTENT(IN)    :: XAB1(NSEG),XAB2(NSEG)
      DOUBLE PRECISION, INTENT(IN)    :: XAB3(NSEG),XAB4(NSEG)
      DOUBLE PRECISION, INTENT(IN)    :: DAB1(NPOIN),DAB2(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: DAB3(NPOIN),DAB4(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: XA(2*NSEGBLK),DA(NPBLK)
        END SUBROUTINE
!
        SUBROUTINE SD_SOLVE_1
     &(NPOIN,NSEGB,GLOSEG,MAXSEG,DA,XA,XINC,RHS,INFOGR,TYPEXT)
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NPOIN,NSEGB,MAXSEG
      INTEGER, INTENT(IN)             :: GLOSEG(MAXSEG,2)
      LOGICAL, INTENT(IN)             :: INFOGR
      DOUBLE PRECISION, INTENT(IN)    :: XA(*),RHS(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: XINC(NPOIN),DA(NPOIN)
      CHARACTER(LEN=1), INTENT(IN)    :: TYPEXT
        END SUBROUTINE
!
        SUBROUTINE SD_SOLVE_4
     &(NPOIN,NSEGB,GLOSEGB,DAB1,DAB2,DAB3,DAB4,XAB1,XAB2,XAB3,XAB4,
     & XX1,XX2,CVB1,CVB2,INFOGR,TYPEXT)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NPOIN,NSEGB
      INTEGER, INTENT(IN) :: GLOSEGB(NSEGB*2)
      LOGICAL, INTENT(IN) :: INFOGR
      DOUBLE PRECISION, INTENT(IN)    :: DAB1(NPOIN),DAB2(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: DAB3(NPOIN),DAB4(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: XAB1(NSEGB),XAB2(NSEGB)
      DOUBLE PRECISION, INTENT(IN)    :: XAB3(NSEGB),XAB4(NSEGB)
      DOUBLE PRECISION, INTENT(INOUT) :: XX1(NPOIN),XX2(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: CVB1(NPOIN),CVB2(NPOIN)
      CHARACTER(LEN=1), INTENT(IN)    :: TYPEXT
        END SUBROUTINE
!
        SUBROUTINE SD_STRSG4(NPOIN,NSEG,GLOSEGB,NPBLK,NSEGBLK,GLOSEG4)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NSEGBLK,NPBLK,NSEG,NPOIN
      INTEGER, INTENT(IN)    :: GLOSEGB(NSEG,2)
      INTEGER, INTENT(INOUT) :: GLOSEG4(2*NSEGBLK)
        END SUBROUTINE
!
        SUBROUTINE SEGBOR(NSEGBOR,IKLES,NELEM,NELMAX,NPOIN)
      IMPLICIT NONE
      INTEGER, INTENT(IN)            :: NPOIN,NELMAX,NELEM
      INTEGER, INTENT(OUT)           :: NSEGBOR
      INTEGER, INTENT(IN)            :: IKLES(3,NELEM)
        END SUBROUTINE
!
        SUBROUTINE SKIPGEO(NFIC,TITFIC,NPOIN,NVAR,TEXTLU,NPLAN)
          IMPLICIT NONE
          INTEGER, INTENT(IN)            :: NFIC
          INTEGER, INTENT(OUT), OPTIONAL :: NPLAN
          INTEGER, INTENT(OUT)           :: NPOIN,NVAR
          CHARACTER(LEN=72), INTENT(OUT) :: TITFIC
          CHARACTER(LEN=32), INTENT(OUT) :: TEXTLU(*)
        END SUBROUTINE
!
        SUBROUTINE SLOPES(COEF,Z,MESH)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ) , INTENT(IN)    :: Z
          TYPE(BIEF_OBJ) , INTENT(INOUT) :: COEF
          TYPE(BIEF_MESH), INTENT(IN)    :: MESH
        END SUBROUTINE
!
        SUBROUTINE SLOP10(COEF,XEL,YEL,Z,IKLE,NELEM,NELMAX)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: COEF(NELEM)
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*),Z(*)
        END SUBROUTINE
!
        SUBROUTINE SOLAUX(IPT, TB,TBB,ITB,ITBB,S)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: S
      INTEGER, INTENT(INOUT) :: ITB,IPT,ITBB
      TYPE(BIEF_OBJ), INTENT(INOUT) :: TB,TBB
        END SUBROUTINE
!
        SUBROUTINE SOLVE(X, A,B,TB,CFG,INFOGR,MESH,AUX)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(SLVCFG), INTENT(INOUT)    :: CFG
          LOGICAL, INTENT(IN)            :: INFOGR
          TYPE(BIEF_OBJ), INTENT(INOUT)  :: X,B
          TYPE(BIEF_OBJ), INTENT(INOUT)  :: TB
          TYPE(BIEF_OBJ), INTENT(INOUT)  :: A,AUX
          TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
        END SUBROUTINE
!
        DOUBLE PRECISION FUNCTION SOMME( X , NPX )
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NPX
          DOUBLE PRECISION, INTENT(IN) :: X(*)
        END FUNCTION
!
        DOUBLE PRECISION FUNCTION SOMME2( X , NPX )
          IMPLICIT NONE
          INTEGER, INTENT(IN) :: NPX
          DOUBLE PRECISION, INTENT(IN) :: X(*)
        END FUNCTION
!
        SUBROUTINE SORTIE( CHAINE , MNEMO , NBRE , SORLEO )
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NBRE
      CHARACTER*(*), INTENT(INOUT) :: CHAINE
      CHARACTER(LEN=8), INTENT(IN) :: MNEMO(NBRE)
      LOGICAL, INTENT(INOUT) :: SORLEO(NBRE)
        END SUBROUTINE
!
        SUBROUTINE STOSEG41
     &(IFABOR,NELEM,NELMAX,IELM,IKLE,NBOR,NPTFR,
     & GLOSEG,MAXSEG,ELTSEG,ORISEG,NSEG,KP1BOR,NELBOR,NULONE,NELMAX2,
     & NELEM2,NPTFR2,NPOIN2,NPLAN,KNOLG,NSEG2D)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELMAX,NELMAX2,NPTFR,NSEG,MAXSEG,IELM
      INTEGER, INTENT(IN)    :: NELEM,NELEM2,NPTFR2,NPOIN2,NPLAN
      INTEGER, INTENT(IN)    :: NSEG2D
      INTEGER, INTENT(IN)    :: NBOR(NPTFR2),KP1BOR(NPTFR2)
      INTEGER, INTENT(IN)    :: IFABOR(NELMAX2,*),IKLE(NELMAX,6)
      INTEGER, INTENT(IN)    :: NELBOR(NPTFR2),NULONE(NPTFR2)
      INTEGER, INTENT(INOUT) :: GLOSEG(MAXSEG,2)
      INTEGER, INTENT(INOUT) :: ELTSEG(NELMAX,15),ORISEG(NELMAX,15)
      INTEGER, INTENT(IN)    :: KNOLG(*)
        END SUBROUTINE
!
        SUBROUTINE STOSEG
     &(IFABOR,NELEM,NELMAX,NELMAX2,IELM,IKLE,NBOR,NPTFR,
     & GLOSEG,MAXSEG,ELTSEG,ORISEG,NSEG,KP1BOR,NELBOR,NULONE,
     & KNOLG)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELMAX,NELMAX2,NPTFR,NSEG,MAXSEG,IELM
      INTEGER, INTENT(IN)    :: NELEM
      INTEGER, INTENT(IN)    :: NBOR(NPTFR),KP1BOR(NPTFR)
      INTEGER, INTENT(IN)    :: IFABOR(NELMAX2,*),IKLE(NELMAX,*)
      INTEGER, INTENT(IN)    :: NELBOR(NPTFR),NULONE(NPTFR)
      INTEGER, INTENT(INOUT) :: GLOSEG(MAXSEG,2)
      INTEGER, INTENT(INOUT) :: ELTSEG(NELMAX,*),ORISEG(NELMAX,3)
      INTEGER, INTENT(IN)    :: KNOLG(*)
        END SUBROUTINE
!
        SUBROUTINE SUITE(VARSOR,CLAND,NUMDEB,NPRE,STD,
     &                   HIST,NHIST,NPOIN,AT,TEXTPR,VARCLA,NVARCL,
     &                   TROUVE,ALIRE,LISTIN,FIN,MAXVAR,NPLAN)
        USE BIEF_DEF
        IMPLICIT NONE
        TYPE(BIEF_OBJ),INTENT(INOUT):: VARSOR,CLAND
        INTEGER,INTENT(IN),OPTIONAL :: NPLAN
        INTEGER,INTENT(IN)          :: NHIST,NVARCL,MAXVAR
        INTEGER                     :: NUMDEB,NPRE,NPOIN,TROUVE(MAXVAR)
        INTEGER                     :: ALIRE(MAXVAR)
        CHARACTER(LEN=*)            :: STD
        CHARACTER(LEN=32)           :: TEXTPR(MAXVAR),VARCLA(NVARCL)
        DOUBLE PRECISION            :: HIST(*),AT
        LOGICAL                     :: FIN,LISTIN
        END SUBROUTINE
!
        SUBROUTINE BIEF_SUITE(VARSOR,CLAND,NUMDEB,NPRE,STD,
     &                        HIST,NHIST,NPOIN,AT,TEXTPR,VARCLA,NVARCL,
     &                        TROUVE,ALIRE,LISTIN,FIN,MAXVAR,NPLAN,DT,
     &                        NDT)
        USE BIEF_DEF
        IMPLICIT NONE
        TYPE(BIEF_OBJ),INTENT(INOUT):: VARSOR,CLAND
        INTEGER,INTENT(IN),OPTIONAL :: NPLAN
        INTEGER,INTENT(IN)          :: NHIST,NVARCL,MAXVAR
        INTEGER                     :: NUMDEB,NPRE,NPOIN,TROUVE(MAXVAR)
        INTEGER                     :: ALIRE(MAXVAR)
        CHARACTER(LEN=*), INTENT(IN):: STD
        CHARACTER(LEN=32)           :: TEXTPR(MAXVAR),VARCLA(NVARCL)
        DOUBLE PRECISION            :: HIST(*),AT
        DOUBLE PRECISION, INTENT(OUT), OPTIONAL :: DT
        LOGICAL                     :: FIN,LISTIN
        INTEGER, INTENT(OUT), OPTIONAL :: NDT
        END SUBROUTINE
!
        SUBROUTINE SUITE_SERAFIN(VARSOR,CLAND,NUMDEB,NPRE,STD,
     &                           HIST,NHIST,NPOIN,AT,TEXTPR,
     &                           VARCLA,NVARCL,
     &                           TROUVE,ALIRE,LISTIN,FIN,MAXVAR,NPLAN,
     &                           DT)
        USE BIEF_DEF
        IMPLICIT NONE
        TYPE(BIEF_OBJ),INTENT(INOUT):: VARSOR,CLAND
        INTEGER,INTENT(IN),OPTIONAL :: NPLAN
        INTEGER,INTENT(IN)          :: NHIST,NVARCL,MAXVAR
        INTEGER                     :: NUMDEB,NPRE,NPOIN,TROUVE(MAXVAR)
        INTEGER                     :: ALIRE(MAXVAR)
        CHARACTER(LEN=*)            :: STD
        CHARACTER(LEN=32)           :: TEXTPR(MAXVAR),VARCLA(NVARCL)
        DOUBLE PRECISION            :: HIST(*),AT
        DOUBLE PRECISION, INTENT(OUT), OPTIONAL :: DT
        LOGICAL                     :: FIN,LISTIN
        END SUBROUTINE
!
        SUBROUTINE SURV11(SURFAC, XEL,YEL,NELEM,NELMAX)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: SURFAC(NELMAX)
        END SUBROUTINE
!
        SUBROUTINE SURVOL(SURFAC, XEL,YEL,ZEL,NELEM,NELMAX,IELM)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: IELM,NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN) :: YEL(NELMAX,*)
      DOUBLE PRECISION, INTENT(IN) :: ZEL(NELMAX,*)
        END SUBROUTINE
!
        SUBROUTINE TNOMER
     &(X, XA,TYPEXA,B,IKLE,NELEM,NELMAX,NPOIN,IELM,DITR,COPY,LV)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: IELM,NPOIN,NELEM,NELMAX,LV
      INTEGER, INTENT(IN) :: IKLE(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: X(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: XA(NELMAX,*),B(NPOIN)
      CHARACTER*(*), INTENT(IN) :: TYPEXA,DITR
      LOGICAL, INTENT(IN) :: COPY
        END SUBROUTINE
!
        SUBROUTINE TOPOGR
     &(ZF,ZREF,ZFE,IKLE,IFABOR,NBOR,NELBOR,NULONE,
     & ITRA05,ITRA02,ITRA03,NELEM,NPTFR,NPOIN,MXPTVS)
      IMPLICIT NONE
      INTEGER, INTENT(IN)    :: NELEM,NPTFR,NPOIN,MXPTVS
      INTEGER, INTENT(IN)    :: IKLE(NELEM,3),IFABOR(NELEM,3)
      INTEGER, INTENT(IN)    :: NBOR(NPTFR),NELBOR(NPTFR),NULONE(NPTFR)
      INTEGER, INTENT(INOUT) :: ITRA05(NPOIN),ITRA02(NPOIN)
      INTEGER, INTENT(INOUT) :: ITRA03(NPOIN)
      DOUBLE PRECISION, INTENT(INOUT) :: ZFE(NELEM),ZREF(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: ZF(NPOIN)
        END SUBROUTINE
!
        SUBROUTINE TRACVF
     &(F,FN,FSCEXP,H,HN,FXMAT,FXMATPAR,
     & V2DPAR,UNSV2D,DDT,FXBOR,FBOR,SMH,YASMH,T1,T2,T4,T5,T6,T7,T8,
     & MESH,LIMTRA,KDIR,KDDL,OPTSOU,IOPT2,FLBORTRA,MSK,DT)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)           :: KDIR,KDDL,OPTSOU,LIMTRA(*)
      INTEGER, INTENT(IN)           :: IOPT2
      DOUBLE PRECISION, INTENT(IN)  :: DDT,DT
      TYPE(BIEF_OBJ), INTENT(INOUT) :: F,T1,T2,T4,T5,T6,T7,T8,FLBORTRA
      TYPE(BIEF_OBJ), INTENT(IN)    :: FN,H,HN,V2DPAR,SMH,FBOR,FSCEXP
      TYPE(BIEF_OBJ), INTENT(IN)    :: FXBOR,UNSV2D
      DOUBLE PRECISION, INTENT(IN)  :: FXMAT(*),FXMATPAR(*)
      TYPE(BIEF_MESH), INTENT(INOUT):: MESH
      LOGICAL, INTENT(IN)           :: YASMH,MSK
        END SUBROUTINE
!
        SUBROUTINE TRID3D(XAUX,X,B,NPOIN,NPOIN2)
        IMPLICIT NONE
        INTEGER, INTENT(IN) :: NPOIN,NPOIN2
        DOUBLE PRECISION, INTENT(IN)    :: B(NPOIN2,*)
        DOUBLE PRECISION, INTENT(INOUT) :: XAUX(NPOIN,*),X(NPOIN2,*)
        END SUBROUTINE
!
        DOUBLE PRECISION FUNCTION TSLOC(YEAR,MONTH,DAY,HOUR,MIN,SEC,AT)
      IMPLICIT NONE
      INTEGER, INTENT(IN)          :: MONTH,DAY,HOUR,MIN,SEC
      INTEGER, INTENT(INOUT)       :: YEAR
      DOUBLE PRECISION, INTENT(IN) :: AT
        END FUNCTION
!
        SUBROUTINE TVF
     &(F,FN,FC,H,FXMAT,FXMATPAR,
     & UNSV2D,DT,FXBOR,FXBORPAR,T7,FBOR,SMH,YASMH,FSCEXP,
     & NSEG,NPOIN,NPTFR,GLOSEG,SIZGLO,NBOR,LIMTRA,KDIR,KDDL,OPTSOU,HLIN,
     & IOPT2,FLBORTRA,SURNIT,MESH,SF)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)             :: NSEG,NPOIN,NPTFR,KDIR,KDDL
      INTEGER, INTENT(IN)             :: SIZGLO,OPTSOU,IOPT2
      INTEGER, INTENT(IN)             :: GLOSEG(SIZGLO,2)
      INTEGER, INTENT(IN)             :: NBOR(NPTFR),LIMTRA(NPTFR)
      DOUBLE PRECISION, INTENT(IN)    :: DT,SURNIT
      DOUBLE PRECISION, INTENT(INOUT) :: FLBORTRA(NPTFR)
      DOUBLE PRECISION, INTENT(INOUT) :: F(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FXBOR(NPTFR)
      DOUBLE PRECISION, INTENT(IN)    :: FC(NPOIN),H(NPOIN),HLIN(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: SMH(NPOIN),UNSV2D(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FSCEXP(NPOIN),FN(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FBOR(NPTFR),FXBORPAR(NPOIN)
      DOUBLE PRECISION, INTENT(IN)    :: FXMAT(NSEG),FXMATPAR(NSEG)
      LOGICAL, INTENT(IN)             :: YASMH
      TYPE(BIEF_OBJ), INTENT(INOUT)   :: T7,SF
      TYPE(BIEF_MESH), INTENT(INOUT)  :: MESH
        END SUBROUTINE
!
        SUBROUTINE UM1X04(X1,X2,D12)
          USE BIEF_DEF
          IMPLICIT NONE
          TYPE(BIEF_OBJ), INTENT(INOUT) :: X1
          TYPE(BIEF_OBJ), INTENT(IN)    :: X2,D12
        END SUBROUTINE
!
        SUBROUTINE UM1X09(X1,X2,X3,D12,D13,D23)
      USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X1,X2
      TYPE(BIEF_OBJ), INTENT(IN)    :: X3,D12,D13,D23
        END SUBROUTINE
!
        SUBROUTINE UM1X(X,D,S)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN)           :: S
      TYPE(BIEF_OBJ), INTENT(INOUT) :: X
      TYPE(BIEF_OBJ), INTENT(IN)    :: D
        END SUBROUTINE
!
        SUBROUTINE VC00AA(XMUL,SURFAC,NELEM,NELMAX,W1,W2,W3)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC00BB( XMUL,SURFAC,NELEM,NELMAX,W1,W2,W3,W4 )
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC00CC
     &(XMUL,SURFAC,NELEM,NELMAX,W1,W2,W3,W4,W5,W6)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      DOUBLE PRECISION, INTENT(INOUT):: W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT):: W4(NELMAX),W5(NELMAX),W6(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC00FF
     &( XMUL,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,IKLE4,NBOR,NELEM,NELMAX,W1,W2,W3,W4 )
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: NBOR(*)
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC00FT
     &( XMUL,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,NBOR,NELEM,NELMAX,W1,W2,W3)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: NBOR(*)
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC00PP2
     &( XMUL,Z,SURFAC,
     &  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
     &  W1,W2,W3,W4,W5,W6)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: Z(*),SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT)::W4(NELMAX),W5(NELMAX),W6(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC00PP
     &( XMUL,Z,SURFAC,
     &  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
     &  W1,W2,W3,W4,W5,W6)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: Z(*)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W5(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W6(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC00TT
     &( XMUL,X,Y,Z,SURFAC,IKLE1,IKLE2,IKLE3,IKLE4,
     &  NELEM,NELMAX,W1,W2,W3,W4)
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC01AA
     &( XMUL,SF,F,SURFAC,
     &  IKLE1,IKLE2,IKLE3,NELEM,NELMAX,
     &  W1,W2,W3 )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN)      :: SF
      DOUBLE PRECISION, INTENT(IN)    :: F(*)
        END SUBROUTINE
!
        SUBROUTINE VC01BB
     &( XMUL,SF,F,SURFAC,
     &  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,
     &  W1,W2,W3,W4 )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      TYPE(BIEF_OBJ),   INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
        END SUBROUTINE
!
        SUBROUTINE VC01FF
     &( XMUL,SF,F,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,IKLE4,NBOR,NELEM,NELMAX,W1,W2,W3,W4 )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: NBOR(*)
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
      TYPE(BIEF_OBJ), INTENT(IN)   :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
        END SUBROUTINE
!
        SUBROUTINE VC01FT
     &( XMUL,SF,F,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,NBOR,NELEM,NELMAX,W1,W2,W3)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: NBOR(*)
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
        END SUBROUTINE
!
        SUBROUTINE VC01FT2
     &( XMUL,SF,F,SG,G,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,NBOR,NELEM,NELMAX,W1,W2,W3)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: NBOR(*)
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN) :: SF,SG
      DOUBLE PRECISION, INTENT(IN) :: F(*),G(*)
        END SUBROUTINE
!
        SUBROUTINE VC01OO
     &( XMUL,SF,F,LGSEG,IKLE1,IKLE2,NBOR,NELEM,NELMAX,W1,W2 )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: NBOR(NELMAX,2)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: LGSEG(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
        END SUBROUTINE
!
        SUBROUTINE VC01PP
     &( XMUL,SF,F,Z,SURFAC,
     &  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
     &  W1,W2,W3,W4,W5,W6)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: Z(*)
      DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
      DOUBLE PRECISION,INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION,INTENT(INOUT)::W4(NELMAX),W5(NELMAX),W6(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      TYPE(BIEF_OBJ),   INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
        END SUBROUTINE
!
        SUBROUTINE VC01TT0
     &( XMUL,SF,F,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,W)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
        END SUBROUTINE
!
        SUBROUTINE VC01TT
     &( XMUL,SF,F,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,W1,W2,W3,W4)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN) :: SF
      DOUBLE PRECISION, INTENT(IN) :: F(*)
        END SUBROUTINE
!
        SUBROUTINE VC03AA
     &( XMUL,SF,SG,SH,SU,SV,F,G,H,U,V,
     &  XEL,YEL,SURFAC,
     &  IKLE1,IKLE2,IKLE3,NELEM,NELMAX,
     &  W1,W2,W3 )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: XEL(NELMAX,*),YEL(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT):: W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN) :: SF,SG,SH,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: F(*),G(*),H(*),U(*),V(*)
        END SUBROUTINE
!
        SUBROUTINE VC03BB
     &( XMUL,SF,SG,SH,SU,SV,F,G,H,U,V,XEL,YEL,SURFAC,
     &  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,W1,W2,W3,W4 )
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN)   :: SF,SG,SH,SU,SV
      DOUBLE PRECISION, INTENT(IN) :: F(*),G(*),H(*),U(*),V(*)
        END SUBROUTINE
!
        SUBROUTINE VC04AA
     &( XMUL,SU,SV,U,V,XEL,YEL,
     &  IKLE1,IKLE2,IKLE3,NELEM,NELMAX,W1,W2,W3,SPECAD)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: XEL(NELMAX,*),YEL(NELMAX,*)
      DOUBLE PRECISION, INTENT(INOUT):: W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN)     :: SU,SV
      DOUBLE PRECISION, INTENT(IN)   :: U(*),V(*)
      LOGICAL, INTENT(IN)            :: SPECAD
        END SUBROUTINE
!
        SUBROUTINE VC04PP
     &( XMUL,SU,SV,SW,U,V,W,SF,SG,SH,F,G,H,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
     &  W1,W2,W3,W4,W5,W6,SPECAD,FORMUL,NPLAN)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX,NPLAN
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   ::X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT)::W4(NELMAX),W5(NELMAX),W6(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   ::XMUL
      LOGICAL, INTENT(IN) :: SPECAD
      CHARACTER(LEN=16), INTENT(IN) :: FORMUL
      TYPE(BIEF_OBJ),   INTENT(IN)  :: SU,SV,SW,SF,SG,SH
      DOUBLE PRECISION, INTENT(IN)  :: U(*),V(*),W(*),F(*),G(*),H(*)
        END SUBROUTINE
!
        SUBROUTINE VC04TT
     &( XMUL,SU,SV,SW,U,V,W,X,Y,Z,
     &  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,
     &  W1,W2,W3,W4,FORMUL)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
      INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
      DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
      DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
      DOUBLE PRECISION, INTENT(IN)    :: XMUL
      CHARACTER(LEN=16), INTENT(IN)   :: FORMUL
      TYPE(BIEF_OBJ),   INTENT(IN)    :: SU,SV,SW
      DOUBLE PRECISION, INTENT(IN)    :: U(*),V(*),W(*)
        END SUBROUTINE
!
        SUBROUTINE VC05AA
     &(XMUL,SW,W,SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,W1,W2,W3)
      USE BIEF_DEF
      IMPLICIT NONE
      INTEGER, INTENT(IN) :: NELEM,NELMAX
      INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
      DOUBLE PRECISION, INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: SURFAC(NELMAX)
      DOUBLE PRECISION, INTENT(IN)   :: XMUL
      TYPE(BIEF_OBJ), INTENT(IN)     :: SW
      DOUBLE PRECISION, INTENT(IN)   :: W(*)
        END SUBROUTINE
!
!       SUBROUTINE VC05FF
!    &( XMUL,SU,SV,U,V,X,Y,Z,
!    &  IKLE1,IKLE2,IKLE3,IKLE4,NBOR,NELEM,NELMAX,W1,W2,W3,W4)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: NBOR(*)
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN)   :: SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC05FT
!    &( XMUL,SU,SV,U,V,X,Y,Z,
!    &  IKLE1,IKLE2,IKLE3,NBOR,NELEM,NELMAX,W1,W2,W3)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NBOR(*),NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)   :: X(*),Y(*),Z(*)
!     DOUBLE PRECISION, INTENT(INOUT):: W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)   :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN)     :: SU,SV
!     DOUBLE PRECISION, INTENT(IN)   :: U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC05OO
!    &(XMUL,SU,SV,U,V,XNOR,YNOR,LGSEG,IKLE,NBOR,NELEM,NELMAX,W1,W2)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE(NELMAX,*)
!     INTEGER, INTENT(IN) :: NBOR(*)
!     DOUBLE PRECISION, INTENT(IN)    :: XNOR(NELMAX),YNOR(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: LGSEG(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ)  , INTENT(IN) :: SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC08AA
!    &(XMUL,SF,SU,SV,F,U,V,XEL,YEL,IKLE,NELEM,NELMAX,W1,W2,W3,FORMUL)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE(NELMAX,6)
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN)   :: SF,SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
!     CHARACTER(LEN=16), INTENT(IN) :: FORMUL
!       END SUBROUTINE
!
!       SUBROUTINE VC08BB
!    &( XMUL,SF,SU,SV,F,U,V,XEL,YEL,
!    &  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,
!    &  W1,W2,W3,W4 , FORMUL )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX*3),YEL(NELMAX*3),XMUL
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(4*NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE1(4*NELMAX)
!     INTEGER, INTENT(IN) :: IKLE2(NELMAX),IKLE3(NELMAX),IKLE4(NELMAX)
!     CHARACTER(LEN=16), INTENT(IN) :: FORMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC08CC
!    &(XMUL,SF,SU,SV,F,U,V,XEL,YEL,
!    & IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
!    & W1,W2,W3,W4,W5,W6,FORMUL )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX*3),YEL(NELMAX*3),XMUL
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(6*NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W5(NELMAX),W6(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE1(6*NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE5(NELMAX),IKLE6(NELMAX)
!     CHARACTER(LEN=16), INTENT(IN) :: FORMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC08PP
!    &( XMUL,SF,SU,SV,SW,F,U,V,W,X,Y,Z,
!    &  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
!    &  W1,W2,W3,W4,W5,W6 )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     DOUBLE PRECISION, INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT)::W4(NELMAX),W5(NELMAX),W6(NELMAX)
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV,SW
!     DOUBLE PRECISION, INTENT(IN) ::F(*),U(*),V(*),W(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC08TT
!    &( XMUL,SF,SU,SV,SW,F,U,V,W,X,Y,Z,
!    &  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,
!    &  W1,W2,W3,W4)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*),XMUL
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     TYPE(BIEF_OBJ),   INTENT(IN) :: SF,SU,SV,SW
!     DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*),W(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC09AA
!    &( XMUL,SF,SG,SU,SV,F,G,U,V,
!    &  XEL,YEL,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,W1,W2,W3 )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SG,SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: F(*),G(*),U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC10OO
!    &( XMUL,SF,SU,SV,F,U,V,XNOR,YNOR,LGSEG,
!    &  IKLE,NBOR,NELEM,NELMAX,W1,W2)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN)             :: NELEM,NELMAX
!     INTEGER, INTENT(IN)             :: IKLE(NELMAX,*),NBOR(*)
!     DOUBLE PRECISION, INTENT(IN)    :: XNOR(NELMAX),YNOR(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: LGSEG(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN)      :: SF,SU,SV
!     DOUBLE PRECISION, INTENT(IN)    :: F(*),U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC11AA2
!    &( XMUL,SF,SG,SH,F,G,H,XEL,YEL,
!    &  IKLE1,IKLE2,IKLE3,NELEM,NELMAX,W1,W2,W3 , ICOORD )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION,INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SG,SH
!     DOUBLE PRECISION, INTENT(IN) :: F(*),G(*),H(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC11AA
!    &( XMUL,SF,SG,F,G,XEL,YEL,
!    &  IKLE1,IKLE2,IKLE3,NELEM,NELMAX,W1,W2,W3 , ICOORD )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SG
!     DOUBLE PRECISION, INTENT(IN) :: F(*),G(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC11BB
!    *( XMUL,SF,SG,F,G,XEL,YEL,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,W1,W2,W3,W4 , ICOORD )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN)   :: SF,SG
!     DOUBLE PRECISION, INTENT(IN) :: F(*),G(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC11PP
!    *( XMUL,SF,SG,F,G,X,Y,Z,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
!    *  W1,W2,W3,W4,W5,W6 , ICOORD )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)   ::X(*),Y(*),Z(*),XMUL
!     DOUBLE PRECISION, INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT)::W4(NELMAX),W5(NELMAX),W6(NELMAX)
!     TYPE(BIEF_OBJ) :: SF,SG
!     DOUBLE PRECISION F(*),G(*)
!       END SUBROUTINE
!
!       SUBROUTINE WRITE_DATA
!    &(FFORMAT,FILERES,NVARS,TIME,TIMESTEP,OUTVAR,NOMVAR,BVARSOR,N)
!       USE BIEF_DEF
!       IMPLICIT NONE
!       CHARACTER(LEN=8), INTENT(IN)          :: FFORMAT
!       INTEGER,          INTENT(IN)          :: FILERES,N
!       INTEGER,          INTENT(IN)          :: NVARS
!       DOUBLE PRECISION, INTENT(IN)          :: TIME
!       INTEGER,          INTENT(IN)          :: TIMESTEP
!       CHARACTER(LEN=32),DIMENSION(NVARS), INTENT(IN) :: NOMVAR
!       LOGICAL, DIMENSION(NVARS), INTENT(IN) :: OUTVAR
!       TYPE(BIEF_OBJ),            INTENT(IN) :: BVARSOR
!       END SUBROUTINE
!
!       SUBROUTINE VC13AA
!    *( XMUL,SF,F,XEL,YEL,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,W1,W2,W3 , ICOORD )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF
!     DOUBLE PRECISION, INTENT(IN) :: F(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC13BB
!    *( XMUL,SF,F,XEL,YEL,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,
!    *  W1,W2,W3,W4,ICOORD )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF
!     DOUBLE PRECISION, INTENT(IN) :: F(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC13CC
!    *( XMUL,SF,F,XEL,YEL,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,
!    *  NELEM,NELMAX,
!    *  W1,W2,W3,W4,W5,W6,ICOORD )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W5(NELMAX),W6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF
!     DOUBLE PRECISION, INTENT(IN) :: F(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC13PP2
!    *( XMUL,SF,F,X,Y,Z,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
!    *  W1,W2,W3,W4,W5,W6,ICOORD)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: X(*),Y(*),Z(*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) ::W4(NELMAX),W5(NELMAX),W6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN)      :: SF
!     DOUBLE PRECISION, INTENT(IN)    :: F(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC13PP
!    *( XMUL,SF,F,X,Y,Z,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
!    *  W1,W2,W3,W4,W5,W6 , ICOORD , FORMUL )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) ::W4(NELMAX),W5(NELMAX),W6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF
!     DOUBLE PRECISION, INTENT(IN) :: F(*)
!     CHARACTER(LEN=16), INTENT(IN) :: FORMUL
!       END SUBROUTINE
!
!       SUBROUTINE VC13TT
!    *( XMUL,SF,F,X,Y,Z,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,
!    *  W1,W2,W3,W4,ICOORD , FORMUL )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX,ICOORD
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(NELMAX),W2(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W3(NELMAX),W4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF
!     DOUBLE PRECISION, INTENT(IN) :: F(*)
!     CHARACTER(LEN=16), INTENT(IN) :: FORMUL
!       END SUBROUTINE
!
!       SUBROUTINE VC14AA
!    *( XMUL,SU,SV,U,V,XEL,YEL,SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,
!    *  W1,W2,W3)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC15AA
!    *( XMUL,SF,SU,SV,F,U,V,
!    *  XEL,YEL,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,NELEM,NELMAX,
!    *  W1,W2,W3)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE3(NELMAX),IKLE4(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC16AA
!    *( XMUL,SF,SG,SU,SV,F,G,U,V,
!    *  XEL,YEL,SURFAC,
!    *  IKLE1,IKLE2,IKLE3,NELEM,NELMAX,
!    *  W1,W2,W3 )
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION,INTENT(INOUT)::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: SURFAC(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: XMUL
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SG,SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: F(*),G(*),U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC18PP
!    *( XMUL,SF,SU,SV,F,U,V,X,Y,Z,
!    *  IKLE1,IKLE2,IKLE3,IKLE4,IKLE5,IKLE6,NELEM,NELMAX,
!    *  W1,W2,W3)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     INTEGER, INTENT(IN) :: IKLE4(NELMAX),IKLE5(NELMAX),IKLE6(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: X(*),Y(*),Z(*),XMUL
!     DOUBLE PRECISION, INTENT(INOUT) ::W1(NELMAX),W2(NELMAX),W3(NELMAX)
!     TYPE(BIEF_OBJ), INTENT(IN) :: SF,SU,SV
!     DOUBLE PRECISION, INTENT(IN) :: F(*),U(*),V(*)
!       END SUBROUTINE
!
!       SUBROUTINE VC19AA
!    *( XMUL,SF,SG,SH,SU,SV,F,G,H,U,V,
!    *  XEL,YEL,SURFAC,IKLE1,IKLE2,IKLE3,NELEM,NELMAX,W1,W2,W3,FORMUL)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELEM,NELMAX
!     INTEGER, INTENT(IN) :: IKLE1(NELMAX),IKLE2(NELMAX),IKLE3(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(NELMAX,*),YEL(NELMAX,*)
!     DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
!     DOUBLE PRECISION, INTENT(INOUT) :: W1(*),W2(*),W3(*)
!     TYPE(BIEF_OBJ), INTENT(IN)    :: SF,SH,SG,SU,SV
!     DOUBLE PRECISION, INTENT(IN)  :: F(*),G(*),H(NELMAX,3),U(*),V(*)
!     CHARACTER(LEN=16), INTENT(IN) :: FORMUL
!       END SUBROUTINE
!
!       SUBROUTINE VECLE3(LV,IKLE,NELEM,NELMAX,NPOIN,V)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(INOUT)          :: LV
!     INTEGER, INTENT(IN)             :: NELEM,NELMAX,NPOIN
!     INTEGER, INTENT(IN)             :: IKLE(NELMAX,3)
!     DOUBLE PRECISION, INTENT(INOUT) :: V(NPOIN)
!       END SUBROUTINE
!
!       SUBROUTINE VECLE4(LV,IKLE,NELEM,NELMAX,NPOIN,V)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(INOUT) :: LV
!     INTEGER, INTENT(IN)    :: NELEM,NELMAX,NPOIN
!     INTEGER, INTENT(IN)    :: IKLE(NELMAX,4)
!     DOUBLE PRECISION, INTENT(INOUT) :: V(NPOIN)
!       END SUBROUTINE
!
!       SUBROUTINE VECLE6(LV,IKLE,NELEM,NELMAX,NPOIN,V)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(INOUT) :: LV
!     INTEGER, INTENT(IN)    :: NELEM,NELMAX,NPOIN
!     INTEGER, INTENT(IN)    :: IKLE(NELMAX,6)
!     DOUBLE PRECISION, INTENT(INOUT) :: V(NPOIN)
!       END SUBROUTINE
!
!       SUBROUTINE VECLEN(LV,NDP,IKLE,NELEM,NELMAX,NPOIN,V)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(INOUT) :: LV
!     INTEGER, INTENT(IN)    :: NELEM,NELMAX,NDP,NPOIN
!     INTEGER, INTENT(IN)    :: IKLE(NELMAX,NDP)
!     DOUBLE PRECISION, INTENT(INOUT) :: V(NPOIN)
!       END SUBROUTINE
!
        SUBROUTINE VECTOR
     &  (VEC,OP,FORMUL,IELM1,XMUL,F,G,H,U,V,W,MESH,MSK,MASKEL)
          USE BIEF_DEF
      IMPLICIT NONE
      TYPE(BIEF_OBJ),    INTENT(INOUT) :: VEC
      DOUBLE PRECISION,  INTENT(IN)    :: XMUL
      INTEGER,           INTENT(IN)    :: IELM1
      LOGICAL,           INTENT(IN)    :: MSK
      CHARACTER(LEN=16), INTENT(IN)    :: FORMUL
      CHARACTER(LEN=1),  INTENT(IN)    :: OP
      TYPE(BIEF_OBJ),    INTENT(IN)    :: F,G,H,U,V,W,MASKEL
      TYPE(BIEF_MESH),   INTENT(INOUT) :: MESH
        END SUBROUTINE
!
!       SUBROUTINE VECTOS
!    *(VEC,OP,FORMUL,
!    * XMUL,F,G,H,U,V,W,SF,SG,SH,SU,SV,SW,
!    * T,LEGO,
!    * XEL,YEL,ZEL, SURFAC,IKLE,NBOR,
!    * XNOR,YNOR,ZNOR,NPT,NELEM,NELMAX,IELM1,LV,MSK,MASKEL,MESH)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NELMAX,NPT,NELEM,IELM1,LV
!     INTEGER, INTENT(IN) :: IKLE(NELMAX,*),NBOR(*)
!     DOUBLE PRECISION, INTENT(IN)    :: SURFAC(NELMAX)
!     DOUBLE PRECISION, INTENT(IN)    :: XEL(*),YEL(*),ZEL(*)
!     DOUBLE PRECISION, INTENT(IN)    :: XNOR(*),YNOR(*),ZNOR(*)
!     DOUBLE PRECISION, INTENT(INOUT) :: T(NELMAX,*),VEC(*)
!     DOUBLE PRECISION, INTENT(IN)    :: XMUL,MASKEL(NELMAX)
!     DOUBLE PRECISION, INTENT(IN) :: F(*),G(*),H(*),U(*),V(*),W(*)
!     TYPE(BIEF_OBJ), INTENT(IN)      :: SF,SG,SH,SU,SV,SW
!     TYPE(BIEF_MESH), INTENT(INOUT) :: MESH
!     LOGICAL, INTENT(IN) :: MSK,LEGO
!     CHARACTER(LEN=16), INTENT(IN) :: FORMUL
!     CHARACTER(LEN=1), INTENT(IN) :: OP
!       END SUBROUTINE
!
!       SUBROUTINE VGFPSI
!    *  (RES,IELM,U,V,F,DT,XMUL,CFLMAX,T1,T2,MESH,MSK,MASKEL)
!         USE BIEF_DEF
!         IMPLICIT NONE
!         LOGICAL         , INTENT(IN)    :: MSK
!         DOUBLE PRECISION, INTENT(OUT)   :: CFLMAX
!         DOUBLE PRECISION, INTENT(IN)    :: DT,XMUL
!         TYPE(BIEF_OBJ)  , INTENT(INOUT) :: RES,T1,T2
!         TYPE(BIEF_OBJ)  , INTENT(IN)    :: U,V,F,MASKEL
!         TYPE(BIEF_MESH) , INTENT(INOUT) :: MESH
!         INTEGER         , INTENT(IN)    :: IELM
!       END SUBROUTINE
!
!       SUBROUTINE VOISIN
!    *(IFABOR,NELEM,NELMAX,IELM,IKLE,SIZIKL,
!    * NPOIN,NACHB,NBOR,NPTFR,IADR,NVOIS)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN) :: NPTFR,SIZIKL,NELEM,NELMAX,IELM,NPOIN
!     INTEGER, INTENT(IN) :: NBOR(NPTFR),NACHB(NBMAXNSHARE,*)
!     INTEGER, INTENT(IN) :: IKLE(SIZIKL,*)
!     INTEGER, INTENT(INOUT) :: IFABOR(NELMAX,*)
!     INTEGER, INTENT(INOUT) :: NVOIS(NPOIN),IADR(NPOIN)
!       END SUBROUTINE
!
!       SUBROUTINE VOISIN31
!    *(IFABOR,NELEM,NELMAX,IELM,IKLE,SIZIKL,
!    * NPOIN,NACHB,NBOR,NPTFR,LIHBOR,KLOG,IKLESTR,NELEMTOTAL,NELEB2)
!     USE BIEF_DEF
!     IMPLICIT NONE
!     INTEGER, INTENT(IN   ) :: IELM
!     INTEGER, INTENT(IN   ) :: NPTFR
!     INTEGER, INTENT(IN   ) :: NELEM
!     INTEGER, INTENT(IN   ) :: NELMAX
!     INTEGER, INTENT(IN   ) :: NPOIN
!     INTEGER, INTENT(IN   ) :: SIZIKL
!     INTEGER, INTENT(IN   ) :: NBOR(NPTFR)
!     INTEGER, INTENT(IN   ) :: NACHB(NBMAXNSHARE,*)
!     INTEGER, INTENT(INOUT) :: IFABOR(NELMAX,4)
!     INTEGER, INTENT(IN   ) :: IKLE(SIZIKL,4)
!     INTEGER, INTENT(IN   ) :: LIHBOR(NPTFR)
!     INTEGER, INTENT(IN   ) :: KLOG
!     INTEGER, INTENT(IN   ) :: NELEMTOTAL
!     INTEGER, INTENT(IN   ) :: IKLESTR(NELEMTOTAL,3)
!     INTEGER, INTENT(IN   ) :: NELEB2
!       END SUBROUTINE
!
      END INTERFACE
!
!=======================================================================
!
      END MODULE BIEF
