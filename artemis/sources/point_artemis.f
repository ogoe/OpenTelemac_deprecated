C                       ************************
                        SUBROUTINE POINT_ARTEMIS
C                       ************************
C
C***********************************************************************
C
C  ARTEMIS VERSION 6.0        21/08/00 D. AELBRECHT (LNH) 01 30 87 74 12
C
C  LINKED TO BIEF VERSION 5.0 24/04/97 J-M HERVOUET (LNH) 01 30 87 80 18
C
C***********************************************************************
C
C     FONCTION  : ALLOCATIONS DES STRUCTURES
C
C-----------------------------------------------------------------------
C
C  APPELE PAR : HOMERE_ARTEMIS
C
C***********************************************************************
C              
      USE BIEF
      USE DECLARATIONS_TELEMAC
      USE DECLARATIONS_ARTEMIS
C
      IMPLICIT NONE
      INTEGER LNG,LU
      COMMON/INFO/LNG,LU
C
      INTEGER NDS(0:81,7)
C
      COMMON/NODES/NDS
C
C+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
C
C
      INTEGER ISYM,MEMW1,INOSYM,ISTOP,NTR,NTRBD
      INTEGER, TARGET :: TMP=1029
      INTEGER CFG(2),CFGBOR(2),I,j
      DOUBLE PRECISION :: DBID
C-----------------------------------------------------------------------
C
      IF(LISTIN) THEN
         IF(LNG.EQ.1) WRITE(LU,20)
         IF(LNG.EQ.2) WRITE(LU,21)
      ENDIF
20    FORMAT(1X,///,26X,'*****************************',/,
     *26X,              '* ALLOCATION DE LA MEMOIRE  *',/,
     *26X,              '*****************************',/)
21    FORMAT(1X,///,26X,'*****************************',/,
     *26X,              '*    MEMORY ORGANIZATION    *',/,
     *26X,              '*****************************',/)
C
C-----------------------------------------------------------------------
C
C  PARAMETRES DEPENDANT DU TYPE D'ELEMENT : (VOIR AUSSI NDP)
C  ISYM ET INOSYM : SERVENT A DIMENSIONNER LES TABLEAUX CONTENANT LA
C                   PARTIE EXTRADIAGONALE DES MATRICES.
C
      ISYM=3
      INOSYM=6
      IELM = 11
      IELM0 = 10
      IELMB = 1
      IELMB0 = 0
 

C TYPE DE STOCKAGE ET PRODUIT MATRICE X VECTEUR
C
      CFG(1) = OPTASS
      CFG(2) = PRODUC
C     CFG IMPOSE POUR LES MATRICES DE BORD
      CFGBOR(1) = 1
      CFGBOR(2) = 1
      EQUA = 'ARTEMIS'
C
C=======================================================================
C
C     ALLOCATION DE LA STRUCTURE DU MAILLAGE
C
       CALL ALMESH(MESH,'MESH  ',IELM,SPHERI,CFG,ART_FILES(ARTGEO)%LU,
     *     EQUA)
c     
     
      IF (NCSIZE .GT. 1) THEN
         OPEN(UNIT=25,FILE='front_glob.dat')
         READ(25,*) NPOIN_TOT
         READ(25,*) NPTFR_TOT
         ALLOCATE(KP1BOR_TOT(NPTFR_TOT*2))
         ALLOCATE(NBOR_TOT(NPTFR_TOT))
         DO I=1,NPTFR_TOT
            READ(25,*) NBOR_TOT(I)
         END DO 
         DO I=1,2*NPTFR_TOT
            READ(25,*) KP1BOR_TOT(I)
         END DO 
         CLOSE(25)
         ALLOCATE(LIHBORT(NPTFR_TOT))
         ALLOCATE(RPT(NPTFR_TOT))
         ALLOCATE(TETAPT(NPTFR_TOT))
         ALLOCATE(TETABT(NPTFR_TOT))
         ALLOCATE(HBT(NPTFR_TOT))
         ALLOCATE(ALFAPT(NPTFR_TOT))
         ALLOCATE(MASK1T(NPTFR_TOT))
         ALLOCATE(MASK2T(NPTFR_TOT))
         ALLOCATE(MASK3T(NPTFR_TOT))
         ALLOCATE(MASK4T(NPTFR_TOT))
         ALLOCATE(XT(NPOIN_TOT))
         ALLOCATE(YT(NPOIN_TOT))
         ALLOCATE(CGT(NPOIN_TOT))
         ALLOCATE(CTT(NPOIN_TOT))
         ALLOCATE(KT(NPOIN_TOT))
      ELSE
         NPTFR_TOT=MESH%NPTFR
         ALLOCATE(RPT(NPTFR_TOT))
         ALLOCATE(TETAPT(NPTFR_TOT))
         ALLOCATE(TETABT(NPTFR_TOT))
         ALLOCATE(HBT(NPTFR_TOT))
         ALLOCATE(ALFAPT(NPTFR_TOT))
         ALLOCATE(LIHBORT(NPTFR_TOT))
        
         ALLOCATE(NBOR_TOT(NPTFR_TOT))
      END IF







   
     


c         nds(1,5)=nptfr_tot
! A CHANGER PAR NPTFR_TOT 
     
        

C
C     ALIAS POUR CERTAINES COMPOSANTES DU MAILLAGE MESH
C
      IKLE  => MESH%IKLE
      X     => MESH%X%R
      Y     => MESH%Y%R
C
      TMP=MESH%NPTFR
!      MESH%NPTFR=1029
!      MESH%NPTFRX=1029
      NELEM => MESH%NELEM
      NELMAX=> MESH%NELMAX
      NPTFR => MESH%NPTFR
      NPTFRX=> MESH%NPTFRX
      DIM   => MESH%DIM
      TYPELM=> MESH%TYPELM
      NPOIN => MESH%NPOIN
      NPMAX => MESH%NPMAX
      MXPTVS=> MESH%MXPTVS
      MXELVS=> MESH%MXELVS
      LV    => MESH%LV
C      write(*,*) 'FRONTIERE',NPTFR,MESH%NPTFR
C
C-----------------------------------------------------------------------
C
C                     ******************
C                     * TABLEAUX REELS *
C                     ******************
C
C-----------------------------------------------------------------------
C
C
C POTENTIEL
C
      CALL ALLVEC(1,PHIR,'PHIR  ',IELM, 1 , 2 )
      CALL ALLVEC(1,PHII,'PHII  ',IELM, 1 , 2 )
C
C HAUTEUR D'EAU AU REPOS
C
      CALL ALLVEC(1,H,'H     ',IELM, 1 , 2 )
C
C NOMBRE D'ONDE
      CALL ALLVEC(1,K,'K     ',IELM, 1 , 2 )
C
C VITESSES DE PHASE ET DE GROUPE
      CALL ALLVEC(1,C,'C     ',IELM, 1 , 2 )
      CALL ALLVEC(1,CG,'CG    ',IELM, 1 , 2 )
C
C HAUTEUR ET PHASE DE LA HOULE
      CALL ALLVEC(1,HHO,'HHO   ',IELM, 1 , 2 )
      CALL ALLVEC(1,PHAS,'PHAS  ',IELM, 1 , 2 )
C
C VITESSES
      CALL ALLVEC(1,U0,'U0    ',IELM, 1 , 2 )
      CALL ALLVEC(1,V0,'V0    ',IELM, 1 , 2 )
C
C MOYENNES DES SINUS ET COSINUS DE LA DIRECTION DE HOULE
      CALL ALLVEC(1,MCOS,'MCOS  ',IELM, 1 , 2 )
      CALL ALLVEC(1,MSIN,'MSIN  ',IELM, 1 , 2 )
C INCIDENCE DE LA HOULE
      CALL ALLVEC(1,INCI,'INCI  ',IELM, 1 , 2 )
C
C COTES DE LA SURFACE LIBRE ET DU FOND
      CALL ALLVEC(1,S,'S     ',IELM, 1 , 2 )
      CALL ALLVEC(1,ZF,'ZF    ',IELM, 1 , 2 )
C
C COEFFICIENT DE FROTTEMENT (VARIABLE EN ESPACE)
      CALL ALLVEC(1,FW,'FW    ',IELM, 1 , 2 )
C
C HAUTEUR DE LA HOULE ALEATOIRE
C TABLEAU DES PERIODES DE DISCRETISATION DU SPECTRE POUR UN CALCUL EN
C HOULE ALEATOIRE MULTIDIRECTIONNELLE.
C
      IF (ALEMON .OR. ALEMUL) THEN
         CALL ALLVEC(1,HALE,'HALE  ',IELM, 1 , 2 )
         CALL ALLVEC(1,PALE,'PALE  ',NPALE, 1 , 0 )
      ENDIF
C
C COEFFICIENT DE REFLEXION DES PAROIS, ANGLE D'ATTAQUE DE LA HOULE SUR
C LES PAROIS (COMPTE PAR RAPPORT A L'AXE DES X) ET DEPHASAGE INDUIT PAR
C LA PAROI
      CALL ALLVEC(1,RP,'RP    ',IELMB, 1 , 2 )
      CALL ALLVEC(1,TETAP,'TETAP ',IELMB, 1 , 2 )
      CALL ALLVEC(1,ALFAP,'ALFAP ',IELMB, 1 , 2 )
C
C HAUTEUR DE LA HOULE ET ANGLE D'ATTAQUE DE LA HOULE AUX FRONTIERES
C OUVERTES (L'ANGLE EST COMPTE PAR RAPPORT A L'AXE DES X)
      CALL ALLVEC(1,HB,'HB    ',IELMB, 1 , 2 )
      CALL ALLVEC(1,TETAB,'TETAB ',IELMB, 1 , 2 )
C
C TABLEAUX POUR LES VALEURS DU POTENTIEL IMPOSEES AU BORD (DIRICHLET)
      CALL ALLVEC(1,PHIRB,'PHIRB ',IELMB, 1 , 2 )
      CALL ALLVEC(1,PHIIB,'PHIIB ',IELMB, 1 , 2 )
C BLOC DE CES VALEURS :
      CALL ALLBLO(PHIB,'PHIB  ')
      CALL ADDBLO(PHIB,PHIRB)
      CALL ADDBLO(PHIB,PHIIB)
C
C COEFFICIENTS POUR LES CONDITIONS AUX LIMITES
C
      
      CALL ALLVEC(1,APHI1B,'APHI1B',IELMB, 1 , 2 )
      CALL ALLVEC(1,BPHI1B,'BPHI1B',IELMB, 1 , 2 )
      CALL ALLVEC(1,CPHI1B,'CPHI1B',IELMB, 1 , 2 )
      CALL ALLVEC(1,DPHI1B,'DPHI1B',IELMB, 1 , 2 )
      CALL ALLVEC(1,APHI2B,'APHI2B',IELMB, 1 , 2 )
      CALL ALLVEC(1,BPHI2B,'BPHI2B',IELMB, 1 , 2 )
      CALL ALLVEC(1,CPHI2B,'CPHI2B',IELMB, 1 , 2 )
      CALL ALLVEC(1,DPHI2B,'DPHI2B',IELMB, 1 , 2 )
      CALL ALLVEC(1,APHI3B,'APHI3B',IELMB, 1 , 2 )
      CALL ALLVEC(1,BPHI3B,'BPHI3B',IELMB, 1 , 2 )
      CALL ALLVEC(1,CPHI3B,'CPHI3B',IELMB, 1 , 2 )
      CALL ALLVEC(1,DPHI3B,'DPHI3B',IELMB, 1 , 2 )
      CALL ALLVEC(1,APHI4B,'APHI4B',IELMB, 1 , 2 )
      CALL ALLVEC(1,BPHI4B,'BPHI4B',IELMB, 1 , 2 )
      CALL ALLVEC(1,CPHI4B,'CPHI4B',IELMB, 1 , 2 )
      CALL ALLVEC(1,DPHI4B,'DPHI4B',IELMB, 1 , 2 )
C
C
C TABLEAUX DE TRAVAIL (DE DIMENSION NELEM)  (PROBLEME)
      MEMW1 = 10 + 3*NPOIN/NELEM 
C     CETTE PLACE MEMOIRE EST RESERVEE SOUS FORME D'UN
C     TABLEAU P0 AVEC UNE DEUXIEME DIMENSION
      MEMW1 = 1 + MEMW1/NBMPTS(IELM0)
      CALL ALLVEC(1,W1,'W1    ',IELM0,MEMW1,1)
C
C
C TABLEAUX DE TRAVAIL (DIMENSION NPOIN)
C
C  NOMBRE DE TABLEAUX A ALLOUER : NTR
C           14 : POUR CGSTAB =2 X 7
      NTR = 14
C     CAS DE GMRES : NTR DEPEND DE LA DIMENSION DE L'ESPACE DE KRYLOV
      IF(SLVART%SLV.EQ.7) NTR = MAX(NTR,4+4*SLVART%KRYLOV)
C     2 DIAGONALES DE PLUS A STOCKER EN PRECONDITIONNEMENT BLOC-DIAGONAL
      IF(3*(SLVART%PRECON/3).EQ.SLVART%PRECON) NTR = NTR + 2
C
C  ALLOCATIONS : TABLEAUX DE TRAVAIL DE DIMENSION LE NOMBRE MAXIMUM
C                DE DEGRES DE LIBERTE, AU NOMBRE DE NTR
C
C     TB CONTIENDRA LES TABLEAUX T1,T2,...
C
      CALL ALLBLO(TB ,'TB    ')
C
C
      CALL ALLVEC_IN_BLOCK(TB,NTR,1,'T     ',IELM,1,2)
C
C     ALIAS POUR LES 4 PREMIERS TABLEAUX DE TRAVAIL DU BLOC TB
C
      T1 =>TB%ADR( 1)%P
      T2 =>TB%ADR( 2)%P
      T3 =>TB%ADR( 3)%P
      T4 =>TB%ADR( 4)%P
C
C TABLEAUX DE TRAVAIL (DIMENSION NPTFR)
C
      NTRBD = 4
C
C     TBBD CONTIENDRA LES TABLEAUX TBD1,TBD2,...
C
      CALL ALLBLO(TBBD ,'TBBD  ')
C
      CALL ALLVEC_IN_BLOCK(TBBD,NTRBD,1,'TBD   ',IELMB,1,2)
C
C     ALIAS POUR LES 4 PREMIERS TABLEAUX DE TRAVAIL DU BLOC TBBD
C
      TBD1 =>TBBD%ADR( 1)%P
      TBD2 =>TBBD%ADR( 2)%P
      TBD3 =>TBBD%ADR( 3)%P
      TBD4 =>TBBD%ADR( 4)%P
C
C MATRICES
C
      CALL ALLMAT(AM1,'AM1   ',IELM,IELM,CFG,'Q','Q')
      CALL ALLMAT(AM2,'AM2   ',IELM,IELM,CFG,'Q','Q')
      CALL ALLMAT(AM3,'AM3   ',IELM,IELM,CFG,'Q','Q')
      CALL ALLMAT(BM1,'BM1   ',IELM,IELM,CFG,'Q','Q')
      CALL ALLMAT(BM2,'BM2   ',IELM,IELM,CFG,'Q','Q')
C MATRICE DE BORD
      CALL ALLMAT(MBOR,'MBOR  ',IELMB,IELMB,CFGBOR,'Q','Q')
C
C SECONDS MEMBRES
C
      CALL ALLVEC(1,CV1,'CV1   ',IELM, 1 , 2 )
      CALL ALLVEC(1,CV2,'CV2   ',IELM, 1 , 2 )
C
C TABLEAUX POUR LA DISSIPATION :
C
      CALL ALLVEC(1,MU    ,'MU    ',IELM, 1 , 2 )
      CALL ALLVEC(1,MU2   ,'MU2   ',IELM, 1 , 2 )
      CALL ALLVEC(1,QB    ,'QB    ',IELM, 1 , 2 )
      CALL ALLVEC(1,HMU   ,'HMU   ',IELM, 1 , 2 )
      CALL ALLVEC(1,HMUANC,'HMUANC',IELM, 1 , 2 )
C
C TABLEAUX POUR LES CONTRAINTES DE RADIATION
C
      CALL ALLVEC(1,SXX   ,'SXX   ',IELM, 1 , 2 )
      CALL ALLVEC(1,SXY   ,'SXY   ',IELM, 1 , 2 )
      CALL ALLVEC(1,SYY   ,'SYY   ',IELM, 1 , 2 )
      CALL ALLVEC(1,FX    ,'FX    ',IELM, 1 , 2 )
      CALL ALLVEC(1,FY    ,'FY    ',IELM, 1 , 2 )
C
C TABLEAUX POUR LES PERIODES MOYENNES
C
      CALL ALLVEC(1,T01   ,'T01   ',IELM, 1 , 2 )
      CALL ALLVEC(1,T02   ,'T02   ',IELM, 1 , 2 )
      CALL ALLVEC(1,TM    ,'TM    ',IELM, 1 , 2 )
C
C
C MASQUE POUR LES POINTS DE BORD
C
      CALL ALLVEC(1,MASK1,'MASK1 ',IELMB, 1 , 2 )
      CALL ALLVEC(1,MASK2,'MASK2 ',IELMB, 1 , 2 )
      CALL ALLVEC(1,MASK3,'MASK3 ',IELMB, 1 , 2 )
      CALL ALLVEC(1,MASK4,'MASK4 ',IELMB, 1 , 2 )
C
C_V5P6 : CORRECTION POUR PASSAGE EN LINUX
      CALL ALLVEC(1,MASKEL,'MASKEL',NELMAX, 1 , 0 )
      CALL ALLVEC(1,SBID  ,'SBID  ' ,1     , 1 , 0 )
C_V5P6 : FIN DE CORRECTION POUR PASSAGE EN LINUX
C
C BLOC DES MATRICES DANS BERKHO
C
      CALL ALLBLO(MAT,'MAT   ')
      CALL ADDBLO(MAT,AM1)
      CALL ADDBLO(MAT,BM1)
      CALL ADDBLO(MAT,BM2)
      CALL ADDBLO(MAT,AM2)
C
C  BLOC DES INCONNUES DANS BERKHO
C
      CALL ALLBLO(UNK,'UNK   ')
      CALL ADDBLO(UNK,PHIR)
      CALL ADDBLO(UNK,PHII)
C
C  BLOC DES SECONDS MEMBRES DANS BERKHO
C
      CALL ALLBLO(RHS,'RHS   ')
      CALL ADDBLO(RHS,CV1)
      CALL ADDBLO(RHS,CV2)
C
C TABLEAU DES DIRECTIONS DE DISCRETISATION DU SPECTRE POUR UN CALCUL EN
C HOULE ALEATOIRE MULTIDIRECTIONNELLE.
C
      IF (ALEMUL) THEN
         CALL ALLVEC(1,DALE,'DALE  ',NDALE, 1 , 0 )
      ENDIF
C
C TABLEAUX A LA DISPOSITION DE L'UTILISATEUR
C
      CALL ALLBLO(PRIVE ,'PRIVE ')
C
      IF(NPRIV.GT.0) THEN
C       A OPTIMISER (PLACE PERDUE POUR 4-NPRIV TABLEAUX)
C       CES TABLEAUX DOIVENT EXISTER MAIS PEUVENT ETRE VIDES
        CALL ALLVEC_IN_BLOCK(PRIVE,MAX(NPRIV,4),1,'PRIV  ',IELM,1,2)
      ELSE
        CALL ALLVEC_IN_BLOCK(PRIVE,           4,1,'PRIV  ',    0,1,2)
      ENDIF
C
C
C
C --> ER : DEBUT
C --> COURANT
c      IF (COURANT) THEN
         CALL ALLVEC(1, UC ,'UC     ',IELM, 1 , 2 )
         CALL ALLVEC(1, VC ,'VC     ',IELM, 1 , 2 )
C --> PULSATION RELATIVE
         CALL ALLVEC(1, WR ,'WR     ',IELM, 1 , 2 )

C --> VECTEUR REEL INTERMEDIAIRE : VECTEUR D'ONDE ET ERREUR
        CALL ALLVEC(1, KN1 ,'KN1     ',IELM, 1 , 2 )
        CALL ALLVEC(1, KN2 ,'KN2     ',IELM, 1 , 2 )
        CALL ALLVEC(1, KNANC1 ,'KNANC1     ',IELM, 1 , 2 )
        CALL ALLVEC(1, KNANC2 ,'KNANC2     ',IELM, 1 , 2 )
c      ENDIF

C --> ER : FIN      

C  FIN DES REELS
C
C
C_______________________________________________________________________
C
C                         * TABLEAUX ENTIERS *
C_______________________________________________________________________
C
C
      CALL ALLVEC(2,LIUBOR,'LIUBOR',IELMB,1,1)
      CALL ALLVEC(2,LIVBOR,'LIVBOR',IELMB,1,1)
      CALL ALLVEC(2,LIHBOR,'LIHBOR',IELMB,1,1)
      CALL ALLVEC(2,NUMLIQ,'NUMLIQ',IELMB,1,1)
C     
      CALL ALLVEC(2,IT1   ,'IT1   ',   10,1,2)
      CALL ALLVEC(2,IT2   ,'IT2   ',   10,1,2)
      CALL ALLVEC(2,IT3   ,'IT3   ',   10,1,2)
C
      CALL ALLVEC(2,LIDIR ,'LIDIR ',IELMB,2,1)
C
C CONSTRUCTION DU BLOC QUI PERMET DE RELIER UN NOM DE VARIABLE
C A SON TABLEAU
C
      CALL ALLBLO(VARSOR,'VARSOR')
C 01
      IF (ALEMON .OR. ALEMUL) THEN
         CALL ADDBLO(VARSOR,HALE)
      ELSE
         CALL ADDBLO(VARSOR,HHO)
      ENDIF
C 02
      CALL ADDBLO(VARSOR,PHAS)
C 03
      CALL ADDBLO(VARSOR,U0)
C 04
      CALL ADDBLO(VARSOR,V0)
C 05
      CALL ADDBLO(VARSOR,S)
C 06
      CALL ADDBLO(VARSOR,ZF)
C 07
      CALL ADDBLO(VARSOR,H)
C 08
      CALL ADDBLO(VARSOR,C)
C 09
      CALL ADDBLO(VARSOR,CG)
C 10
      CALL ADDBLO(VARSOR,K)
C 11
      CALL ADDBLO(VARSOR,PHIR)
C 12
      CALL ADDBLO(VARSOR,PHII)
C 13
      CALL ADDBLO(VARSOR,PRIVE%ADR(1)%P)
C 14
      CALL ADDBLO(VARSOR,PRIVE%ADR(2)%P)
C 15
      CALL ADDBLO(VARSOR,PRIVE%ADR(3)%P)
C 16
      CALL ADDBLO(VARSOR,PRIVE%ADR(4)%P)
C 17
      CALL ADDBLO(VARSOR,T01)
C 18
      CALL ADDBLO(VARSOR,T02)
C 19
      CALL ADDBLO(VARSOR,TM)
C 20
      CALL ADDBLO(VARSOR,FX)
C 21
      CALL ADDBLO(VARSOR,FY)
C 22
      CALL ADDBLO(VARSOR,INCI)
C 23
      CALL ADDBLO(VARSOR,QB)
C 24
      CALL ADDBLO(VARSOR,SXX)
C 25
      CALL ADDBLO(VARSOR,SXY)
C 26
      CALL ADDBLO(VARSOR,SYY)      
C
C***********************************************************************
C
c     MESH%NPTFR=TMP
c      MESH%NPTFRX=TMP
      NDS(1,5)= MESH%NPTFR
C CONTROLES :
C
      ISTOP=0
      IF(ISTOP.EQ.1) STOP
C
C IMPRESSIONS :
C
      IF(LISTIN) THEN
         IF(LNG.EQ.1) WRITE(LU,22)
         IF(LNG.EQ.2) WRITE(LU,23)
      ENDIF
22    FORMAT(1X,///,21X,'****************************************',/,
     *21X,              '* FIN DE L''ALLOCATION DE LA MEMOIRE  : *',/,
     *21X,              '****************************************',/)
23    FORMAT(1X,///,21X,'*************************************',/,
     *21X,              '*    END OF MEMORY ORGANIZATION:    *',/,
     *21X,              '*************************************',/)
C
C-----------------------------------------------------------------------
C
      RETURN
      END
